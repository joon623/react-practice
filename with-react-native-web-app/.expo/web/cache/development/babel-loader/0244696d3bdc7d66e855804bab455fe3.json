{"ast":null,"code":"import _defineProperty from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"visible\", \"onTransitionComplete\"];\n\nvar _jsxFileName = \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/components/composites/Transitions/PresenceTransition.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { ExitAnimationContext } from '../../primitives/Overlay/ExitAnimationContext';\nimport { Transition } from './Transition';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar PresenceTransition = function PresenceTransition(_ref, ref) {\n  _s();\n\n  var _ref$visible = _ref.visible,\n      visible = _ref$visible === void 0 ? false : _ref$visible,\n      _onTransitionComplete = _ref.onTransitionComplete,\n      rest = _objectWithoutProperties(_ref, _excluded); // const [animationExited, setAnimationExited] = React.useState(!visible);\n\n\n  var _React$useContext = React.useContext(ExitAnimationContext),\n      setExited = _React$useContext.setExited; //TODO: refactor for responsive prop\n\n\n  if (useHasResponsiveProps(rest)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Transition, _objectSpread(_objectSpread({\n    visible: visible,\n    onTransitionComplete: function onTransitionComplete(state) {\n      if (state === 'exited') {\n        setExited(true);\n      } else {\n        setExited(false);\n      }\n\n      _onTransitionComplete && _onTransitionComplete(state);\n    }\n  }, rest), {}, {\n    ref: ref\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PresenceTransition, \"DO9oxq4TJsycjM2J1VnFNPBUTaU=\", false, function () {\n  return [useHasResponsiveProps];\n});\n\n_c = PresenceTransition;\nexport default _c3 = /*#__PURE__*/memo(_c2 = /*#__PURE__*/forwardRef(PresenceTransition));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PresenceTransition\");\n$RefreshReg$(_c2, \"%default%$memo\");\n$RefreshReg$(_c3, \"%default%\");\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/components/composites/Transitions/PresenceTransition.tsx"],"names":["PresenceTransition","visible","onTransitionComplete","rest","setExited","React","useHasResponsiveProps","state","ref","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,SAAA,oBAAA,QAAA,+CAAA;AACA,SAAA,UAAA,QAAA,cAAA;AAEA,SAAA,qBAAA,QAAA,sCAAA;;;AAEA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA,IAAA,EAAA,GAAA,EAGtB;EAAA,EAAA;;EAAA,IAAA,YAAA,GAAA,IAAA,CAFDC,OAEC;EAAA,IAFDA,OAEC,GAAA,YAAA,KAAA,KAAA,CAAA,GAFS,KAET,GAAA,YAAA;EAAA,IAFgBC,qBAEhB,GAAA,IAAA,CAFgBA,oBAEhB;EAAA,IAFyCC,IAEzC,GAAA,wBAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA,CACH;;;EAEA,IAAA,iBAAA,GAAsBE,KAAK,CAALA,UAAAA,CAAtB,oBAAsBA,CAAtB;EAAA,IAAQD,SAAR,GAAA,iBAAA,CAHG,SAGH,CAHG,CAIH;;;EACA,IAAIE,qBAAqB,CAAzB,IAAyB,CAAzB,EAAiC;IAC/B,OAAA,IAAA;EACD;;EAED,OAAA,aACE,OAAA,CAAA,UAAA,EAAA,aAAA,CAAA,aAAA,CAAA;IACE,OAAO,EADT,OAAA;IAEE,oBAAoB,EAAE,SAAA,oBAAA,CAAA,KAAA,EAAW;MAC/B,IAAIC,KAAK,KAAT,QAAA,EAAwB;QACtBH,SAAS,CAATA,IAAS,CAATA;MADF,CAAA,MAEO;QACLA,SAAS,CAATA,KAAS,CAATA;MACD;;MACDF,qBAAoB,IAAIA,qBAAoB,CAA5CA,KAA4C,CAA5CA;IACD;EATH,CAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA;IAWE,GAAG,EAAEM;EAXP,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;IAAA,QAAA,EAAA,YAAA;IAAA,UAAA,EAAA,EAAA;IAAA,YAAA,EAAA;EAAA,CAAA,EADF,KACE,CADF;AAZF,CAAA;;GAAMR,kB;UAQAM,qB;;;KARAN,kB;AA6BN,eAAA,GAAA,GAAA,aAAeS,IAAI,CAAA,GAAA,GAAA,aAACC,UAAU,CAA9B,kBAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { ExitAnimationContext } from '../../primitives/Overlay/ExitAnimationContext';\nimport { Transition } from './Transition';\nimport type { IPresenceTransitionProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PresenceTransition = (\n  { visible = false, onTransitionComplete, ...rest }: IPresenceTransitionProps,\n  ref: any\n) => {\n  // const [animationExited, setAnimationExited] = React.useState(!visible);\n\n  const { setExited } = React.useContext(ExitAnimationContext);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(rest)) {\n    return null;\n  }\n\n  return (\n    <Transition\n      visible={visible}\n      onTransitionComplete={(state) => {\n        if (state === 'exited') {\n          setExited(true);\n        } else {\n          setExited(false);\n        }\n        onTransitionComplete && onTransitionComplete(state);\n      }}\n      {...rest}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(PresenceTransition));\n"]},"metadata":{},"sourceType":"module"}