{"ast":null,"code":"import _defineProperty from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nvar _excluded = [\"nativeID\", \"isRequired\", \"isInvalid\", \"isDisabled\", \"isReadOnly\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport { useId } from '@react-native-aria/utils';\nimport omit from 'lodash.omit';\nimport { ariaAttr } from '../../../utils';\nexport var FormControlContext = /*#__PURE__*/React.createContext({});\nexport function useFormControlProvider(props) {\n  _s();\n\n  var idProp = props.nativeID,\n      isRequired = props.isRequired,\n      isInvalid = props.isInvalid,\n      isDisabled = props.isDisabled,\n      isReadOnly = props.isReadOnly,\n      htmlProps = _objectWithoutProperties(props, _excluded);\n\n  var id = useId(); // Generate all the required ids\n\n  var nativeID = idProp || \"field-\".concat(id);\n  var labelId = \"\".concat(nativeID, \"-label\");\n  var feedbackId = \"\".concat(nativeID, \"-feedback\");\n  var helpTextId = \"\".concat(nativeID, \"-helptext\");\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      hasFeedbackText = _React$useState2[0],\n      setHasFeedbackText = _React$useState2[1];\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      hasHelpText = _React$useState4[0],\n      setHasHelpText = _React$useState4[1];\n\n  var context = {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    hasFeedbackText: hasFeedbackText,\n    setHasFeedbackText: setHasFeedbackText,\n    hasHelpText: hasHelpText,\n    setHasHelpText: setHasHelpText,\n    nativeID: nativeID,\n    labelId: labelId,\n    feedbackId: feedbackId,\n    helpTextId: helpTextId,\n    htmlProps: htmlProps\n  };\n  return context;\n}\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n */\n\n_s(useFormControlProvider, \"Faj03bG/mEHyNBw2U+5dAfQ4JYM=\", false, function () {\n  return [useId];\n});\n\nexport function useFormControl(props) {\n  _s2();\n\n  var _props$nativeID;\n\n  var field = useFormControlContext();\n  var describedBy = []; // Error message must be described first in all scenarios.\n\n  if (field !== null && field !== void 0 && field.hasFeedbackText) describedBy.push(field === null || field === void 0 ? void 0 : field.feedbackId);\n  if (field !== null && field !== void 0 && field.hasHelpText) describedBy.push(field === null || field === void 0 ? void 0 : field.helpTextId);\n  var ariaDescribedBy = describedBy.join(' ');\n  var cleanProps = omit(props, ['isInvalid', 'isDisabled', 'isReadOnly', 'isRequired']);\n  return _objectSpread(_objectSpread({}, cleanProps), {}, {\n    nativeID: (_props$nativeID = props.nativeID) !== null && _props$nativeID !== void 0 ? _props$nativeID : field === null || field === void 0 ? void 0 : field.nativeID,\n    disabled: props.isDisabled || (field === null || field === void 0 ? void 0 : field.isDisabled),\n    readOnly: props.isReadOnly || (field === null || field === void 0 ? void 0 : field.isReadOnly),\n    required: props.isRequired || (field === null || field === void 0 ? void 0 : field.isRequired),\n    accessibilityInvalid: ariaAttr(props.isInvalid || (field === null || field === void 0 ? void 0 : field.isInvalid)),\n    accessibilityRequired: ariaAttr(props.isRequired || (field === null || field === void 0 ? void 0 : field.isRequired)),\n    accessibilityReadOnly: ariaAttr(props.isReadOnly || (field === null || field === void 0 ? void 0 : field.isReadOnly)),\n    accessibilityDescribedBy: ariaDescribedBy || undefined\n  });\n}\n\n_s2(useFormControl, \"d7R3LELfJokCE5uGWhlmp9RX40o=\", false, function () {\n  return [useFormControlContext];\n});\n\nexport var useFormControlContext = function useFormControlContext() {\n  _s3();\n\n  return React.useContext(FormControlContext);\n};\n\n_s3(useFormControlContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/module/components/composites/FormControl/useFormControl.js"],"names":["FormControlContext","React","useFormControlProvider","idProp","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","props","id","useId","nativeID","labelId","feedbackId","helpTextId","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","context","useFormControl","field","useFormControlContext","describedBy","ariaDescribedBy","cleanProps","omit","_props$nativeID","disabled","readOnly","required","accessibilityInvalid","ariaAttr","accessibilityRequired","accessibilityReadOnly","accessibilityDescribedBy","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useId } from '@react-native-aria/utils';\nimport omit from 'lodash.omit';\nimport { ariaAttr } from '../../../utils';\nexport const FormControlContext = /*#__PURE__*/React.createContext({});\nexport function useFormControlProvider(props) {\n  const {\n    nativeID: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const id = useId(); // Generate all the required ids\n\n  const nativeID = idProp || \"field-\".concat(id);\n  const labelId = \"\".concat(nativeID, \"-label\");\n  const feedbackId = \"\".concat(nativeID, \"-feedback\");\n  const helpTextId = \"\".concat(nativeID, \"-helptext\");\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n\n  const [hasFeedbackText, setHasFeedbackText] = React.useState(false);\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n\n  const [hasHelpText, setHasHelpText] = React.useState(false);\n  const context = {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    nativeID,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps\n  };\n  return context;\n}\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n */\n\nexport function useFormControl(props) {\n  var _props$nativeID;\n\n  const field = useFormControlContext();\n  const describedBy = []; // Error message must be described first in all scenarios.\n\n  if (field !== null && field !== void 0 && field.hasFeedbackText) describedBy.push(field === null || field === void 0 ? void 0 : field.feedbackId);\n  if (field !== null && field !== void 0 && field.hasHelpText) describedBy.push(field === null || field === void 0 ? void 0 : field.helpTextId);\n  const ariaDescribedBy = describedBy.join(' ');\n  const cleanProps = omit(props, ['isInvalid', 'isDisabled', 'isReadOnly', 'isRequired']);\n  return { ...cleanProps,\n    nativeID: (_props$nativeID = props.nativeID) !== null && _props$nativeID !== void 0 ? _props$nativeID : field === null || field === void 0 ? void 0 : field.nativeID,\n    disabled: props.isDisabled || (field === null || field === void 0 ? void 0 : field.isDisabled),\n    readOnly: props.isReadOnly || (field === null || field === void 0 ? void 0 : field.isReadOnly),\n    required: props.isRequired || (field === null || field === void 0 ? void 0 : field.isRequired),\n    accessibilityInvalid: ariaAttr(props.isInvalid || (field === null || field === void 0 ? void 0 : field.isInvalid)),\n    accessibilityRequired: ariaAttr(props.isRequired || (field === null || field === void 0 ? void 0 : field.isRequired)),\n    accessibilityReadOnly: ariaAttr(props.isReadOnly || (field === null || field === void 0 ? void 0 : field.isReadOnly)),\n    accessibilityDescribedBy: ariaDescribedBy || undefined\n  };\n}\nexport const useFormControlContext = () => {\n  return React.useContext(FormControlContext);\n};\n//# sourceMappingURL=useFormControl.js.map"]},"metadata":{},"sourceType":"module"}