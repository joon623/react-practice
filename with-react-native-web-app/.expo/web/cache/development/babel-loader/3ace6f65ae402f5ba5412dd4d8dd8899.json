{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { mode, transparentize } from '../tools';\nimport Platform from \"react-native-web/dist/cjs/exports/Platform\";\n\nvar baseStyle = function baseStyle(props) {\n  var primary = props.theme.colors.primary;\n  var focusRing = Platform.OS === 'web' ? {\n    boxShadow: \"\".concat(primary[400], \" 0px 0px 0px 3px\")\n  } : {};\n  return {\n    borderRadius: 'sm',\n    _web: {\n      cursor: props.isDisabled ? 'not-allowed' : props.isLoading ? 'default' : 'pointer'\n    },\n    _focusVisible: {\n      style: props.variant !== 'unstyled' ? _objectSpread({}, focusRing) : {}\n    },\n    _disabled: {\n      opacity: 0.5\n    }\n  };\n};\n\nfunction variantGhost(props) {\n  var colorScheme = props.colorScheme;\n  return {\n    bg: 'transparent',\n    _web: {\n      outlineWidth: 0\n    },\n    _hover: {\n      bg: transparentize(mode(\"\".concat(colorScheme, \".200\"), \"\".concat(colorScheme, \".400\"))(props), 0.5)(props.theme)\n    },\n    _focusVisible: {\n      bg: transparentize(mode(\"\".concat(colorScheme, \".200\"), \"\".concat(colorScheme, \".400\"))(props), 0.5)(props.theme)\n    },\n    _pressed: {\n      bg: transparentize(mode(\"\".concat(colorScheme, \".200\"), \"\".concat(colorScheme, \".500\"))(props), 0.6)(props.theme)\n    }\n  };\n}\n\nfunction variantOutline(props) {\n  var colorScheme = props.colorScheme;\n  return {\n    borderWidth: '1',\n    borderColor: \"\".concat(colorScheme, \".300\"),\n    _icon: {\n      color: mode(\"\".concat(colorScheme, \".500\"), \"\".concat(colorScheme, \".300\"))(props)\n    },\n    _web: {\n      outlineWidth: 0\n    },\n    _hover: {\n      bg: transparentize(mode(\"\".concat(colorScheme, \".200\"), \"\".concat(colorScheme, \".400\"))(props), 0.5)(props.theme)\n    },\n    _focusVisible: {\n      bg: transparentize(mode(\"\".concat(colorScheme, \".200\"), \"\".concat(colorScheme, \".400\"))(props), 0.5)(props.theme)\n    },\n    _pressed: {\n      bg: transparentize(mode(\"\".concat(colorScheme, \".300\"), \"\".concat(colorScheme, \".500\"))(props), 0.6)(props.theme)\n    }\n  };\n}\n\nfunction variantSolid(props) {\n  var colorScheme = props.colorScheme;\n  return {\n    bg: \"\".concat(colorScheme, \".500\"),\n    _web: {\n      outlineWidth: 0\n    },\n    _disabled: {\n      bg: mode(\"trueGray.300\", \"trueGray.600\")(props)\n    },\n    _hover: {\n      bg: \"\".concat(colorScheme, \".600\")\n    },\n    _pressed: {\n      bg: \"\".concat(colorScheme, \".700\")\n    },\n    _focus: {\n      bg: \"\".concat(colorScheme, \".600\")\n    },\n    _icon: {\n      color: mode('gray.50', 'gray.800')(props)\n    }\n  };\n}\n\nfunction variantUnstyled() {\n  return {};\n}\n\nvar variants = {\n  ghost: variantGhost,\n  outline: variantOutline,\n  solid: variantSolid,\n  unstyled: variantUnstyled\n};\nvar defaultProps = {\n  variant: 'ghost',\n  size: 'md',\n  colorScheme: 'primary'\n};\nvar sizes = {\n  lg: {\n    p: 3\n  },\n  md: {\n    p: 2\n  },\n  sm: {\n    p: 1\n  }\n};\nexport default {\n  baseStyle: baseStyle,\n  variants: variants,\n  sizes: sizes,\n  defaultProps: defaultProps\n};","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/theme/v33x-theme/components/icon-button.ts"],"names":["baseStyle","props","primary","focusRing","boxShadow","borderRadius","_web","cursor","_focusVisible","style","_disabled","opacity","colorScheme","bg","outlineWidth","_hover","transparentize","mode","_pressed","borderWidth","borderColor","_icon","color","_focus","variants","ghost","outline","solid","unstyled","variantUnstyled","defaultProps","variant","size","sizes","lg","p","md","sm"],"mappings":"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","sourcesContent":["import { Dict, mode, transparentize } from '../tools';\nimport { Platform } from 'react-native';\n\nconst baseStyle = (props: any) => {\n  const { primary } = props.theme.colors;\n  const focusRing =\n    Platform.OS === 'web'\n      ? { boxShadow: `${primary[400]} 0px 0px 0px 3px` }\n      : {};\n\n  return {\n    borderRadius: 'sm',\n    _web: {\n      cursor: props.isDisabled\n        ? 'not-allowed'\n        : props.isLoading\n        ? 'default'\n        : 'pointer',\n    },\n    _focusVisible: {\n      style: props.variant !== 'unstyled' ? { ...focusRing } : {},\n    },\n    _disabled: {\n      opacity: 0.5,\n    },\n  };\n};\n\nfunction variantGhost(props: Dict) {\n  const { colorScheme } = props;\n  return {\n    bg: 'transparent',\n    _web: {\n      outlineWidth: 0,\n    },\n    _hover: {\n      bg: transparentize(\n        mode(`${colorScheme}.200`, `${colorScheme}.400`)(props),\n        0.5\n      )(props.theme),\n    },\n    _focusVisible: {\n      bg: transparentize(\n        mode(`${colorScheme}.200`, `${colorScheme}.400`)(props),\n        0.5\n      )(props.theme),\n    },\n    _pressed: {\n      bg: transparentize(\n        mode(`${colorScheme}.200`, `${colorScheme}.500`)(props),\n        0.6\n      )(props.theme),\n    },\n  };\n}\n\nfunction variantOutline(props: Dict) {\n  const { colorScheme } = props;\n  return {\n    borderWidth: '1',\n    borderColor: `${colorScheme}.300`,\n    _icon: {\n      color: mode(`${colorScheme}.500`, `${colorScheme}.300`)(props),\n    },\n    _web: {\n      outlineWidth: 0,\n    },\n    _hover: {\n      bg: transparentize(\n        mode(`${colorScheme}.200`, `${colorScheme}.400`)(props),\n        0.5\n      )(props.theme),\n    },\n    _focusVisible: {\n      bg: transparentize(\n        mode(`${colorScheme}.200`, `${colorScheme}.400`)(props),\n        0.5\n      )(props.theme),\n    },\n    _pressed: {\n      bg: transparentize(\n        mode(`${colorScheme}.300`, `${colorScheme}.500`)(props),\n        0.6\n      )(props.theme),\n    },\n  };\n}\n\nfunction variantSolid(props: Dict) {\n  const { colorScheme } = props;\n  return {\n    bg: `${colorScheme}.500`,\n    _web: {\n      outlineWidth: 0,\n    },\n    _disabled: {\n      bg: mode(`trueGray.300`, `trueGray.600`)(props),\n    },\n    _hover: {\n      bg: `${colorScheme}.600`,\n    },\n    _pressed: {\n      bg: `${colorScheme}.700`,\n    },\n    _focus: {\n      bg: `${colorScheme}.600`,\n    },\n    _icon: {\n      color: mode('gray.50', 'gray.800')(props),\n    },\n  };\n}\n\nfunction variantUnstyled() {\n  return {};\n}\n\nconst variants = {\n  ghost: variantGhost,\n  outline: variantOutline,\n  solid: variantSolid,\n  unstyled: variantUnstyled,\n};\n\nconst defaultProps = {\n  variant: 'ghost',\n  size: 'md',\n  colorScheme: 'primary',\n};\n\nconst sizes = {\n  lg: {\n    p: 3,\n  },\n  md: {\n    p: 2,\n  },\n  sm: {\n    p: 1,\n  },\n};\n\nexport default {\n  baseStyle,\n  variants,\n  sizes,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"module"}