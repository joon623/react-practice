{"ast":null,"code":"import _objectWithoutProperties from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"name\"];\nimport { randomColor, getRandomString, mode } from '../tools';\n\nvar baseStyle = function baseStyle(props) {\n  var name = props.name,\n      colorModeProps = _objectWithoutProperties(props, _excluded);\n\n  var bg = name ? randomColor({\n    string: getRandomString(5) + name\n  }) : 'gray.400';\n  var borderColor = mode('gray.800', 'white')(colorModeProps);\n  return {\n    bg: bg,\n    borderColor: borderColor,\n    position: 'relative',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 'full',\n    _text: {\n      fontWeight: 600\n    },\n    _image: {\n      borderRadius: 'full',\n      alt: '--',\n      _alt: {\n        fontWeight: 600\n      },\n      style: {\n        height: '100%',\n        width: '100%'\n      }\n    }\n  };\n};\n\nfunction getSize(size, fontSize) {\n  return {\n    width: size,\n    height: size,\n    _text: {\n      fontSize: fontSize\n    }\n  };\n}\n\nvar sizes = {\n  'xs': getSize('6', '2xs'),\n  'sm': getSize('8', 'xs'),\n  'md': getSize('12', 'md'),\n  'lg': getSize('16', 'xl'),\n  'xl': getSize('24', '3xl'),\n  '2xl': getSize('32', '5xl')\n};\nvar defaultProps = {\n  size: 'md'\n};\nexport default {\n  baseStyle: baseStyle,\n  sizes: sizes,\n  defaultProps: defaultProps\n};\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/module/theme/v33x-theme/components/avatar.js"],"names":["baseStyle","name","colorModeProps","props","bg","randomColor","string","getRandomString","borderColor","mode","position","justifyContent","alignItems","borderRadius","_text","fontWeight","_image","alt","_alt","style","height","width","fontSize","sizes","getSize","defaultProps","size"],"mappings":";;AAAA,SAAA,WAAA,EAAA,eAAA,EAAA,IAAA,QAAA,UAAA;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAAA,KAAA,EAAS;EACzB,IACEC,IADF,GAGIE,KAHJ,CAAA,IAAA;EAAA,IAEKD,cAFL,GAAA,wBAAA,CAAA,KAAA,EAAA,SAAA,CAAA;;EAIA,IAAME,EAAE,GAAGH,IAAI,GAAGI,WAAW,CAAC;IAC5BC,MAAM,EAAEC,eAAe,CAAfA,CAAe,CAAfA,GAAqBN;EADD,CAAD,CAAd,GAAf,UAAA;EAGA,IAAMO,WAAW,GAAGC,IAAI,CAAA,UAAA,EAAJA,OAAI,CAAJA,CAApB,cAAoBA,CAApB;EACA,OAAO;IACLL,EAAE,EADG,EAAA;IAELI,WAAW,EAFN,WAAA;IAGLE,QAAQ,EAHH,UAAA;IAILC,cAAc,EAJT,QAAA;IAKLC,UAAU,EALL,QAAA;IAMLC,YAAY,EANP,MAAA;IAOLC,KAAK,EAAE;MACLC,UAAU,EAAE;IADP,CAPF;IAULC,MAAM,EAAE;MACNH,YAAY,EADN,MAAA;MAENI,GAAG,EAFG,IAAA;MAGNC,IAAI,EAAE;QACJH,UAAU,EAAE;MADR,CAHA;MAMNI,KAAK,EAAE;QACLC,MAAM,EADD,MAAA;QAELC,KAAK,EAAE;MAFF;IAND;EAVH,CAAP;AATF,CAAA;;AAiCA,SAAA,OAAA,CAAA,IAAA,EAAA,QAAA,EAAiC;EAC/B,OAAO;IACLA,KAAK,EADA,IAAA;IAELD,MAAM,EAFD,IAAA;IAGLN,KAAK,EAAE;MACLQ,QAAQ,EAAEA;IADL;EAHF,CAAP;AAOD;;AAED,IAAMC,KAAK,GAAG;EACZ,MAAMC,OAAO,CAAA,GAAA,EADD,KACC,CADD;EAEZ,MAAMA,OAAO,CAAA,GAAA,EAFD,IAEC,CAFD;EAGZ,MAAMA,OAAO,CAAA,IAAA,EAHD,IAGC,CAHD;EAIZ,MAAMA,OAAO,CAAA,IAAA,EAJD,IAIC,CAJD;EAKZ,MAAMA,OAAO,CAAA,IAAA,EALD,KAKC,CALD;EAMZ,OAAOA,OAAO,CAAA,IAAA,EAAA,KAAA;AANF,CAAd;AAQA,IAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE;AADa,CAArB;AAGA,eAAe;EACb1B,SAAS,EADI,SAAA;EAEbuB,KAAK,EAFQ,KAAA;EAGbE,YAAY,EAAZA;AAHa,CAAf","sourcesContent":["import { randomColor, getRandomString, mode } from '../tools';\n\nconst baseStyle = props => {\n  const {\n    name,\n    ...colorModeProps\n  } = props;\n  const bg = name ? randomColor({\n    string: getRandomString(5) + name\n  }) : 'gray.400';\n  const borderColor = mode('gray.800', 'white')(colorModeProps);\n  return {\n    bg,\n    borderColor,\n    position: 'relative',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 'full',\n    _text: {\n      fontWeight: 600\n    },\n    _image: {\n      borderRadius: 'full',\n      alt: '--',\n      _alt: {\n        fontWeight: 600\n      },\n      style: {\n        height: '100%',\n        width: '100%'\n      }\n    }\n  };\n};\n\nfunction getSize(size, fontSize) {\n  return {\n    width: size,\n    height: size,\n    _text: {\n      fontSize: fontSize\n    }\n  };\n}\n\nconst sizes = {\n  'xs': getSize('6', '2xs'),\n  'sm': getSize('8', 'xs'),\n  'md': getSize('12', 'md'),\n  'lg': getSize('16', 'xl'),\n  'xl': getSize('24', '3xl'),\n  '2xl': getSize('32', '5xl')\n};\nconst defaultProps = {\n  size: 'md'\n};\nexport default {\n  baseStyle,\n  sizes,\n  defaultProps\n};\n//# sourceMappingURL=avatar.js.map"]},"metadata":{},"sourceType":"module"}