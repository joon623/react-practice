{"ast":null,"code":"import _objectWithoutProperties from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nvar _excluded = [\"_icon\", \"onPressIn\", \"onPressOut\", \"onHoverIn\", \"onHoverOut\", \"onFocus\", \"onBlur\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { ModalContext } from './Context';\nimport { usePropsResolution } from '../../../hooks';\nimport { Pressable } from '../../primitives/Pressable';\nimport { CloseIcon } from '../../primitives/Icon/Icons';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useHover, useFocus, useIsPressed } from '../../primitives/Pressable/Pressable';\nimport { composeEventHandlers } from '../../../utils';\nimport { useFocusRing } from '@react-native-aria/focus';\n\nvar ModalCloseButton = function ModalCloseButton(props, ref) {\n  _s();\n\n  var _useHover = useHover(),\n      hoverProps = _useHover.hoverProps,\n      isHovered = _useHover.isHovered;\n\n  var _useIsPressed = useIsPressed(),\n      pressableProps = _useIsPressed.pressableProps,\n      isPressed = _useIsPressed.isPressed;\n\n  var _useFocus = useFocus(),\n      focusProps = _useFocus.focusProps,\n      isFocused = _useFocus.isFocused;\n\n  var _useFocusRing = useFocusRing(),\n      isFocusVisible = _useFocusRing.isFocusVisible,\n      focusRingProps = _useFocusRing.focusProps;\n\n  var _usePropsResolution = usePropsResolution('ModalCloseButton', props, {\n    isHovered: isHovered,\n    isPressed: isPressed,\n    isFocused: isFocused,\n    isFocusVisible: isFocusVisible\n  }),\n      _icon = _usePropsResolution._icon,\n      onPressIn = _usePropsResolution.onPressIn,\n      onPressOut = _usePropsResolution.onPressOut,\n      onHoverIn = _usePropsResolution.onHoverIn,\n      onHoverOut = _usePropsResolution.onHoverOut,\n      onFocus = _usePropsResolution.onFocus,\n      onBlur = _usePropsResolution.onBlur,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded);\n\n  var _React$useContext = React.useContext(ModalContext),\n      handleClose = _React$useContext.handleClose; //TODO: refactor for responsive prop\n\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Pressable, _extends({\n    accessibilityRole: \"button\",\n    ref: ref,\n    onPressIn: composeEventHandlers(onPressIn, pressableProps.onPressIn),\n    onPressOut: composeEventHandlers(onPressOut, pressableProps.onPressOut) // @ts-ignore - web only\n    ,\n    onHoverIn: composeEventHandlers(onHoverIn, hoverProps.onHoverIn) // @ts-ignore - web only\n    ,\n    onHoverOut: composeEventHandlers(onHoverOut, hoverProps.onHoverOut) // @ts-ignore - web only\n    ,\n    onFocus: composeEventHandlers(composeEventHandlers(onFocus, focusProps.onFocus), focusRingProps.onFocus) // @ts-ignore - web only\n    ,\n    onBlur: composeEventHandlers(composeEventHandlers(onBlur, focusProps.onBlur), focusRingProps.onBlur),\n    onPress: handleClose\n  }, resolvedProps), /*#__PURE__*/React.createElement(CloseIcon, _icon));\n};\n\n_s(ModalCloseButton, \"DHuQfR/CFSCMIVsOnuACnwfQVSo=\", false, function () {\n  return [useHover, useIsPressed, useFocus, useFocusRing, usePropsResolution, useHasResponsiveProps];\n});\n\n_c = ModalCloseButton;\nexport default /*#__PURE__*/_c3 = /*#__PURE__*/memo( /*#__PURE__*/_c2 = /*#__PURE__*/forwardRef(ModalCloseButton));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ModalCloseButton\");\n$RefreshReg$(_c2, \"%default%$memo\");\n$RefreshReg$(_c3, \"%default%\");\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/module/components/composites/Modal/ModalCloseButton.js"],"names":["_extends","Object","i","arguments","source","target","ModalCloseButton","hoverProps","isHovered","useHover","pressableProps","isPressed","useIsPressed","focusProps","isFocused","useFocus","isFocusVisible","focusRingProps","useFocusRing","_icon","onPressIn","onPressOut","onHoverIn","onHoverOut","onFocus","onBlur","resolvedProps","usePropsResolution","handleClose","React","useHasResponsiveProps","accessibilityRole","ref","composeEventHandlers","onPress","memo","forwardRef"],"mappings":";;;;;;AAAA,SAAA,QAAA,GAAoB;EAAEA,QAAQ,GAAGC,MAAM,CAANA,MAAAA,IAAiB,UAAA,MAAA,EAAkB;IAAE,KAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGC,SAAS,CAA7B,MAAA,EAAsCD,CAAtC,EAAA,EAA2C;MAAE,IAAIE,MAAM,GAAGD,SAAS,CAAtB,CAAsB,CAAtB;;MAA2B,KAAK,IAAL,GAAA,IAAA,MAAA,EAAwB;QAAE,IAAIF,MAAM,CAANA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAAJ,GAAIA,CAAJ,EAAuD;UAAEI,MAAM,CAANA,GAAM,CAANA,GAAcD,MAAM,CAApBC,GAAoB,CAApBA;QAA4B;MAAE;IAAE;;IAAC,OAAA,MAAA;EAA5OL,CAAAA;;EAA8P,OAAOA,QAAQ,CAARA,KAAAA,CAAAA,IAAAA,EAAP,SAAOA,CAAP;AAAyC;;AAE7T,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,SAAA,YAAA,QAAA,WAAA;AACA,SAAA,kBAAA,QAAA,gBAAA;AACA,SAAA,SAAA,QAAA,4BAAA;AACA,SAAA,SAAA,QAAA,6BAAA;AACA,SAAA,qBAAA,QAAA,sCAAA;AACA,SAAA,QAAA,EAAA,QAAA,EAAA,YAAA,QAAA,sCAAA;AACA,SAAA,oBAAA,QAAA,gBAAA;AACA,SAAA,YAAA,QAAA,0BAAA;;AAEA,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA,KAAA,EAAA,GAAA,EAAgB;EAAA,EAAA;;EACvC,IAAA,SAAA,GAGIG,QAHJ,EAAA;EAAA,IACEF,UADF,GAAA,SAAA,CAAA,UAAA;EAAA,IAEEC,SAFF,GAAA,SAAA,CAAA,SAAA;;EAIA,IAAA,aAAA,GAGII,YAHJ,EAAA;EAAA,IACEF,cADF,GAAA,aAAA,CAAA,cAAA;EAAA,IAEEC,SAFF,GAAA,aAAA,CAAA,SAAA;;EAIA,IAAA,SAAA,GAGII,QAHJ,EAAA;EAAA,IACEF,UADF,GAAA,SAAA,CAAA,UAAA;EAAA,IAEEC,SAFF,GAAA,SAAA,CAAA,SAAA;;EAIA,IAAA,aAAA,GAGII,YAHJ,EAAA;EAAA,IACEF,cADF,GAAA,aAAA,CAAA,cAAA;EAAA,IAEcC,cAFd,GAAA,aAAA,CAAA,UAAA;;EAIA,IAAA,mBAAA,GASIU,kBAAkB,CAAA,kBAAA,EAAA,KAAA,EAA4B;IAChDnB,SAAS,EADuC,SAAA;IAEhDG,SAAS,EAFuC,SAAA;IAGhDG,SAAS,EAHuC,SAAA;IAIhDE,cAAc,EAAdA;EAJgD,CAA5B,CATtB;EAAA,IACEG,KADF,GAAA,mBAAA,CAAA,KAAA;EAAA,IAEEC,SAFF,GAAA,mBAAA,CAAA,SAAA;EAAA,IAGEC,UAHF,GAAA,mBAAA,CAAA,UAAA;EAAA,IAIEC,SAJF,GAAA,mBAAA,CAAA,SAAA;EAAA,IAKEC,UALF,GAAA,mBAAA,CAAA,UAAA;EAAA,IAMEC,OANF,GAAA,mBAAA,CAAA,OAAA;EAAA,IAOEC,MAPF,GAAA,mBAAA,CAAA,MAAA;EAAA,IAQKC,aARL,GAAA,wBAAA,CAAA,mBAAA,EAAA,SAAA,CAAA;;EAeA,IAAA,iBAAA,GAEIG,KAAK,CAALA,UAAAA,CAFJ,YAEIA,CAFJ;EAAA,IACED,WADF,GAAA,iBAAA,CAhCuC,WAgCvC,CAhCuC,CAkCH;;;EAEpC,IAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EAED,OAAO,aAAa,KAAK,CAAL,aAAA,CAAA,SAAA,EAA+B9B,QAAQ,CAAC;IAC1D+B,iBAAiB,EADyC,QAAA;IAE1DC,GAAG,EAFuD,GAAA;IAG1DZ,SAAS,EAAEa,oBAAoB,CAAA,SAAA,EAAYvB,cAAc,CAHC,SAG3B,CAH2B;IAI1DW,UAAU,EAAEY,oBAAoB,CAAA,UAAA,EAAavB,cAAc,CAJD,UAI1B,CAJ0B,CAIc;IAJd;IAM1DY,SAAS,EAAEW,oBAAoB,CAAA,SAAA,EAAY1B,UAAU,CANK,SAM3B,CAN2B,CAMO;IANP;IAQ1DgB,UAAU,EAAEU,oBAAoB,CAAA,UAAA,EAAa1B,UAAU,CARG,UAQ1B,CAR0B,CAQU;IARV;IAU1DiB,OAAO,EAAES,oBAAoB,CAACA,oBAAoB,CAAA,OAAA,EAAUpB,UAAU,CAAzC,OAAqB,CAArB,EAAoDI,cAAc,CAVrC,OAU7B,CAV6B,CAU+C;IAV/C;IAY1DQ,MAAM,EAAEQ,oBAAoB,CAACA,oBAAoB,CAAA,MAAA,EAASpB,UAAU,CAAxC,MAAqB,CAArB,EAAkDI,cAAc,CAZlC,MAY9B,CAZ8B;IAa1DiB,OAAO,EAAEN;EAbiD,CAAD,EAAvC,aAAuC,CAAvC,EAcD,aAAaC,KAAK,CAALA,aAAAA,CAAAA,SAAAA,EAdhC,KAcgCA,CAdZ,CAApB;AAxCF,CAAA;;GAAMvB,gB;UAIAG,Q,EAIAG,Y,EAIAG,Q,EAIAG,Y,EAUAS,kB,EAUAG,qB;;;KApCAxB,gB;AAyDN,eAAe,aAAf,GAAA,GAAA,aAA4B6B,IAAI,EAAE,aAAF,GAAA,GAAA,aAAeC,UAAU,CAAzD,gBAAyD,CAAzB,CAAhC","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, forwardRef } from 'react';\nimport { ModalContext } from './Context';\nimport { usePropsResolution } from '../../../hooks';\nimport { Pressable } from '../../primitives/Pressable';\nimport { CloseIcon } from '../../primitives/Icon/Icons';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useHover, useFocus, useIsPressed } from '../../primitives/Pressable/Pressable';\nimport { composeEventHandlers } from '../../../utils';\nimport { useFocusRing } from '@react-native-aria/focus';\n\nconst ModalCloseButton = (props, ref) => {\n  const {\n    hoverProps,\n    isHovered\n  } = useHover();\n  const {\n    pressableProps,\n    isPressed\n  } = useIsPressed();\n  const {\n    focusProps,\n    isFocused\n  } = useFocus();\n  const {\n    isFocusVisible,\n    focusProps: focusRingProps\n  } = useFocusRing();\n  const {\n    _icon,\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    ...resolvedProps\n  } = usePropsResolution('ModalCloseButton', props, {\n    isHovered,\n    isPressed,\n    isFocused,\n    isFocusVisible\n  });\n  const {\n    handleClose\n  } = React.useContext(ModalContext); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Pressable, _extends({\n    accessibilityRole: \"button\",\n    ref: ref,\n    onPressIn: composeEventHandlers(onPressIn, pressableProps.onPressIn),\n    onPressOut: composeEventHandlers(onPressOut, pressableProps.onPressOut) // @ts-ignore - web only\n    ,\n    onHoverIn: composeEventHandlers(onHoverIn, hoverProps.onHoverIn) // @ts-ignore - web only\n    ,\n    onHoverOut: composeEventHandlers(onHoverOut, hoverProps.onHoverOut) // @ts-ignore - web only\n    ,\n    onFocus: composeEventHandlers(composeEventHandlers(onFocus, focusProps.onFocus), focusRingProps.onFocus) // @ts-ignore - web only\n    ,\n    onBlur: composeEventHandlers(composeEventHandlers(onBlur, focusProps.onBlur), focusRingProps.onBlur),\n    onPress: handleClose\n  }, resolvedProps), /*#__PURE__*/React.createElement(CloseIcon, _icon));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(ModalCloseButton));\n//# sourceMappingURL=ModalCloseButton.js.map"]},"metadata":{},"sourceType":"module"}