{"ast":null,"code":"var _this = this;\n\nvar _jsxFileName = \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/utils/useResponsiveQuery/ResponsiveQueryProvider.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var ResponsiveQueryContext = /*#__PURE__*/React.createContext({\n  disableCSSMediaQueries: false\n});\nexport var ResponsiveQueryProvider = function ResponsiveQueryProvider(props) {\n  var value = React.useMemo(function () {\n    return {\n      disableCSSMediaQueries: props.disableCSSMediaQueries\n    };\n  }, [props.disableCSSMediaQueries]);\n  return /*#__PURE__*/_jsxDEV(ResponsiveQueryContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, _this);\n};","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/utils/useResponsiveQuery/ResponsiveQueryProvider.tsx"],"names":["ResponsiveQueryContext","disableCSSMediaQueries","ResponsiveQueryProvider","props","value","children"],"mappings":";;;AAAA,OAAA,KAAA,MAAA,OAAA;;AAMA,OAAO,IAAMA,sBAAsB,GAAA,aAAG,KAAK,CAAL,aAAA,CACpC;EACEC,sBAAsB,EAAE;AAD1B,CADoC,CAA/B;AAMP,OAAO,IAAMC,uBAAuB,GAClCC,SADWD,uBACXC,CAAAA,KADqC,EAElC;EACH,IAAMC,KAAK,GAAG,KAAK,CAAL,OAAA,CACZ;IAAA,OAAO;MACLH,sBAAsB,EAAEE,KAAK,CAACF;IADzB,CAAP;EAAA,CADY,EAIZ,CAACE,KAAK,CAJR,sBAIE,CAJY,CAAd;EAOA,OAAA,aACE,OAAA,CAAC,sBAAD,CAAA,QAAA,EAAA;IAAiC,KAAK,EAAtC,KAAA;IAAA,QAAA,EACGA,KAAK,CAACE;EADT,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;IAAA,QAAA,EAAA,YAAA;IAAA,UAAA,EAAA,EAAA;IAAA,YAAA,EAAA;EAAA,CAAA,EADF,KACE,CADF;AAVK,CAAA","sourcesContent":["import React from 'react';\n\ntype ResponsiveQueryContextType = {\n  disableCSSMediaQueries?: boolean;\n};\n\nexport const ResponsiveQueryContext = React.createContext<ResponsiveQueryContextType>(\n  {\n    disableCSSMediaQueries: false,\n  }\n);\n\nexport const ResponsiveQueryProvider = (\n  props: ResponsiveQueryContextType & { children: React.ReactNode }\n) => {\n  const value = React.useMemo(\n    () => ({\n      disableCSSMediaQueries: props.disableCSSMediaQueries,\n    }),\n    [props.disableCSSMediaQueries]\n  );\n\n  return (\n    <ResponsiveQueryContext.Provider value={value}>\n      {props.children}\n    </ResponsiveQueryContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}