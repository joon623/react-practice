{"ast":null,"code":"import _objectWithoutProperties from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nvar _excluded = [\"fieldIndex\", \"defaultValue\"],\n    _excluded2 = [\"handleChange\", \"value\", \"setRefList\", \"defaultValue\", \"handleMultiValueChange\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { Input } from '../../primitives/Input';\nimport { PinInputContext } from './Context';\nimport Platform from \"react-native-web/dist/cjs/exports/Platform\";\nimport { mergeRefs } from '../../../utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nvar PinInputFiled = function PinInputFiled(_ref, ref) {\n  _s();\n\n  var _ref$fieldIndex = _ref.fieldIndex,\n      fieldIndex = _ref$fieldIndex === void 0 ? 0 : _ref$fieldIndex,\n      pDefaultValue = _ref.defaultValue,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useContext = React.useContext(PinInputContext),\n      handleChange = _React$useContext.handleChange,\n      cValue = _React$useContext.value,\n      setRefList = _React$useContext.setRefList,\n      cDefaultValue = _React$useContext.defaultValue,\n      handleMultiValueChange = _React$useContext.handleMultiValueChange,\n      context = _objectWithoutProperties(_React$useContext, _excluded2);\n\n  cDefaultValue = cDefaultValue && cDefaultValue[fieldIndex];\n  var defaultValue = pDefaultValue || cDefaultValue;\n  var value = cValue && cValue[fieldIndex];\n\n  var keyPressHandler = function keyPressHandler(event) {\n    if (Platform.OS !== 'web') {\n      if (event.nativeEvent.key >= 0 && event.nativeEvent.key <= 9) {\n        handleChange && handleChange(event.nativeEvent.key, fieldIndex);\n      } else if (event.nativeEvent.key === 'Backspace') {\n        handleChange && handleChange('', fieldIndex);\n      }\n    }\n  };\n\n  var textChangeHandler = function textChangeHandler(value) {\n    // Also used to handle change for Android.\n    handleMultiValueChange && handleMultiValueChange(value, fieldIndex);\n  };\n\n  var myRef = React.useRef(null);\n  React.useEffect(function () {\n    setRefList && setRefList(myRef, fieldIndex);\n  }, [myRef, fieldIndex, setRefList]); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Input //@ts-ignore\n  , _extends({\n    ref: mergeRefs([myRef, ref])\n  }, context, props, {\n    onKeyPress: function onKeyPress(event) {\n      return keyPressHandler(event);\n    },\n    onChangeText: function onChangeText(value) {\n      return textChangeHandler(value);\n    },\n    keyboardType: \"numeric\",\n    defaultValue: defaultValue,\n    value: value\n  }));\n};\n\n_s(PinInputFiled, \"3rgtnZBJSXUWsrOXuVL0xB1qUZk=\", false, function () {\n  return [useHasResponsiveProps];\n});\n\n_c = PinInputFiled;\nexport default /*#__PURE__*/_c3 = /*#__PURE__*/React.memo( /*#__PURE__*/_c2 = /*#__PURE__*/React.forwardRef(PinInputFiled));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PinInputFiled\");\n$RefreshReg$(_c2, \"%default%$React.memo\");\n$RefreshReg$(_c3, \"%default%\");\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/module/components/composites/PinInput/PinInputField.js"],"names":["_extends","Object","i","arguments","source","target","PinInputFiled","fieldIndex","defaultValue","pDefaultValue","props","handleChange","cValue","setRefList","cDefaultValue","handleMultiValueChange","context","React","value","keyPressHandler","Platform","event","textChangeHandler","myRef","useHasResponsiveProps","ref","mergeRefs","onKeyPress","onChangeText","keyboardType"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { Input } from '../../primitives/Input';\nimport { PinInputContext } from './Context';\nimport { Platform } from 'react-native';\nimport { mergeRefs } from '../../../utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PinInputFiled = ({\n  fieldIndex = 0,\n  defaultValue: pDefaultValue,\n  ...props\n}, ref) => {\n  let {\n    handleChange,\n    value: cValue,\n    setRefList,\n    defaultValue: cDefaultValue,\n    handleMultiValueChange,\n    ...context\n  } = React.useContext(PinInputContext);\n  cDefaultValue = cDefaultValue && cDefaultValue[fieldIndex];\n  let defaultValue = pDefaultValue || cDefaultValue;\n  let value = cValue && cValue[fieldIndex];\n\n  const keyPressHandler = event => {\n    if (Platform.OS !== 'web') {\n      if (event.nativeEvent.key >= 0 && event.nativeEvent.key <= 9) {\n        handleChange && handleChange(event.nativeEvent.key, fieldIndex);\n      } else if (event.nativeEvent.key === 'Backspace') {\n        handleChange && handleChange('', fieldIndex);\n      }\n    }\n  };\n\n  const textChangeHandler = value => {\n    // Also used to handle change for Android.\n    handleMultiValueChange && handleMultiValueChange(value, fieldIndex);\n  };\n\n  const myRef = React.useRef(null);\n  React.useEffect(() => {\n    setRefList && setRefList(myRef, fieldIndex);\n  }, [myRef, fieldIndex, setRefList]); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Input //@ts-ignore\n  , _extends({\n    ref: mergeRefs([myRef, ref])\n  }, context, props, {\n    onKeyPress: event => keyPressHandler(event),\n    onChangeText: value => textChangeHandler(value),\n    keyboardType: \"numeric\",\n    defaultValue: defaultValue,\n    value: value\n  }));\n};\n\nexport default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(PinInputFiled));\n//# sourceMappingURL=PinInputField.js.map"]},"metadata":{},"sourceType":"module"}