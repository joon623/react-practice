{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/cjs/index\");\n\nvar _Context = require(\"./Context\");\n\nvar _hooks = require(\"./../color-mode/hooks\");\n\nvar _hooks2 = require(\"../../hooks\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar HybridProvider = function HybridProvider(_ref) {\n  var children = _ref.children,\n      _ref$options = _ref.options,\n      _ref$options$initialC = _ref$options.initialColorMode,\n      initialColorMode = _ref$options$initialC === void 0 ? 'light' : _ref$options$initialC,\n      _ref$options$accessib = _ref$options.accessibleColors,\n      isTextColorAccessible = _ref$options$accessib === void 0 ? false : _ref$options$accessib,\n      useSystemColorMode = _ref$options.useSystemColorMode,\n      colorModeManager = _ref.colorModeManager;\n\n  // Color-mode content\n  var _ref2 = (0, _hooks.useModeManager)(initialColorMode, useSystemColorMode, colorModeManager),\n      colorMode = _ref2.colorMode,\n      setColorMode = _ref2.setColorMode;\n\n  var toggleColorMode = _react[\"default\"].useCallback(function () {\n    setColorMode(colorMode === 'light' ? 'dark' : 'light');\n  }, [colorMode, setColorMode]); // Accessible color hook\n\n\n  var _react$default$useSta = _react[\"default\"].useState(isTextColorAccessible),\n      _react$default$useSta2 = _slicedToArray(_react$default$useSta, 2),\n      accessibleColors = _react$default$useSta2[0],\n      setAccessibleColors = _react$default$useSta2[1];\n\n  var contextValue = (0, _react.useMemo)(function () {\n    return {\n      colorMode: {\n        colorMode: colorMode,\n        toggleColorMode: toggleColorMode,\n        setColorMode: setColorMode,\n        accessibleColors: accessibleColors,\n        setAccessibleColors: setAccessibleColors\n      }\n    };\n  }, [colorMode, toggleColorMode, setColorMode, accessibleColors, setAccessibleColors]);\n\n  _react[\"default\"].useEffect(function () {\n    var escapeKeyListener = null;\n\n    if (_reactNative.Platform.OS === 'web') {\n      escapeKeyListener = function escapeKeyListener(e) {\n        if (e.key === 'Escape') {\n          if (_hooks2.keyboardDismissHandlerManager.length() > 0) {\n            var lastHandler = _hooks2.keyboardDismissHandlerManager.pop();\n\n            lastHandler();\n          }\n        }\n      };\n\n      document.addEventListener('keydown', escapeKeyListener);\n    }\n\n    return function () {\n      if (_reactNative.Platform.OS === 'web') {\n        document.removeEventListener('keydown', escapeKeyListener);\n      }\n    };\n  }, []);\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Context.HybridContext.Provider, {\n    value: contextValue\n  }, children);\n};\n\nvar _default = HybridProvider;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/commonjs/core/hybrid-overlay/HybridProvider.js"],"names":["Object","value","exports","_react","_interopRequireWildcard","require","_Context","_hooks","_hooks2","cache","_getRequireWildcardCache","obj","default","newObj","hasPropertyDescriptor","desc","HybridProvider","options","initialColorMode","accessibleColors","isTextColorAccessible","useSystemColorMode","colorModeManager","setColorMode","toggleColorMode","colorMode","contextValue","setAccessibleColors","escapeKeyListener","_reactNative","e","lastHandler","document","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Context = require(\"./Context\");\n\nvar _hooks = require(\"./../color-mode/hooks\");\n\nvar _hooks2 = require(\"../../hooks\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst HybridProvider = ({\n  children,\n  options: {\n    initialColorMode = 'light',\n    accessibleColors: isTextColorAccessible = false,\n    useSystemColorMode\n  },\n  colorModeManager\n}) => {\n  // Color-mode content\n  const {\n    colorMode,\n    setColorMode\n  } = (0, _hooks.useModeManager)(initialColorMode, useSystemColorMode, colorModeManager);\n\n  const toggleColorMode = _react.default.useCallback(() => {\n    setColorMode(colorMode === 'light' ? 'dark' : 'light');\n  }, [colorMode, setColorMode]); // Accessible color hook\n\n\n  const [accessibleColors, setAccessibleColors] = _react.default.useState(isTextColorAccessible);\n\n  const contextValue = (0, _react.useMemo)(() => {\n    return {\n      colorMode: {\n        colorMode,\n        toggleColorMode,\n        setColorMode,\n        accessibleColors,\n        setAccessibleColors\n      }\n    };\n  }, [colorMode, toggleColorMode, setColorMode, accessibleColors, setAccessibleColors]);\n\n  _react.default.useEffect(() => {\n    let escapeKeyListener = null;\n\n    if (_reactNative.Platform.OS === 'web') {\n      escapeKeyListener = e => {\n        if (e.key === 'Escape') {\n          if (_hooks2.keyboardDismissHandlerManager.length() > 0) {\n            const lastHandler = _hooks2.keyboardDismissHandlerManager.pop();\n\n            lastHandler();\n          }\n        }\n      };\n\n      document.addEventListener('keydown', escapeKeyListener);\n    }\n\n    return () => {\n      if (_reactNative.Platform.OS === 'web') {\n        document.removeEventListener('keydown', escapeKeyListener);\n      }\n    };\n  }, []);\n\n  return /*#__PURE__*/_react.default.createElement(_Context.HybridContext.Provider, {\n    value: contextValue\n  }, children);\n};\n\nvar _default = HybridProvider;\nexports.default = _default;\n//# sourceMappingURL=HybridProvider.js.map"]},"metadata":{},"sourceType":"script"}