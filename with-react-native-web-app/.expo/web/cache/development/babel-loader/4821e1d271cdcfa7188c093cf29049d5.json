{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n/*\n * @returns {bool} true if different, false if equal\n */\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar deepDiffer = function deepDiffer(one, two, maxDepth) {\n  if (maxDepth === void 0) {\n    maxDepth = -1;\n  }\n\n  if (maxDepth === 0) {\n    return true;\n  }\n\n  if (one === two) {\n    // Short circuit on identical object references instead of traversing them.\n    return false;\n  }\n\n  if (typeof one === 'function' && typeof two === 'function') {\n    // We consider all functions equal\n    return false;\n  }\n\n  if (typeof one !== 'object' || one === null) {\n    // Primitives can be directly compared\n    return one !== two;\n  }\n\n  if (typeof two !== 'object' || two === null) {\n    // We know they are different because the previous case would have triggered\n    // otherwise.\n    return true;\n  }\n\n  if (one.constructor !== two.constructor) {\n    return true;\n  }\n\n  if (Array.isArray(one)) {\n    // We know two is also an array because the constructors are equal\n    var len = one.length;\n\n    if (two.length !== len) {\n      return true;\n    }\n\n    for (var ii = 0; ii < len; ii++) {\n      if (deepDiffer(one[ii], two[ii], maxDepth - 1)) {\n        return true;\n      }\n    }\n  } else {\n    for (var key in one) {\n      if (deepDiffer(one[key], two[key], maxDepth - 1)) {\n        return true;\n      }\n    }\n\n    for (var twoKey in two) {\n      // The only case we haven't checked yet is keys that are in two but aren't\n      // in one, which means they are different.\n      if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nvar _default = deepDiffer;\nexports[\"default\"] = _default;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/cjs/vendor/react-native/deepDiffer/index.js"],"names":["exports","deepDiffer","maxDepth","one","two","Array","len","ii","_default","module"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,OAAO,CAAPA,UAAAA,GAAAA,IAAAA;AACAA,OAAAA,WAAAA,GAAkB,KAAlBA,CAAAA;;AAEA,IAAIC,UAAU,GAAG,SAAA,UAAA,CAAA,GAAA,EAAA,GAAA,EAAA,QAAA,EAAwC;EACvD,IAAIC,QAAQ,KAAK,KAAjB,CAAA,EAAyB;IACvBA,QAAQ,GAAG,CAAXA,CAAAA;EACD;;EAED,IAAIA,QAAQ,KAAZ,CAAA,EAAoB;IAClB,OAAA,IAAA;EACD;;EAED,IAAIC,GAAG,KAAP,GAAA,EAAiB;IACf;IACA,OAAA,KAAA;EACD;;EAED,IAAI,OAAA,GAAA,KAAA,UAAA,IAA6B,OAAA,GAAA,KAAjC,UAAA,EAA4D;IAC1D;IACA,OAAA,KAAA;EACD;;EAED,IAAI,OAAA,GAAA,KAAA,QAAA,IAA2BA,GAAG,KAAlC,IAAA,EAA6C;IAC3C;IACA,OAAOA,GAAG,KAAV,GAAA;EACD;;EAED,IAAI,OAAA,GAAA,KAAA,QAAA,IAA2BC,GAAG,KAAlC,IAAA,EAA6C;IAC3C;IACA;IACA,OAAA,IAAA;EACD;;EAED,IAAID,GAAG,CAAHA,WAAAA,KAAoBC,GAAG,CAA3B,WAAA,EAAyC;IACvC,OAAA,IAAA;EACD;;EAED,IAAIC,KAAK,CAALA,OAAAA,CAAJ,GAAIA,CAAJ,EAAwB;IACtB;IACA,IAAIC,GAAG,GAAGH,GAAG,CAAb,MAAA;;IAEA,IAAIC,GAAG,CAAHA,MAAAA,KAAJ,GAAA,EAAwB;MACtB,OAAA,IAAA;IACD;;IAED,KAAK,IAAIG,EAAE,GAAX,CAAA,EAAiBA,EAAE,GAAnB,GAAA,EAA2BA,EAA3B,EAAA,EAAiC;MAC/B,IAAIN,UAAU,CAACE,GAAG,CAAJ,EAAI,CAAJ,EAAUC,GAAG,CAAb,EAAa,CAAb,EAAmBF,QAAQ,GAAzC,CAAc,CAAd,EAAgD;QAC9C,OAAA,IAAA;MACD;IACF;EAZH,CAAA,MAaO;IACL,KAAK,IAAL,GAAA,IAAA,GAAA,EAAqB;MACnB,IAAID,UAAU,CAACE,GAAG,CAAJ,GAAI,CAAJ,EAAWC,GAAG,CAAd,GAAc,CAAd,EAAqBF,QAAQ,GAA3C,CAAc,CAAd,EAAkD;QAChD,OAAA,IAAA;MACD;IACF;;IAED,KAAK,IAAL,MAAA,IAAA,GAAA,EAAwB;MACtB;MACA;MACA,IAAIC,GAAG,CAAHA,MAAG,CAAHA,KAAAA,SAAAA,IAA6BC,GAAG,CAAHA,MAAG,CAAHA,KAAjC,SAAA,EAA4D;QAC1D,OAAA,IAAA;MACD;IACF;EACF;;EAED,OAAA,KAAA;AA/DF,CAAA;;AAkEA,IAAII,QAAQ,GAAZ,UAAA;AACAR,OAAAA,WAAAA,GAAAA,QAAAA;AACAS,MAAM,CAANA,OAAAA,GAAiBT,OAAjBS,WAAAA","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n/*\n * @returns {bool} true if different, false if equal\n */\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar deepDiffer = function deepDiffer(one, two, maxDepth) {\n  if (maxDepth === void 0) {\n    maxDepth = -1;\n  }\n\n  if (maxDepth === 0) {\n    return true;\n  }\n\n  if (one === two) {\n    // Short circuit on identical object references instead of traversing them.\n    return false;\n  }\n\n  if (typeof one === 'function' && typeof two === 'function') {\n    // We consider all functions equal\n    return false;\n  }\n\n  if (typeof one !== 'object' || one === null) {\n    // Primitives can be directly compared\n    return one !== two;\n  }\n\n  if (typeof two !== 'object' || two === null) {\n    // We know they are different because the previous case would have triggered\n    // otherwise.\n    return true;\n  }\n\n  if (one.constructor !== two.constructor) {\n    return true;\n  }\n\n  if (Array.isArray(one)) {\n    // We know two is also an array because the constructors are equal\n    var len = one.length;\n\n    if (two.length !== len) {\n      return true;\n    }\n\n    for (var ii = 0; ii < len; ii++) {\n      if (deepDiffer(one[ii], two[ii], maxDepth - 1)) {\n        return true;\n      }\n    }\n  } else {\n    for (var key in one) {\n      if (deepDiffer(one[key], two[key], maxDepth - 1)) {\n        return true;\n      }\n    }\n\n    for (var twoKey in two) {\n      // The only case we haven't checked yet is keys that are in two but aren't\n      // in one, which means they are different.\n      if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nvar _default = deepDiffer;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}