{"ast":null,"code":"var _jsxFileName = \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/components/index.helper.tsx\",\n    _this = this;\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/*\n * contents data section end\n *  */\nvar renderMinuteToHourTime = function renderMinuteToHourTime(time) {\n  if (time < 60) {\n    return __jsx(React.Fragment, null, time, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }\n    }, \"\\uBD84\"), ' ');\n  } else if (time % 60 === 0) {\n    var hour = Math.floor(time / 60);\n    return __jsx(React.Fragment, null, hour, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, \"\\uC2DC\\uAC04\"));\n  } else {\n    var _hour = Math.floor(time / 60);\n\n    var minute = time % 60;\n    return __jsx(React.Fragment, null, _hour, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, \"\\uC2DC\\uAC04\"), \" \", minute, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, \"\\uBD84\"));\n  }\n};\n\nexport { renderMinuteToHourTime };","map":{"version":3,"names":["renderMinuteToHourTime","time","hour","Math","floor","minute"],"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/components/index.helper.tsx"],"sourcesContent":["/*\n * contents data section end\n *  */\nconst renderMinuteToHourTime = (time: number) => {\n    if (time < 60) {\n        return (\n            <>\n                {time}\n                <span>분</span>{' '}\n            </>\n        );\n    } else if (time % 60 === 0) {\n        const hour = Math.floor(time / 60);\n        return (\n            <>\n                {hour}\n                <span>시간</span>\n            </>\n        );\n    } else {\n        const hour = Math.floor(time / 60);\n        const minute = time % 60;\n        return (\n            <>\n                {hour}\n                <span>시간</span> {minute}\n                <span>분</span>\n            </>\n        );\n    }\n};\n\nexport {renderMinuteToHourTime}\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,IAAD,EAAkB;EAC7C,IAAIA,IAAI,GAAG,EAAX,EAAe;IACX,OACI,4BACKA,IADL,EAEI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,YAFJ,EAEmB,GAFnB,CADJ;EAMH,CAPD,MAOO,IAAIA,IAAI,GAAG,EAAP,KAAc,CAAlB,EAAqB;IACxB,IAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,EAAlB,CAAb;IACA,OACI,4BACKC,IADL,EAEI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,kBAFJ,CADJ;EAMH,CARM,MAQA;IACH,IAAMA,KAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,EAAlB,CAAb;;IACA,IAAMI,MAAM,GAAGJ,IAAI,GAAG,EAAtB;IACA,OACI,4BACKC,KADL,EAEI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,kBAFJ,OAEqBG,MAFrB,EAGI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,YAHJ,CADJ;EAOH;AACJ,CA3BD;;AA6BA,SAAQL,sBAAR"},"metadata":{},"sourceType":"module"}