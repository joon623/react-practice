{"ast":null,"code":"import _objectWithoutProperties from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nvar _excluded = [\"children\"],\n    _excluded2 = [\"_astrick\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport Text from '../../primitives/Text';\nimport { useFormControlContext } from './useFormControl';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { mergeRefs } from '../../../utils';\nimport { combineContextAndProps } from '../../../utils';\n\nvar FormControlLabel = function FormControlLabel(_ref2, ref) {\n  _s();\n\n  var children = _ref2.children,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  var formControlContext = useFormControlContext();\n  var combinedProps = combineContextAndProps(formControlContext, props);\n\n  var _ref = React.useRef(null);\n\n  var _usePropsResolution = usePropsResolution('FormControlLabel', combinedProps, {\n    isDisabled: combinedProps.isDisabled,\n    isReadOnly: combinedProps.isReadOnly,\n    isInvalid: combinedProps.isInvalid // isRequired: combinedProps.isRequired,\n\n  }),\n      _astrick = _usePropsResolution._astrick,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  var requiredAsterisk = function requiredAsterisk() {\n    return /*#__PURE__*/React.createElement(Text, _extends({\n      _web: {\n        accessibilityHidden: true,\n        //@ts-ignore\n        accessibilityRole: 'presentation'\n      }\n    }, _astrick), \"*\");\n  };\n\n  var mergedRef = mergeRefs([_ref, ref]);\n  React.useEffect(function () {\n    if (_ref.current) {\n      // RN web doesn't support htmlFor for Label element yet\n      if (props.htmlFor) {\n        _ref.current.htmlFor = props.htmlFor;\n      } else if (resolvedProps !== null && resolvedProps !== void 0 && resolvedProps.nativeID) {\n        _ref.current.htmlFor = resolvedProps.nativeID;\n      }\n    }\n  }, [resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.nativeID, props.htmlFor]);\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    _web: {\n      //@ts-ignore\n      accessibilityRole: 'label'\n    }\n  }, resolvedProps, {\n    nativeID: resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.labelId,\n    ref: mergedRef\n  }), children, (resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.isRequired) && requiredAsterisk());\n};\n\n_s(FormControlLabel, \"JrxOL27IZo2F7G7aczliqOARvNU=\", false, function () {\n  return [useFormControlContext, usePropsResolution];\n});\n\n_c = FormControlLabel;\nexport default /*#__PURE__*/_c3 = /*#__PURE__*/memo( /*#__PURE__*/_c2 = /*#__PURE__*/forwardRef(FormControlLabel));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FormControlLabel\");\n$RefreshReg$(_c2, \"%default%$memo\");\n$RefreshReg$(_c3, \"%default%\");\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/module/components/composites/FormControl/FormControlLabel.js"],"names":["_extends","Object","i","arguments","source","target","FormControlLabel","children","props","formControlContext","useFormControlContext","combinedProps","combineContextAndProps","_ref","React","_astrick","resolvedProps","usePropsResolution","isDisabled","isReadOnly","isInvalid","requiredAsterisk","_web","accessibilityHidden","accessibilityRole","mergedRef","mergeRefs","nativeID","ref","memo","forwardRef"],"mappings":";;;;;;;AAAA,SAAA,QAAA,GAAoB;EAAEA,QAAQ,GAAGC,MAAM,CAANA,MAAAA,IAAiB,UAAA,MAAA,EAAkB;IAAE,KAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGC,SAAS,CAA7B,MAAA,EAAsCD,CAAtC,EAAA,EAA2C;MAAE,IAAIE,MAAM,GAAGD,SAAS,CAAtB,CAAsB,CAAtB;;MAA2B,KAAK,IAAL,GAAA,IAAA,MAAA,EAAwB;QAAE,IAAIF,MAAM,CAANA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAAJ,GAAIA,CAAJ,EAAuD;UAAEI,MAAM,CAANA,GAAM,CAANA,GAAcD,MAAM,CAApBC,GAAoB,CAApBA;QAA4B;MAAE;IAAE;;IAAC,OAAA,MAAA;EAA5OL,CAAAA;;EAA8P,OAAOA,QAAQ,CAARA,KAAAA,CAAAA,IAAAA,EAAP,SAAOA,CAAP;AAAyC;;AAE7T,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,OAAA,GAAA,MAAA,sBAAA;AACA,OAAA,IAAA,MAAA,uBAAA;AACA,SAAA,qBAAA,QAAA,kBAAA;AACA,SAAA,kBAAA,QAAA,8BAAA;AACA,SAAA,SAAA,QAAA,gBAAA;AACA,SAAA,sBAAA,QAAA,gBAAA;;AAEA,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA,KAAA,EAAA,GAAA,EAGd;EAAA,EAAA;;EAAA,IAFTC,QAES,GAAA,KAAA,CAFTA,QAES;EAAA,IADNC,KACM,GAAA,wBAAA,CAAA,KAAA,EAAA,SAAA,CAAA;;EACT,IAAMC,kBAAkB,GAAGC,qBAA3B,EAAA;EACA,IAAMC,aAAa,GAAGC,sBAAsB,CAAA,kBAAA,EAA5C,KAA4C,CAA5C;;EAEA,IAAMC,IAAI,GAAGC,KAAK,CAALA,MAAAA,CAAb,IAAaA,CAAb;;EAEA,IAAA,mBAAA,GAGIG,kBAAkB,CAAA,kBAAA,EAAA,aAAA,EAAoC;IACxDC,UAAU,EAAEP,aAAa,CAD+B,UAAA;IAExDQ,UAAU,EAAER,aAAa,CAF+B,UAAA;IAGxDS,SAAS,EAAET,aAAa,CAHgC,SAAA,CAGrB;;EAHqB,CAApC,CAHtB;EAAA,IACEI,QADF,GAAA,mBAAA,CAAA,QAAA;EAAA,IAEKC,aAFL,GAAA,wBAAA,CAAA,mBAAA,EAAA,UAAA,CAAA;;EAUA,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAA;IAAA,OAAM,aAAa,KAAK,CAAL,aAAA,CAAA,IAAA,EAA0BrB,QAAQ,CAAC;MAC7EsB,IAAI,EAAE;QACJC,mBAAmB,EADf,IAAA;QAEJ;QACAC,iBAAiB,EAAE;MAHf;IADuE,CAAD,EAAlC,QAAkC,CAAlC,EAAnB,GAAmB,CAAnB;EAAzB,CAAA;;EAQA,IAAMC,SAAS,GAAGC,SAAS,CAAC,CAAA,IAAA,EAA5B,GAA4B,CAAD,CAA3B;EACAZ,KAAK,CAALA,SAAAA,CAAgB,YAAM;IACpB,IAAID,IAAI,CAAR,OAAA,EAAkB;MAChB;MACA,IAAIL,KAAK,CAAT,OAAA,EAAmB;QACjBK,IAAI,CAAJA,OAAAA,CAAAA,OAAAA,GAAuBL,KAAK,CAA5BK,OAAAA;MADF,CAAA,MAEO,IAAIG,aAAa,KAAbA,IAAAA,IAA0BA,aAAa,KAAK,KAA5CA,CAAAA,IAAsDA,aAAa,CAAvE,QAAA,EAAkF;QACvFH,IAAI,CAAJA,OAAAA,CAAAA,OAAAA,GAAuBG,aAAa,CAApCH,QAAAA;MACD;IACF;EARHC,CAAAA,EASG,CAACE,aAAa,KAAbA,IAAAA,IAA0BA,aAAa,KAAK,KAA5CA,CAAAA,GAAqD,KAArDA,CAAAA,GAA8DA,aAAa,CAA5E,QAAA,EAAuFR,KAAK,CAT/FM,OASG,CATHA;EAUA,OAAO,aAAa,KAAK,CAAL,aAAA,CAAA,GAAA,EAAyBd,QAAQ,CAAC;IACpDsB,IAAI,EAAE;MACJ;MACAE,iBAAiB,EAAE;IAFf;EAD8C,CAAD,EAAA,aAAA,EAKnC;IAChBG,QAAQ,EAAEX,aAAa,KAAbA,IAAAA,IAA0BA,aAAa,KAAK,KAA5CA,CAAAA,GAAqD,KAArDA,CAAAA,GAA8DA,aAAa,CADrE,OAAA;IAEhBY,GAAG,EAAEH;EAFW,CALmC,CAAjC,EAAA,QAAA,EAQN,CAACT,aAAa,KAAbA,IAAAA,IAA0BA,aAAa,KAAK,KAA5CA,CAAAA,GAAqD,KAArDA,CAAAA,GAA8DA,aAAa,CAA5E,UAAA,KAA4FK,gBAR1G,EAAoB,CAApB;AAtCF,CAAA;;GAAMf,gB;UAIuBI,qB,EAQvBO,kB;;;KAZAX,gB;AAiDN,eAAe,aAAf,GAAA,GAAA,aAA4BuB,IAAI,EAAE,aAAF,GAAA,GAAA,aAAeC,UAAU,CAAzD,gBAAyD,CAAzB,CAAhC","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport Text from '../../primitives/Text';\nimport { useFormControlContext } from './useFormControl';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { mergeRefs } from '../../../utils';\nimport { combineContextAndProps } from '../../../utils';\n\nconst FormControlLabel = ({\n  children,\n  ...props\n}, ref) => {\n  const formControlContext = useFormControlContext();\n  const combinedProps = combineContextAndProps(formControlContext, props);\n\n  const _ref = React.useRef(null);\n\n  const {\n    _astrick,\n    ...resolvedProps\n  } = usePropsResolution('FormControlLabel', combinedProps, {\n    isDisabled: combinedProps.isDisabled,\n    isReadOnly: combinedProps.isReadOnly,\n    isInvalid: combinedProps.isInvalid // isRequired: combinedProps.isRequired,\n\n  });\n\n  const requiredAsterisk = () => /*#__PURE__*/React.createElement(Text, _extends({\n    _web: {\n      accessibilityHidden: true,\n      //@ts-ignore\n      accessibilityRole: 'presentation'\n    }\n  }, _astrick), \"*\");\n\n  const mergedRef = mergeRefs([_ref, ref]);\n  React.useEffect(() => {\n    if (_ref.current) {\n      // RN web doesn't support htmlFor for Label element yet\n      if (props.htmlFor) {\n        _ref.current.htmlFor = props.htmlFor;\n      } else if (resolvedProps !== null && resolvedProps !== void 0 && resolvedProps.nativeID) {\n        _ref.current.htmlFor = resolvedProps.nativeID;\n      }\n    }\n  }, [resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.nativeID, props.htmlFor]);\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    _web: {\n      //@ts-ignore\n      accessibilityRole: 'label'\n    }\n  }, resolvedProps, {\n    nativeID: resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.labelId,\n    ref: mergedRef\n  }), children, (resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.isRequired) && requiredAsterisk());\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(FormControlLabel));\n//# sourceMappingURL=FormControlLabel.js.map"]},"metadata":{},"sourceType":"module"}