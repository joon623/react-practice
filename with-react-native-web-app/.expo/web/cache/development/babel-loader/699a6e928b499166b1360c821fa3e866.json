{"ast":null,"code":"import _asyncToGenerator from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/regenerator\";\nimport React from 'react';\nimport Clipboard from \"react-native-web/dist/cjs/exports/Clipboard\";\nexport function useClipboard() {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      hasCopied = _React$useState2[0],\n      setHasCopied = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      value = _React$useState4[0],\n      setValue = _React$useState4[1];\n\n  var onCopy = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(copiedValue) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!Clipboard) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return Clipboard.setString(copiedValue);\n\n            case 3:\n              setValue(copiedValue);\n              setHasCopied(true);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onCopy(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return {\n    value: value,\n    onCopy: onCopy,\n    hasCopied: hasCopied\n  };\n}\n\n_s(useClipboard, \"wScOM9etQVLLiadMpRhyFbPIYBg=\");\n\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/module/hooks/useClipboard.js"],"names":["useClipboard","hasCopied","setHasCopied","React","value","setValue","onCopy","Clipboard"],"mappings":";;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;;AAEA,OAAO,SAAA,YAAA,GAAwB;EAAA,EAAA;;EAC7B,IAAA,eAAA,GAAkCG,KAAK,CAALA,QAAAA,CAAlC,KAAkCA,CAAlC;EAAA,IAAA,gBAAA,GAAA,cAAA,CAAA,eAAA,EAAA,CAAA,CAAA;EAAA,IAAOF,SAAP,GAAA,gBAAA,CAAA,CAAA,CAAA;EAAA,IAAkBC,YAAlB,GAAA,gBAAA,CAAA,CAAA,CAAA;;EACA,IAAA,gBAAA,GAA0BC,KAAK,CAALA,QAAAA,CAA1B,EAA0BA,CAA1B;EAAA,IAAA,gBAAA,GAAA,cAAA,CAAA,gBAAA,EAAA,CAAA,CAAA;EAAA,IAAOC,KAAP,GAAA,gBAAA,CAAA,CAAA,CAAA;EAAA,IAAcC,QAAd,GAAA,gBAAA,CAAA,CAAA,CAAA;;EAEA,IAAMC,MAAM,GAAA,aAAA,YAAA;IAAA,IAAA,IAAA,GAAA,iBAAA,EAAA,aAAA,mBAAA,CAAA,IAAA,CAAG,SAAA,OAAA,CAAA,WAAA,EAAA;MAAA,OAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;QAAA,OAAA,CAAA,EAAA;UAAA,QAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;YAAA,KAAA,CAAA;cAAA,IAAA,CAAA,SAAA,EAAA;gBAAA,QAAA,CAAA,IAAA,GAAA,CAAA;gBAAA;cAAA;;cAAA,QAAA,CAAA,IAAA,GAAA,CAAA;cAAA,OAELC,SAAS,CAATA,SAAAA,CAFK,WAELA,CAFK;;YAAA,KAAA,CAAA;cAKbF,QAAQ,CAARA,WAAQ,CAARA;cACAH,YAAY,CAAZA,IAAY,CAAZA;;YANa,KAAA,CAAA;YAAA,KAAA,KAAA;cAAA,OAAA,QAAA,CAAA,IAAA,EAAA;UAAA;QAAA;MAAA,CAAA,EAAA,OAAA,CAAA;IAAH,CAAA,CAAA,CAAA;;IAAA,OAAA,SAANI,MAAM,CAAA,EAAA,EAAA;MAAA,OAAA,IAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;IAAA,CAAA;EAAZ,CAAY,EAAZ;;EASA,OAAO;IACLF,KAAK,EADA,KAAA;IAELE,MAAM,EAFD,MAAA;IAGLL,SAAS,EAATA;EAHK,CAAP;AAKD;;GAlBeD,Y","sourcesContent":["import React from 'react';\nimport { Clipboard } from 'react-native';\nexport function useClipboard() {\n  const [hasCopied, setHasCopied] = React.useState(false);\n  const [value, setValue] = React.useState('');\n\n  const onCopy = async copiedValue => {\n    if (Clipboard) {\n      await Clipboard.setString(copiedValue);\n    }\n\n    setValue(copiedValue);\n    setHasCopied(true);\n  };\n\n  return {\n    value,\n    onCopy,\n    hasCopied\n  };\n}\n//# sourceMappingURL=useClipboard.js.map"]},"metadata":{},"sourceType":"module"}