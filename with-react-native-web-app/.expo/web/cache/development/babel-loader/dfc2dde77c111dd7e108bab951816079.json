{"ast":null,"code":"import _toConsumableArray from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nvar _excluded = [\"isHovered\", \"isFocused\", \"onKeyPress\"],\n    _excluded2 = [\"ariaLabel\", \"accessibilityLabel\", \"type\", \"isFullWidth\", \"isDisabled\", \"isReadOnly\", \"fontFamily\", \"fontWeight\", \"fontStyle\", \"placeholderTextColor\", \"selectionColor\", \"underlineColorAndroid\", \"InputLeftElement\", \"InputRightElement\", \"leftElement\", \"rightElement\", \"onFocus\", \"onBlur\", \"wrapperRef\", \"_stack\", \"_input\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport TextInput from \"react-native-web/dist/cjs/exports/TextInput\";\nimport { useToken } from '../../../hooks';\nimport { useFormControl } from '../../composites/FormControl';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { mergeRefs } from '../../../utils';\nimport { Stack } from '../Stack';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useResolvedFontFamily } from '../../../hooks/useResolvedFontFamily';\nvar StyledInput = makeStyledComponent(TextInput);\n_c = StyledInput;\n\nvar Input = function Input(_ref2, ref) {\n  _s();\n\n  var isHoveredProp = _ref2.isHovered,\n      isFocusedProp = _ref2.isFocused,\n      _onKeyPress = _ref2.onKeyPress,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  var inputProps = useFormControl({\n    isDisabled: props.isDisabled,\n    isInvalid: props.isInvalid,\n    isReadOnly: props.isReadOnly,\n    isRequired: props.isRequired,\n    nativeID: props.nativeID\n  });\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isFocused = _React$useState2[0],\n      setIsFocused = _React$useState2[1];\n\n  var handleFocus = function handleFocus(focusState, callback) {\n    setIsFocused(focusState);\n    callback();\n  };\n  /**Converting into Hash Color Code */\n  //@ts-ignore\n\n\n  props.focusOutlineColor = useToken('colors', props.focusOutlineColor); //@ts-ignore\n\n  props.invalidOutlineColor = useToken('colors', props.invalidOutlineColor);\n\n  var _ref = React.useRef(null);\n\n  var _useHover = useHover({}, _ref),\n      isHovered = _useHover.isHovered;\n\n  var inputThemeProps = {\n    isDisabled: inputProps.disabled,\n    isInvalid: inputProps.accessibilityInvalid,\n    isReadOnly: inputProps.accessibilityReadOnly,\n    isRequired: inputProps.required\n  };\n\n  var _usePropsResolution = usePropsResolution('Input', _objectSpread(_objectSpread({}, inputThemeProps), props), {\n    isDisabled: inputThemeProps.isDisabled,\n    isHovered: isHoveredProp || isHovered,\n    isFocused: isFocusedProp || isFocused,\n    isInvalid: inputThemeProps.isInvalid,\n    isReadOnly: inputThemeProps.isReadOnly\n  }),\n      ariaLabel = _usePropsResolution.ariaLabel,\n      accessibilityLabel = _usePropsResolution.accessibilityLabel,\n      type = _usePropsResolution.type,\n      isFullWidth = _usePropsResolution.isFullWidth,\n      isDisabled = _usePropsResolution.isDisabled,\n      isReadOnly = _usePropsResolution.isReadOnly,\n      fontFamily = _usePropsResolution.fontFamily,\n      fontWeight = _usePropsResolution.fontWeight,\n      fontStyle = _usePropsResolution.fontStyle,\n      placeholderTextColor = _usePropsResolution.placeholderTextColor,\n      selectionColor = _usePropsResolution.selectionColor,\n      underlineColorAndroid = _usePropsResolution.underlineColorAndroid,\n      InputLeftElement = _usePropsResolution.InputLeftElement,\n      InputRightElement = _usePropsResolution.InputRightElement,\n      leftElement = _usePropsResolution.leftElement,\n      rightElement = _usePropsResolution.rightElement,\n      _onFocus = _usePropsResolution.onFocus,\n      _onBlur = _usePropsResolution.onBlur,\n      wrapperRef = _usePropsResolution.wrapperRef,\n      _stack = _usePropsResolution._stack,\n      _input = _usePropsResolution._input,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  var _extractInObject = extractInObject(resolvedProps, [].concat(_toConsumableArray(stylingProps.margin), _toConsumableArray(stylingProps.border), _toConsumableArray(stylingProps.layout), _toConsumableArray(stylingProps.flexbox), _toConsumableArray(stylingProps.position), _toConsumableArray(stylingProps.background), ['shadow', 'opacity'])),\n      _extractInObject2 = _slicedToArray(_extractInObject, 2),\n      layoutProps = _extractInObject2[0],\n      nonLayoutProps = _extractInObject2[1];\n\n  var resolvedFontFamily = useResolvedFontFamily({\n    fontFamily: fontFamily,\n    fontWeight: fontWeight !== null && fontWeight !== void 0 ? fontWeight : 400,\n    fontStyle: fontStyle !== null && fontStyle !== void 0 ? fontStyle : 'normal'\n  });\n  var resolvedPlaceholderTextColor = useToken('colors', placeholderTextColor);\n  var resolvedSelectionColor = useToken('colors', selectionColor);\n  var resolvedUnderlineColorAndroid = useToken('colors', underlineColorAndroid); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Stack, _extends({}, _stack, layoutProps, {\n    ref: mergeRefs([_ref, wrapperRef]),\n    isFocused: isFocused\n  }), InputLeftElement || leftElement ? InputLeftElement || leftElement : null, /*#__PURE__*/React.createElement(StyledInput, _extends({}, inputProps, {\n    secureTextEntry: type === 'password',\n    accessible: true,\n    accessibilityLabel: ariaLabel || accessibilityLabel,\n    editable: isDisabled || isReadOnly ? false : true,\n    w: isFullWidth ? '100%' : undefined\n  }, nonLayoutProps, resolvedFontFamily, {\n    placeholderTextColor: resolvedPlaceholderTextColor,\n    selectionColor: resolvedSelectionColor,\n    underlineColorAndroid: resolvedUnderlineColorAndroid,\n    onKeyPress: function onKeyPress(e) {\n      e.persist();\n      _onKeyPress && _onKeyPress(e);\n    },\n    onFocus: function onFocus(e) {\n      handleFocus(true, _onFocus ? function () {\n        return _onFocus(e);\n      } : function () {});\n    },\n    onBlur: function onBlur(e) {\n      handleFocus(false, _onBlur ? function () {\n        return _onBlur(e);\n      } : function () {});\n    }\n  }, _input, {\n    ref: mergeRefs([ref, _ref, wrapperRef])\n  })), InputRightElement || rightElement ? InputRightElement || rightElement : null);\n};\n\n_s(Input, \"R7WA6dgfkWtgSWEwt4MCHK8H9cU=\", false, function () {\n  return [useFormControl, useToken, useToken, useHover, usePropsResolution, useResolvedFontFamily, useToken, useToken, useToken, useHasResponsiveProps];\n});\n\n_c2 = Input;\nexport default /*#__PURE__*/_c4 = /*#__PURE__*/memo( /*#__PURE__*/_c3 = /*#__PURE__*/forwardRef(Input));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledInput\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"%default%$memo\");\n$RefreshReg$(_c4, \"%default%\");\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/module/components/primitives/Input/Input.js"],"names":["_extends","Object","i","arguments","source","target","StyledInput","makeStyledComponent","Input","isHovered","isHoveredProp","isFocused","isFocusedProp","onKeyPress","props","inputProps","useFormControl","isDisabled","isInvalid","isReadOnly","isRequired","nativeID","setIsFocused","React","handleFocus","callback","useToken","_ref","useHover","inputThemeProps","required","ariaLabel","accessibilityLabel","type","isFullWidth","fontFamily","fontWeight","fontStyle","placeholderTextColor","selectionColor","underlineColorAndroid","InputLeftElement","InputRightElement","leftElement","rightElement","onFocus","onBlur","wrapperRef","_stack","_input","resolvedProps","usePropsResolution","layoutProps","nonLayoutProps","extractInObject","stylingProps","resolvedFontFamily","useResolvedFontFamily","resolvedPlaceholderTextColor","resolvedSelectionColor","resolvedUnderlineColorAndroid","useHasResponsiveProps","ref","mergeRefs","secureTextEntry","accessible","editable","w","undefined","e","memo","forwardRef"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, forwardRef } from 'react';\nimport { TextInput } from 'react-native';\nimport { useToken } from '../../../hooks';\nimport { useFormControl } from '../../composites/FormControl';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { mergeRefs } from '../../../utils';\nimport { Stack } from '../Stack';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useResolvedFontFamily } from '../../../hooks/useResolvedFontFamily';\nconst StyledInput = makeStyledComponent(TextInput);\n\nconst Input = ({\n  isHovered: isHoveredProp,\n  isFocused: isFocusedProp,\n  onKeyPress,\n  ...props\n}, ref) => {\n  const inputProps = useFormControl({\n    isDisabled: props.isDisabled,\n    isInvalid: props.isInvalid,\n    isReadOnly: props.isReadOnly,\n    isRequired: props.isRequired,\n    nativeID: props.nativeID\n  });\n  const [isFocused, setIsFocused] = React.useState(false);\n\n  const handleFocus = (focusState, callback) => {\n    setIsFocused(focusState);\n    callback();\n  };\n  /**Converting into Hash Color Code */\n  //@ts-ignore\n\n\n  props.focusOutlineColor = useToken('colors', props.focusOutlineColor); //@ts-ignore\n\n  props.invalidOutlineColor = useToken('colors', props.invalidOutlineColor);\n\n  const _ref = React.useRef(null);\n\n  const {\n    isHovered\n  } = useHover({}, _ref);\n  const inputThemeProps = {\n    isDisabled: inputProps.disabled,\n    isInvalid: inputProps.accessibilityInvalid,\n    isReadOnly: inputProps.accessibilityReadOnly,\n    isRequired: inputProps.required\n  };\n  const {\n    ariaLabel,\n    accessibilityLabel,\n    type,\n    isFullWidth,\n    isDisabled,\n    isReadOnly,\n    fontFamily,\n    fontWeight,\n    fontStyle,\n    placeholderTextColor,\n    selectionColor,\n    underlineColorAndroid,\n    InputLeftElement,\n    InputRightElement,\n    leftElement,\n    rightElement,\n    onFocus,\n    onBlur,\n    wrapperRef,\n    _stack,\n    _input,\n    ...resolvedProps\n  } = usePropsResolution('Input', { ...inputThemeProps,\n    ...props\n  }, {\n    isDisabled: inputThemeProps.isDisabled,\n    isHovered: isHoveredProp || isHovered,\n    isFocused: isFocusedProp || isFocused,\n    isInvalid: inputThemeProps.isInvalid,\n    isReadOnly: inputThemeProps.isReadOnly\n  });\n  const [layoutProps, nonLayoutProps] = extractInObject(resolvedProps, [...stylingProps.margin, ...stylingProps.border, ...stylingProps.layout, ...stylingProps.flexbox, ...stylingProps.position, ...stylingProps.background, 'shadow', 'opacity']);\n  const resolvedFontFamily = useResolvedFontFamily({\n    fontFamily,\n    fontWeight: fontWeight !== null && fontWeight !== void 0 ? fontWeight : 400,\n    fontStyle: fontStyle !== null && fontStyle !== void 0 ? fontStyle : 'normal'\n  });\n  const resolvedPlaceholderTextColor = useToken('colors', placeholderTextColor);\n  const resolvedSelectionColor = useToken('colors', selectionColor);\n  const resolvedUnderlineColorAndroid = useToken('colors', underlineColorAndroid); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Stack, _extends({}, _stack, layoutProps, {\n    ref: mergeRefs([_ref, wrapperRef]),\n    isFocused: isFocused\n  }), InputLeftElement || leftElement ? InputLeftElement || leftElement : null, /*#__PURE__*/React.createElement(StyledInput, _extends({}, inputProps, {\n    secureTextEntry: type === 'password',\n    accessible: true,\n    accessibilityLabel: ariaLabel || accessibilityLabel,\n    editable: isDisabled || isReadOnly ? false : true,\n    w: isFullWidth ? '100%' : undefined\n  }, nonLayoutProps, resolvedFontFamily, {\n    placeholderTextColor: resolvedPlaceholderTextColor,\n    selectionColor: resolvedSelectionColor,\n    underlineColorAndroid: resolvedUnderlineColorAndroid,\n    onKeyPress: e => {\n      e.persist();\n      onKeyPress && onKeyPress(e);\n    },\n    onFocus: e => {\n      handleFocus(true, onFocus ? () => onFocus(e) : () => {});\n    },\n    onBlur: e => {\n      handleFocus(false, onBlur ? () => onBlur(e) : () => {});\n    }\n  }, _input, {\n    ref: mergeRefs([ref, _ref, wrapperRef])\n  })), InputRightElement || rightElement ? InputRightElement || rightElement : null);\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Input));\n//# sourceMappingURL=Input.js.map"]},"metadata":{},"sourceType":"module"}