{"ast":null,"code":"var _defineProperty = require(\"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/slicedToArray\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar $cAWze$reactstatelyoverlays = require(\"@react-stately/overlays\");\n\nvar $cAWze$react = require(\"react\");\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      }\n    });\n  });\n  return dest;\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nvar $f39cdb649cd48930$exports = {};\n$parcel$export($f39cdb649cd48930$exports, \"useMenuTriggerState\", function () {\n  return $f39cdb649cd48930$export$79fefeb1c2091ac3;\n});\n\nfunction $f39cdb649cd48930$export$79fefeb1c2091ac3(props) {\n  var overlayTriggerState = $cAWze$reactstatelyoverlays.useOverlayTriggerState(props);\n\n  var _$cAWze$react$useStat = $cAWze$react.useState(null),\n      _$cAWze$react$useStat2 = _slicedToArray(_$cAWze$react$useStat, 2),\n      focusStrategy1 = _$cAWze$react$useStat2[0],\n      setFocusStrategy = _$cAWze$react$useStat2[1];\n\n  return _objectSpread(_objectSpread({\n    focusStrategy: focusStrategy1\n  }, overlayTriggerState), {}, {\n    open: function open() {\n      var focusStrategy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.open();\n    },\n    toggle: function toggle() {\n      var focusStrategy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.toggle();\n    }\n  });\n}\n\n$parcel$exportWildcard(module.exports, $f39cdb649cd48930$exports);","map":{"version":3,"sources":["packages/@react-stately/menu/src/useMenuTriggerState.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAgCgB,yC,CAAoB,K,EAA4C;EAC9E,IAAI,mBAAmB,GAAG,2BAAA,CAAA,sBAAA,CAAuB,KAAvB,CAA1B;;EACA,4BAAwC,YAAA,CAAA,QAAA,CAAwB,IAAxB,CAAxC;EAAA;EAAA,IAAK,cAAL;EAAA,IAAoB,gBAApB;;EAEA;mBACE;EADF,GAEK,mBAFL;IAGE,IAHF,kBAG4C;MAAA,IAArC,aAAqC,uEAAN,IAAM;MACxC,gBAAgB,CAAC,aAAD,CAAhB;MACA,mBAAmB,CAAC,IAApB;IACD,CANH;IAOE,MAPF,oBAO8C;MAAA,IAArC,aAAqC,uEAAN,IAAM;MAC1C,gBAAgB,CAAC,aAAD,CAAhB;MACA,mBAAmB,CAAC,MAApB;IACD;EAVH;AAYD","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusStrategy} from '@react-types/shared';\nimport {MenuTriggerProps} from '@react-types/menu';\nimport {OverlayTriggerState, useOverlayTriggerState} from '@react-stately/overlays';\nimport {useState} from 'react';\n\nexport interface MenuTriggerState extends OverlayTriggerState {\n  /** Controls which item will be auto focused when the menu opens. */\n  readonly focusStrategy: FocusStrategy,\n\n  /** Opens the menu. */\n  open(focusStrategy?: FocusStrategy | null): void,\n\n  /** Toggles the menu. */\n  toggle(focusStrategy?: FocusStrategy | null): void\n}\n\n/**\n * Manages state for a menu trigger. Tracks whether the menu is currently open,\n * and controls which item will receive focus when it opens.\n */\nexport function useMenuTriggerState(props: MenuTriggerProps): MenuTriggerState  {\n  let overlayTriggerState = useOverlayTriggerState(props);\n  let [focusStrategy, setFocusStrategy] = useState<FocusStrategy>(null);\n\n  return {\n    focusStrategy,\n    ...overlayTriggerState,\n    open(focusStrategy: FocusStrategy = null) {\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.open();\n    },\n    toggle(focusStrategy: FocusStrategy = null) {\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.toggle();\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"script"}