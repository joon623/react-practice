{"ast":null,"code":"import _defineProperty from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/utils/getSpacedChildren.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport { default as Box } from '../components/primitives/Box';\nimport { ResponsiveQueryContext } from './useResponsiveQuery/ResponsiveQueryProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction flattenChildren(children) {\n  var childrenArray = React.Children.toArray(children);\n  return childrenArray.reduce(function (flatChildren, child) {\n    if (child.type === React.Fragment) {\n      return flatChildren.concat(flattenChildren(child.props.children));\n    }\n\n    flatChildren.push(child);\n    return flatChildren;\n  }, []);\n}\n\nvar getSpacedChildren = function getSpacedChildren(children, space, axis, reverse, divider) {\n  _s();\n\n  var childrenArray = React.Children.toArray(flattenChildren(children));\n  childrenArray = reverse === 'reverse' ? _toConsumableArray(childrenArray).reverse() : childrenArray;\n  var orientation = axis === 'X' ? 'vertical' : 'horizontal'; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  var responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  var disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries; // If there's a divider, we wrap it with a Box and apply vertical and horizontal margins else we add a spacer Box with height or width\n\n  if (divider) {\n    var spacingProp = _objectSpread({}, axis === 'X' ? {\n      mx: space\n    } : {\n      my: space\n    });\n\n    divider = /*#__PURE__*/React.cloneElement(divider, _objectSpread({\n      orientation: orientation\n    }, spacingProp));\n    childrenArray = childrenArray.map(function (child, index) {\n      var _child$key;\n\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [child, index < childrenArray.length - 1 && divider]\n      }, (_child$key = child.key) !== null && _child$key !== void 0 ? _child$key : \"spaced-child-\".concat(index), true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, _this);\n    });\n  } else {\n    var _spacingProp = _objectSpread({}, axis === 'X' ? {\n      width: space\n    } : {\n      height: space\n    });\n\n    childrenArray = childrenArray.map(function (child, index) {\n      var _child$key2;\n\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [child, disableCSSMediaQueries ? index < childrenArray.length - 1 && /*#__PURE__*/_jsxDEV(Box, _objectSpread({}, _spacingProp), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 49\n        }, _this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, (_child$key2 = child.key) !== null && _child$key2 !== void 0 ? _child$key2 : \"spaced-child-\".concat(index), true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, _this);\n    });\n  }\n\n  return childrenArray;\n};\n\n_s(getSpacedChildren, \"9M6WM3fSbZqyv2x+kZ1oeHfeEYU=\");\n\nexport default getSpacedChildren;\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/utils/getSpacedChildren.tsx"],"names":["default","childrenArray","React","child","flatChildren","flattenChildren","getSpacedChildren","reverse","orientation","axis","responsiveQueryContext","disableCSSMediaQueries","spacingProp","mx","space","my","divider","index","width","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { default as Box } from '../components/primitives/Box';\nimport type { SpaceType as ThemeSpaceType } from '../components/types';\nimport { ResponsiveQueryContext } from './useResponsiveQuery/ResponsiveQueryProvider';\n\ntype SpaceType =\n  | 'gutter'\n  | '2xs'\n  | 'xs'\n  | 'sm'\n  | 'md'\n  | 'lg'\n  | 'xl'\n  | '2xl'\n  | ThemeSpaceType;\n\n// Thanks @gregberge for code and @nandorojo for suggestion.\n// Original source: https://github.com/gregberge/react-flatten-children\ntype ReactChildArray = ReturnType<typeof React.Children.toArray>;\nfunction flattenChildren(children: React.ReactNode): ReactChildArray {\n  const childrenArray = React.Children.toArray(children);\n  return childrenArray.reduce((flatChildren: ReactChildArray, child) => {\n    if ((child as React.ReactElement<any>).type === React.Fragment) {\n      return flatChildren.concat(\n        flattenChildren((child as React.ReactElement<any>).props.children)\n      );\n    }\n    flatChildren.push(child);\n    return flatChildren;\n  }, []);\n}\n\nconst getSpacedChildren = (\n  children: JSX.Element[] | JSX.Element,\n  space: undefined | SpaceType,\n  axis: 'X' | 'Y',\n  reverse: string,\n  divider: JSX.Element | undefined\n): any => {\n  let childrenArray = React.Children.toArray(flattenChildren(children));\n  childrenArray =\n    reverse === 'reverse' ? [...childrenArray].reverse() : childrenArray;\n\n  const orientation = axis === 'X' ? 'vertical' : 'horizontal';\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  const disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n\n  // If there's a divider, we wrap it with a Box and apply vertical and horizontal margins else we add a spacer Box with height or width\n  if (divider) {\n    const spacingProp: object = {\n      ...(axis === 'X' ? { mx: space } : { my: space }),\n    };\n\n    divider = React.cloneElement(divider, {\n      orientation,\n      ...spacingProp,\n    });\n\n    childrenArray = childrenArray.map((child: any, index: number) => {\n      return (\n        <React.Fragment key={child.key ?? `spaced-child-${index}`}>\n          {child}\n          {index < childrenArray.length - 1 && divider}\n        </React.Fragment>\n      );\n    });\n  } else {\n    const spacingProp: object = {\n      ...(axis === 'X' ? { width: space } : { height: space }),\n    };\n    childrenArray = childrenArray.map((child: any, index: number) => {\n      return (\n        <React.Fragment key={child.key ?? `spaced-child-${index}`}>\n          {child}\n          {disableCSSMediaQueries ? (\n            index < childrenArray.length - 1 && <Box {...spacingProp} />\n          ) : (\n            <></>\n          )}\n        </React.Fragment>\n      );\n    });\n  }\n\n  return childrenArray;\n};\n\nexport default getSpacedChildren;\n"]},"metadata":{},"sourceType":"module"}