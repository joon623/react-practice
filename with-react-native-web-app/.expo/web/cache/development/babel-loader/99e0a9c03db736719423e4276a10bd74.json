{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction flattenArray(array) {\n  function flattenDown(array, result) {\n    for (var i = 0; i < array.length; i++) {\n      var value = array[i];\n\n      if (Array.isArray(value)) {\n        flattenDown(value, result);\n      } else if (value != null && value !== false) {\n        result.push(value);\n      }\n    }\n\n    return result;\n  }\n\n  return flattenDown(array, []);\n}\n\nvar _default = flattenArray;\nexports[\"default\"] = _default;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/cjs/modules/flattenArray/index.js"],"names":["exports","i","array","value","Array","flattenDown","result","_default","module"],"mappings":"AAAA;;AAEAA,OAAO,CAAPA,UAAAA,GAAAA,IAAAA;AACAA,OAAAA,WAAAA,GAAkB,KAAlBA,CAAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAA,YAAA,CAAA,KAAA,EAA6B;EAC3B,SAAA,WAAA,CAAA,KAAA,EAAA,MAAA,EAAoC;IAClC,KAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGC,KAAK,CAAzB,MAAA,EAAkCD,CAAlC,EAAA,EAAuC;MACrC,IAAIE,KAAK,GAAGD,KAAK,CAAjB,CAAiB,CAAjB;;MAEA,IAAIE,KAAK,CAALA,OAAAA,CAAJ,KAAIA,CAAJ,EAA0B;QACxBC,WAAW,CAAA,KAAA,EAAXA,MAAW,CAAXA;MADF,CAAA,MAEO,IAAIF,KAAK,IAALA,IAAAA,IAAiBA,KAAK,KAA1B,KAAA,EAAsC;QAC3CG,MAAM,CAANA,IAAAA,CAAAA,KAAAA;MACD;IACF;;IAED,OAAA,MAAA;EACD;;EAED,OAAOD,WAAW,CAAA,KAAA,EAAlB,EAAkB,CAAlB;AACD;;AAED,IAAIE,QAAQ,GAAZ,YAAA;AACAP,OAAAA,WAAAA,GAAAA,QAAAA;AACAQ,MAAM,CAANA,OAAAA,GAAiBR,OAAjBQ,WAAAA","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nfunction flattenArray(array) {\n  function flattenDown(array, result) {\n    for (var i = 0; i < array.length; i++) {\n      var value = array[i];\n\n      if (Array.isArray(value)) {\n        flattenDown(value, result);\n      } else if (value != null && value !== false) {\n        result.push(value);\n      }\n    }\n\n    return result;\n  }\n\n  return flattenDown(array, []);\n}\n\nvar _default = flattenArray;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}