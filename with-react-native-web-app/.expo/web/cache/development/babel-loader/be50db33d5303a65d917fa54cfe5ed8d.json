{"ast":null,"code":"import { getColorFormColorScheme, getColorScheme, mode } from '../tools';\n\nfunction baseStyle(props) {\n  var activeColor = getColorFormColorScheme(props);\n  return {\n    activeTabStyle: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      mb: '-2px',\n      flexDirection: 'row',\n      _text: {\n        fontSize: 'sm',\n        fontWeight: 'bold'\n      }\n    },\n    inactiveTabStyle: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      mb: '-2px',\n      flexDirection: 'row',\n      _text: {\n        color: mode('gray.500', 'gray.400')(props),\n        fontSize: 'sm',\n        fontWeight: 'bold'\n      }\n    },\n    activeIconProps: {\n      color: activeColor,\n      name: 'home',\n      mx: 2\n    },\n    inactiveIconProps: {\n      name: 'home',\n      mx: 2\n    }\n  };\n}\n\nvar sizes = {\n  sm: {\n    activeTabStyle: {\n      _text: {\n        fontSize: 'sm'\n      },\n      py: 2,\n      px: 3\n    },\n    inactiveTabStyle: {\n      _text: {\n        fontSize: 'sm'\n      },\n      py: 2,\n      px: 3\n    }\n  },\n  md: {\n    activeTabStyle: {\n      _text: {\n        fontSize: 'md'\n      },\n      py: 3,\n      px: 4\n    },\n    inactiveTabStyle: {\n      _text: {\n        fontSize: 'md'\n      },\n      py: 3,\n      px: 4\n    }\n  },\n  lg: {\n    activeTabStyle: {\n      _text: {\n        fontSize: 'lg'\n      },\n      py: 4,\n      px: 5\n    },\n    inactiveTabStyle: {\n      _text: {\n        fontSize: 'lg'\n      },\n      py: 4,\n      px: 5\n    }\n  }\n};\n\nfunction variantOutline(props) {\n  var activeColor = getColorFormColorScheme(props);\n  var colorScheme = props.colorScheme,\n      status = props.status;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    activeTabStyle: {\n      borderColor: activeColor,\n      _text: {\n        color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".200\"))(props)\n      },\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      },\n      borderBottomWidth: 2\n    },\n    inactiveTabStyle: {\n      borderColor: 'transparent',\n      borderBottomWidth: 2,\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      }\n    },\n    tabBarStyle: {\n      borderBottomWidth: 2,\n      borderColor: mode('muted.200', 'muted.500')(props)\n    }\n  };\n}\n\nfunction variantFilled(props) {\n  var activeColor = getColorFormColorScheme(props);\n  var colorScheme = props.colorScheme,\n      status = props.status;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    activeTabStyle: {\n      borderColor: activeColor,\n      _text: {\n        color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".200\"))(props)\n      },\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      },\n      borderBottomWidth: 2,\n      bg: mode(\"\".concat(colorScheme, \".100\"), \"\".concat(colorScheme, \".700\"))(props)\n    },\n    inactiveTabStyle: {\n      borderColor: 'transparent',\n      borderBottomWidth: 2,\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      }\n    },\n    tabBarStyle: {\n      borderBottomWidth: 2,\n      borderColor: mode('muted.200', 'muted.500')(props)\n    }\n  };\n} // function variantEnclosed(props: Record<string, any>) {\n//   const activeColor = getColorFormColorScheme(props);\n//   return {\n//     activeTabStyle: {\n//       borderTopWidth: 2,\n//       borderLeftWidth: 2,\n//       borderRightWidth: 2,\n//       borderColor: activeColor,\n//     },\n//     inactiveTabStyle: {\n//       borderColor: 'muted.200',\n//       borderBottomWidth: 2,\n//     },\n//     tabBarStyle: {},\n//   };\n// }\n\n\nfunction variantFilledOutline(props) {\n  var activeColor = getColorFormColorScheme(props);\n  var colorScheme = props.colorScheme,\n      status = props.status;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    activeTabStyle: {\n      borderColor: activeColor,\n      _text: {\n        color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".200\"))(props)\n      },\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      },\n      borderBottomWidth: 2\n    },\n    inactiveTabStyle: {\n      borderColor: 'transparent',\n      borderBottomWidth: 2,\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      }\n    },\n    tabBarStyle: {\n      borderBottomWidth: 2,\n      borderColor: mode('muted.200', 'muted.500')(props),\n      bg: mode(\"\".concat(colorScheme, \".100\"), \"\".concat(colorScheme, \".700\"))(props)\n    }\n  };\n} // function varientSoftRounded(props: Record<string, any>) {\n//   const activeColor = getColorFormColorScheme(props);\n//   return {\n//     activeTabStyle: {\n//       borderRadius: 'full',\n//       bg: transparentize(activeColor, 0.7)(props.theme),\n//       color: 'white',\n//     },\n//     inactiveTabStyle: {},\n//     tabBarStyle: {},\n//   };\n// }\n// function varientSolidRounded(props: Record<string, any>) {\n//   const activeColor = getColorFormColorScheme(props);\n//   return {\n//     activeTabStyle: {\n//       borderRadius: 'full',\n//       bg: activeColor,\n//       color: 'white',\n//     },\n//     inactiveTabStyle: {},\n//     tabBarStyle: {},\n//   };\n// }\n// function varientSolidBox(props: Record<string, any>) {\n//   const activeColor = getColorFormColorScheme(props);\n//   return {\n//     activeTabStyle: {\n//       bg: activeColor,\n//       color: 'white',\n//     },\n//     inactiveTabStyle: {},\n//     tabBarStyle: {},\n//   };\n// }\n\n\nvar variants = {\n  'outline': variantOutline,\n  'filled': variantFilled,\n  'filled-outline': variantFilledOutline // 'soft-rounded': varientSoftRounded,\n  // 'solid-rounded': varientSolidRounded,\n  // 'solid-box': varientSolidBox,\n\n};\nvar defaultProps = {\n  size: 'md',\n  variant: 'outline',\n  colorScheme: 'primary'\n};\nexport default {\n  baseStyle: baseStyle,\n  variants: variants,\n  sizes: sizes,\n  defaultProps: defaultProps\n};\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/theme/components/tabs.ts"],"names":["activeColor","getColorFormColorScheme","activeTabStyle","justifyContent","alignItems","mb","flexDirection","_text","fontSize","fontWeight","inactiveTabStyle","color","mode","activeIconProps","name","mx","inactiveIconProps","sizes","sm","py","px","md","lg","colorScheme","status","props","getColorScheme","borderColor","_hover","bg","borderBottomWidth","tabBarStyle","variants","defaultProps","size","variant","baseStyle"],"mappings":"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","sourcesContent":["import { getColorFormColorScheme, getColorScheme, mode } from '../tools';\n\nfunction baseStyle(props: Record<string, any>) {\n  const activeColor = getColorFormColorScheme(props);\n  return {\n    activeTabStyle: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      mb: '-2px',\n      flexDirection: 'row',\n      _text: { fontSize: 'sm', fontWeight: 'bold' },\n    },\n    inactiveTabStyle: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      mb: '-2px',\n      flexDirection: 'row',\n      _text: {\n        color: mode('gray.500', 'gray.400')(props),\n        fontSize: 'sm',\n        fontWeight: 'bold',\n      },\n    },\n    activeIconProps: {\n      color: activeColor,\n      name: 'home',\n      mx: 2,\n    },\n    inactiveIconProps: {\n      name: 'home',\n      mx: 2,\n    },\n  };\n}\n\nconst sizes = {\n  sm: {\n    activeTabStyle: {\n      _text: { fontSize: 'sm' },\n      py: 2,\n      px: 3,\n    },\n    inactiveTabStyle: {\n      _text: { fontSize: 'sm' },\n      py: 2,\n      px: 3,\n    },\n  },\n  md: {\n    activeTabStyle: {\n      _text: { fontSize: 'md' },\n      py: 3,\n      px: 4,\n    },\n    inactiveTabStyle: {\n      _text: { fontSize: 'md' },\n      py: 3,\n      px: 4,\n    },\n  },\n  lg: {\n    activeTabStyle: {\n      _text: { fontSize: 'lg' },\n      py: 4,\n      px: 5,\n    },\n    inactiveTabStyle: {\n      _text: { fontSize: 'lg' },\n      py: 4,\n      px: 5,\n    },\n  },\n};\n\nfunction variantOutline(props: Record<string, any>) {\n  const activeColor = getColorFormColorScheme(props);\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    activeTabStyle: {\n      borderColor: activeColor,\n      _text: {\n        color: mode(`${colorScheme}.600`, `${colorScheme}.200`)(props),\n      },\n      _hover: {\n        bg: mode(`${colorScheme}.50`, `${colorScheme}.800`)(props),\n      },\n      borderBottomWidth: 2,\n    },\n    inactiveTabStyle: {\n      borderColor: 'transparent',\n      borderBottomWidth: 2,\n      _hover: {\n        bg: mode(`${colorScheme}.50`, `${colorScheme}.800`)(props),\n      },\n    },\n    tabBarStyle: {\n      borderBottomWidth: 2,\n      borderColor: mode('muted.200', 'muted.500')(props),\n    },\n  };\n}\n\nfunction variantFilled(props: Record<string, any>) {\n  const activeColor = getColorFormColorScheme(props);\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    activeTabStyle: {\n      borderColor: activeColor,\n      _text: { color: mode(`${colorScheme}.600`, `${colorScheme}.200`)(props) },\n      _hover: {\n        bg: mode(`${colorScheme}.50`, `${colorScheme}.800`)(props),\n      },\n      borderBottomWidth: 2,\n      bg: mode(`${colorScheme}.100`, `${colorScheme}.700`)(props),\n    },\n    inactiveTabStyle: {\n      borderColor: 'transparent',\n      borderBottomWidth: 2,\n      _hover: {\n        bg: mode(`${colorScheme}.50`, `${colorScheme}.800`)(props),\n      },\n    },\n    tabBarStyle: {\n      borderBottomWidth: 2,\n      borderColor: mode('muted.200', 'muted.500')(props),\n    },\n  };\n}\n\n// function variantEnclosed(props: Record<string, any>) {\n//   const activeColor = getColorFormColorScheme(props);\n//   return {\n//     activeTabStyle: {\n//       borderTopWidth: 2,\n//       borderLeftWidth: 2,\n//       borderRightWidth: 2,\n//       borderColor: activeColor,\n//     },\n//     inactiveTabStyle: {\n//       borderColor: 'muted.200',\n//       borderBottomWidth: 2,\n//     },\n//     tabBarStyle: {},\n//   };\n// }\n\nfunction variantFilledOutline(props: Record<string, any>) {\n  const activeColor = getColorFormColorScheme(props);\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    activeTabStyle: {\n      borderColor: activeColor,\n      _text: { color: mode(`${colorScheme}.600`, `${colorScheme}.200`)(props) },\n      _hover: {\n        bg: mode(`${colorScheme}.50`, `${colorScheme}.800`)(props),\n      },\n      borderBottomWidth: 2,\n    },\n    inactiveTabStyle: {\n      borderColor: 'transparent',\n      borderBottomWidth: 2,\n      _hover: {\n        bg: mode(`${colorScheme}.50`, `${colorScheme}.800`)(props),\n      },\n    },\n    tabBarStyle: {\n      borderBottomWidth: 2,\n      borderColor: mode('muted.200', 'muted.500')(props),\n      bg: mode(`${colorScheme}.100`, `${colorScheme}.700`)(props),\n    },\n  };\n}\n\n// function varientSoftRounded(props: Record<string, any>) {\n//   const activeColor = getColorFormColorScheme(props);\n//   return {\n//     activeTabStyle: {\n//       borderRadius: 'full',\n//       bg: transparentize(activeColor, 0.7)(props.theme),\n//       color: 'white',\n//     },\n//     inactiveTabStyle: {},\n//     tabBarStyle: {},\n//   };\n// }\n\n// function varientSolidRounded(props: Record<string, any>) {\n//   const activeColor = getColorFormColorScheme(props);\n//   return {\n//     activeTabStyle: {\n//       borderRadius: 'full',\n//       bg: activeColor,\n//       color: 'white',\n//     },\n//     inactiveTabStyle: {},\n//     tabBarStyle: {},\n//   };\n// }\n\n// function varientSolidBox(props: Record<string, any>) {\n//   const activeColor = getColorFormColorScheme(props);\n//   return {\n//     activeTabStyle: {\n//       bg: activeColor,\n//       color: 'white',\n//     },\n//     inactiveTabStyle: {},\n//     tabBarStyle: {},\n//   };\n// }\n\nconst variants = {\n  'outline': variantOutline,\n  'filled': variantFilled,\n  'filled-outline': variantFilledOutline,\n  // 'soft-rounded': varientSoftRounded,\n  // 'solid-rounded': varientSolidRounded,\n  // 'solid-box': varientSolidBox,\n};\n\nconst defaultProps = {\n  size: 'md',\n  variant: 'outline',\n  colorScheme: 'primary',\n};\n\nexport default {\n  baseStyle,\n  variants,\n  sizes,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"module"}