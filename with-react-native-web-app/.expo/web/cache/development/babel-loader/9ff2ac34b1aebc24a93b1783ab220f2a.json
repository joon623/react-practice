{"ast":null,"code":"var baseStyle = function baseStyle() {\n  return {\n    _light: {\n      color: 'muted.500'\n    },\n    _dark: {\n      color: 'muted.400'\n    }\n  };\n};\n\nvar sizes = {\n  '2xs': 2,\n  'xs': 3,\n  'sm': 4,\n  'md': 5,\n  'lg': 6,\n  'xl': 7,\n  '2xl': 8,\n  '3xl': 9,\n  '4xl': 10,\n  '5xl': 12,\n  '6xl': 16\n};\nvar defaultProps = {\n  size: 'sm'\n};\nexport default {\n  baseStyle: baseStyle,\n  sizes: sizes,\n  defaultProps: defaultProps\n};\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/theme/components/icon.ts"],"names":["baseStyle","_light","color","_dark","sizes","defaultProps","size"],"mappings":"AAAA,IAAMA,SAAS,GAAG,SAAZA,SAAY,GAAM;EACtB,OAAO;IACLC,MAAM,EAAE;MACNC,KAAK,EAAE;IADD,CADH;IAILC,KAAK,EAAE;MACLD,KAAK,EAAE;IADF;EAJF,CAAP;AADF,CAAA;;AAWA,IAAME,KAAK,GAAG;EACZ,OADY,CAAA;EAEZ,MAFY,CAAA;EAGZ,MAHY,CAAA;EAIZ,MAJY,CAAA;EAKZ,MALY,CAAA;EAMZ,MANY,CAAA;EAOZ,OAPY,CAAA;EAQZ,OARY,CAAA;EASZ,OATY,EAAA;EAUZ,OAVY,EAAA;EAWZ,OAAO;AAXK,CAAd;AAcA,IAAMC,YAAY,GAAG;EAAEC,IAAI,EAAE;AAAR,CAArB;AACA,eAAe;EAAEN,SAAS,EAAX,SAAA;EAAaI,KAAK,EAAlB,KAAA;EAAoBC,YAAY,EAAZA;AAApB,CAAf","sourcesContent":["const baseStyle = () => {\n  return {\n    _light: {\n      color: 'muted.500',\n    },\n    _dark: {\n      color: 'muted.400',\n    },\n  };\n};\n\nconst sizes = {\n  '2xs': 2,\n  'xs': 3,\n  'sm': 4,\n  'md': 5,\n  'lg': 6,\n  'xl': 7,\n  '2xl': 8,\n  '3xl': 9,\n  '4xl': 10,\n  '5xl': 12,\n  '6xl': 16,\n};\n\nconst defaultProps = { size: 'sm' };\nexport default { baseStyle, sizes, defaultProps };\n"]},"metadata":{},"sourceType":"module"}