{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ExecutionEnvironment = require(\"fbjs/lib/ExecutionEnvironment\");\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nvar initialURL = _ExecutionEnvironment.canUseDOM ? window.location.href : '';\nvar Linking = {\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  canOpenURL: function canOpenURL() {\n    return Promise.resolve(true);\n  },\n  getInitialURL: function getInitialURL() {\n    return Promise.resolve(initialURL);\n  },\n  openURL: function openURL(url) {\n    try {\n      open(url);\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  _validateURL: function _validateURL(url) {\n    (0, _invariant[\"default\"])(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    (0, _invariant[\"default\"])(url, 'Invalid URL: cannot be empty');\n  }\n};\n\nvar open = function open(url) {\n  if (_ExecutionEnvironment.canUseDOM) {\n    window.location = new URL(url, window.location).toString();\n  }\n};\n\nvar _default = Linking;\nexports[\"default\"] = _default;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/cjs/exports/Linking/index.js"],"names":["exports","_ExecutionEnvironment","require","_invariant","_interopRequireDefault","obj","default","initialURL","window","Linking","addEventListener","removeEventListener","canOpenURL","Promise","getInitialURL","openURL","open","_validateURL","_default","module"],"mappings":"AAAA;;AAEAA,OAAO,CAAPA,UAAAA,GAAAA,IAAAA;AACAA,OAAAA,WAAAA,GAAkB,KAAlBA,CAAAA;;AAEA,IAAIC,qBAAqB,GAAGC,OAAO,CAAnC,+BAAmC,CAAnC;;AAEA,IAAIC,UAAU,GAAGC,sBAAsB,CAACF,OAAO,CAA/C,oBAA+C,CAAR,CAAvC;;AAEA,SAAA,sBAAA,CAAA,GAAA,EAAqC;EAAE,OAAOG,GAAG,IAAIA,GAAG,CAAVA,UAAAA,GAAAA,GAAAA,GAA8B;IAAEC,WAASD;EAAX,CAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,UAAU,GAAGN,qBAAqB,CAArBA,SAAAA,GAAkCO,MAAM,CAANA,QAAAA,CAAlCP,IAAAA,GAAjB,EAAA;AACA,IAAIQ,OAAO,GAAG;EACZC,gBAAgB,EAAE,SAAA,gBAAA,GAA4B,CADlC,CAAA;EAEZC,mBAAmB,EAAE,SAAA,mBAAA,GAA+B,CAFxC,CAAA;EAGZC,UAAU,EAAE,SAAA,UAAA,GAAsB;IAChC,OAAOC,OAAO,CAAPA,OAAAA,CAAP,IAAOA,CAAP;EAJU,CAAA;EAMZC,aAAa,EAAE,SAAA,aAAA,GAAyB;IACtC,OAAOD,OAAO,CAAPA,OAAAA,CAAP,UAAOA,CAAP;EAPU,CAAA;EASZE,OAAO,EAAE,SAAA,OAAA,CAAA,GAAA,EAAsB;IAC7B,IAAI;MACFC,IAAI,CAAJA,GAAI,CAAJA;MACA,OAAOH,OAAO,CAAd,OAAOA,EAAP;IAFF,CAAA,CAGE,OAAA,CAAA,EAAU;MACV,OAAOA,OAAO,CAAPA,MAAAA,CAAP,CAAOA,CAAP;IACD;EAfS,CAAA;EAiBZI,YAAY,EAAE,SAAA,YAAA,CAAA,GAAA,EAA2B;IACvC,CAAC,GAAGd,UAAJ,WAAA,EAAwB,OAAA,GAAA,KAAxB,QAAA,EAAiD,2CAAjD,GAAA;IACA,CAAC,GAAGA,UAAJ,WAAA,EAAA,GAAA,EAAA,8BAAA;EACD;AApBW,CAAd;;AAuBA,IAAIa,IAAI,GAAG,SAAA,IAAA,CAAA,GAAA,EAAmB;EAC5B,IAAIf,qBAAqB,CAAzB,SAAA,EAAqC;IACnCO,MAAM,CAANA,QAAAA,GAAkB,IAAA,GAAA,CAAA,GAAA,EAAaA,MAAM,CAAnB,QAAA,EAAlBA,QAAkB,EAAlBA;EACD;AAHH,CAAA;;AAMA,IAAIU,QAAQ,GAAZ,OAAA;AACAlB,OAAAA,WAAAA,GAAAA,QAAAA;AACAmB,MAAM,CAANA,OAAAA,GAAiBnB,OAAjBmB,WAAAA","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _ExecutionEnvironment = require(\"fbjs/lib/ExecutionEnvironment\");\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar initialURL = _ExecutionEnvironment.canUseDOM ? window.location.href : '';\nvar Linking = {\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  canOpenURL: function canOpenURL() {\n    return Promise.resolve(true);\n  },\n  getInitialURL: function getInitialURL() {\n    return Promise.resolve(initialURL);\n  },\n  openURL: function openURL(url) {\n    try {\n      open(url);\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  _validateURL: function _validateURL(url) {\n    (0, _invariant.default)(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    (0, _invariant.default)(url, 'Invalid URL: cannot be empty');\n  }\n};\n\nvar open = function open(url) {\n  if (_ExecutionEnvironment.canUseDOM) {\n    window.location = new URL(url, window.location).toString();\n  }\n};\n\nvar _default = Linking;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}