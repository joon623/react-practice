{"ast":null,"code":"import _objectWithoutProperties from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nvar _excluded = [\"children\"];\nimport React from 'react';\nimport Box from '../../primitives/Box';\nimport { useThemeProps } from '../../../hooks/useThemeProps';\nimport Animated from \"react-native-web/dist/cjs/exports/Animated\";\nimport Platform from \"react-native-web/dist/cjs/exports/Platform\";\nimport { canUseDom } from '../../../utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nvar SlideFade = function SlideFade(_ref, ref) {\n  _s();\n\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var isDomUsable = canUseDom();\n\n  var _useThemeProps = useThemeProps('SlideFade', props),\n      animationState = _useThemeProps[\"in\"],\n      duration = _useThemeProps.duration,\n      offsetX = _useThemeProps.offsetX,\n      offsetY = _useThemeProps.offsetY;\n\n  var fadeAnim = React.useRef(new Animated.Value(0)).current;\n  var slideAnimX = React.useRef(new Animated.Value(0)).current;\n  var slideAnimY = React.useRef(new Animated.Value(0)).current;\n\n  var animIn = function animIn() {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n      Animated.timing(slideAnimX, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n      Animated.timing(slideAnimY, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n    }\n  };\n\n  var animOut = function animOut() {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n      offsetX && Animated.timing(slideAnimX, {\n        toValue: offsetX,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n      offsetY && Animated.timing(slideAnimY, {\n        toValue: offsetY,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n    }\n  };\n\n  animationState ? animIn() : animOut(); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Animated.View, {\n    style: [{\n      opacity: fadeAnim,\n      transform: [{\n        translateX: slideAnimX,\n        translateY: slideAnimY\n      }]\n    }],\n    ref: ref\n  }, /*#__PURE__*/React.createElement(Box, props, children));\n};\n\n_s(SlideFade, \"RBW/4pWqir52tJjjSY3ss5qxRGM=\", false, function () {\n  return [useThemeProps, useHasResponsiveProps];\n});\n\n_c = SlideFade;\nexport default /*#__PURE__*/_c3 = /*#__PURE__*/React.memo( /*#__PURE__*/_c2 = /*#__PURE__*/React.forwardRef(SlideFade));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SlideFade\");\n$RefreshReg$(_c2, \"%default%$React.memo\");\n$RefreshReg$(_c3, \"%default%\");\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/module/components/composites/Transitions/SlideFade.js"],"names":["SlideFade","children","props","isDomUsable","canUseDom","animationState","duration","offsetX","offsetY","useThemeProps","fadeAnim","React","Animated","slideAnimX","slideAnimY","animIn","toValue","useNativeDriver","Platform","animOut","useHasResponsiveProps","style","opacity","transform","translateX","translateY","ref"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { useThemeProps } from '../../../hooks/useThemeProps';\nimport { Animated, Platform } from 'react-native';\nimport { canUseDom } from '../../../utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst SlideFade = ({\n  children,\n  ...props\n}, ref) => {\n  const isDomUsable = canUseDom();\n  const {\n    in: animationState,\n    duration,\n    offsetX,\n    offsetY\n  } = useThemeProps('SlideFade', props);\n  const fadeAnim = React.useRef(new Animated.Value(0)).current;\n  const slideAnimX = React.useRef(new Animated.Value(0)).current;\n  const slideAnimY = React.useRef(new Animated.Value(0)).current;\n\n  const animIn = () => {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n      Animated.timing(slideAnimX, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n      Animated.timing(slideAnimY, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n    }\n  };\n\n  const animOut = () => {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n      offsetX && Animated.timing(slideAnimX, {\n        toValue: offsetX,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n      offsetY && Animated.timing(slideAnimY, {\n        toValue: offsetY,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n    }\n  };\n\n  animationState ? animIn() : animOut(); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Animated.View, {\n    style: [{\n      opacity: fadeAnim,\n      transform: [{\n        translateX: slideAnimX,\n        translateY: slideAnimY\n      }]\n    }],\n    ref: ref\n  }, /*#__PURE__*/React.createElement(Box, props, children));\n};\n\nexport default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(SlideFade));\n//# sourceMappingURL=SlideFade.js.map"]},"metadata":{},"sourceType":"module"}