{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/slicedToArray\");\n\nvar _toConsumableArray = require(\"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/toConsumableArray\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.usePropsResolutionTest = usePropsResolutionTest;\n\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\n\nvar _lodash2 = _interopRequireDefault(require(\"lodash.merge\"));\n\nvar _reactNative = require(\"react-native-web/dist/cjs/index\");\n\nvar _useNativeBase = require(\"../useNativeBase\");\n\nvar _colorMode = require(\"../../core/color-mode\");\n\nvar _tools = require(\"../../theme/tools\");\n\nvar _useContrastText = require(\"../useContrastText\");\n\nvar _useBreakpointResolvedProps = require(\"../useBreakpointResolvedProps\");\n\nvar _propsFlattenerTest = require(\"./propsFlattenerTest\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar SPREAD_PROP_SPECIFICITY_ORDER = ['p', 'padding', 'px', 'py', 'pt', 'pb', 'pl', 'pr', 'paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'm', 'margin', 'mx', 'my', 'mt', 'mb', 'ml', 'mr', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nvar FINAL_SPREAD_PROPS = ['paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nvar MARGIN_MAP = {\n  mx: ['marginRight', 'marginLeft'],\n  my: ['marginTop', 'marginBottom'],\n  mt: ['marginTop'],\n  mb: ['marginBottom'],\n  mr: ['marginRight'],\n  ml: ['marginLeft']\n};\nMARGIN_MAP.margin = [].concat(_toConsumableArray(MARGIN_MAP.mx), _toConsumableArray(MARGIN_MAP.my));\nMARGIN_MAP.m = MARGIN_MAP.margin;\nMARGIN_MAP.marginTop = MARGIN_MAP.mt;\nMARGIN_MAP.marginBottom = MARGIN_MAP.mb;\nMARGIN_MAP.marginLeft = MARGIN_MAP.ml;\nMARGIN_MAP.marginRight = MARGIN_MAP.mr;\nvar PADDING_MAP = {\n  px: ['paddingRight', 'paddingLeft'],\n  py: ['paddingTop', 'paddingBottom'],\n  pt: ['paddingTop'],\n  pb: ['paddingBottom'],\n  pr: ['paddingRight'],\n  pl: ['paddingLeft']\n};\nPADDING_MAP.padding = [].concat(_toConsumableArray(PADDING_MAP.px), _toConsumableArray(PADDING_MAP.py));\nPADDING_MAP.p = PADDING_MAP.padding;\nPADDING_MAP.paddingTop = PADDING_MAP.pt;\nPADDING_MAP.paddingBottom = PADDING_MAP.pb;\nPADDING_MAP.paddingLeft = PADDING_MAP.pl;\nPADDING_MAP.paddingRight = PADDING_MAP.pr;\n\nvar SPREAD_PROP_SPECIFICITY_MAP = _objectSpread(_objectSpread({}, PADDING_MAP), MARGIN_MAP);\n\nfunction propsSpreader(incomingProps, incomingSpecifity) {\n  var flattenedDefaultProps = _objectSpread({}, incomingProps);\n\n  var specificity = {};\n  SPREAD_PROP_SPECIFICITY_ORDER.forEach(function (prop) {\n    if (prop in flattenedDefaultProps) {\n      var val = incomingProps[prop] || flattenedDefaultProps[prop];\n\n      if (!FINAL_SPREAD_PROPS.includes(prop)) {\n        delete flattenedDefaultProps[prop];\n        specificity[prop] = incomingSpecifity[prop];\n      }\n\n      SPREAD_PROP_SPECIFICITY_MAP[prop].forEach(function (newProp) {\n        if ((0, _propsFlattenerTest.compareSpecificity)(specificity[newProp], specificity[prop])) {\n          specificity[newProp] = incomingSpecifity[prop];\n          flattenedDefaultProps[newProp] = val;\n        }\n      });\n    }\n  });\n  return (0, _lodash2[\"default\"])({}, flattenedDefaultProps);\n}\n/**\n * @summary Combines provided porps with component's theme props and resloves them.\n * @arg {string} component - Name of the component.\n * @arg {object} incomingProps - Props passed by the user.\n * @arg {object} state - dependent states.\n * @arg {object} config - configuration for resolution. Accepts key like ignoreProps, resolveResponsively.\n * @returns {object} Resolved and flattened props.\n */\n\n\nfunction usePropsResolutionTest(component, incomingProps, state, config) {\n  var _flattenProps$bg, _flattenProps$backgro, _flattenProps$bgColor, _flattenProps$backgro2, _ref, _flattenProps$bg2, _flattenProps, _flattenProps$_text, _flattenProps2, _flattenProps2$_text;\n\n  var _ref2 = (0, _tools.extractInObject)(incomingProps, ['children', 'onPress', 'icon', 'onOpen', 'onClose'].concat((config === null || config === void 0 ? void 0 : config.ignoreProps) || [])),\n      _ref3 = _slicedToArray(_ref2, 2),\n      ignoredProps = _ref3[0],\n      cleanIncomingProps = _ref3[1];\n\n  var resolveResponsively = ['colorScheme', 'size', 'variant'].concat(_toConsumableArray((config === null || config === void 0 ? void 0 : config.resolveResponsively) || []));\n\n  var _ref4 = (0, _useNativeBase.useNativeBase)(),\n      theme = _ref4.theme;\n\n  var colorModeProps = (0, _colorMode.useColorMode)();\n  var componentTheme = (0, _lodash[\"default\"])(theme, \"components.\".concat(component), {}); // STEP 1: combine default props and incoming props\n\n  var incomingWithDefaultProps = (0, _lodash2[\"default\"])({}, componentTheme.defaultProps || {}, cleanIncomingProps); // STEP 2: flatten them\n\n  var _ref5 = (0, _propsFlattenerTest.propsFlattener)({\n    props: incomingWithDefaultProps,\n    platform: _reactNative.Platform.OS,\n    colormode: colorModeProps.colorMode,\n    state: state || {},\n    previouslyFlattenProps: {}\n  }, 2),\n      _ref6 = _slicedToArray(_ref5, 2),\n      flattenProps = _ref6[0],\n      specificityMap = _ref6[1]; // STEP 2.5: resolving responsive props\n\n\n  var responsiveProps = {};\n  resolveResponsively.map(function (propsName) {\n    if (flattenProps[propsName]) {\n      // @ts-ignore\n      responsiveProps[propsName] = flattenProps[propsName];\n    }\n  });\n  var responsivelyResolvedProps = (0, _useBreakpointResolvedProps.useBreakpointResolvedProps)(responsiveProps);\n  flattenProps = _objectSpread(_objectSpread({}, flattenProps), responsivelyResolvedProps); // STEP 3: Pass it to baseStyle, then variant and then size and resolve them.\n  // NOTE: Resoloving baseStyle\n\n  var componentBaseStyle = {},\n      flattenBaseStyle,\n      baseSpecificityMap;\n\n  if (componentTheme.baseStyle) {\n    componentBaseStyle = typeof componentTheme.baseStyle !== 'function' ? componentTheme.baseStyle : componentTheme.baseStyle(_objectSpread(_objectSpread({\n      theme: theme\n    }, flattenProps), colorModeProps));\n\n    var _ref7 = (0, _propsFlattenerTest.propsFlattener)({\n      props: componentBaseStyle,\n      platform: _reactNative.Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: specificityMap,\n      previouslyFlattenProps: flattenProps\n    }, 1);\n\n    var _ref8 = _slicedToArray(_ref7, 2);\n\n    flattenBaseStyle = _ref8[0];\n    baseSpecificityMap = _ref8[1];\n  } // NOTE: Resolving variants\n\n\n  var variant = flattenProps.variant;\n  var componentVariantProps = {},\n      flattenVariantStyle,\n      variantSpecificityMap; // Extracting props from variant\n\n  if (variant && componentTheme.variants && componentTheme.variants[variant]) {\n    componentVariantProps = typeof componentTheme.variants[variant] !== 'function' ? componentTheme.variants[variant] : componentTheme.variants[variant](_objectSpread(_objectSpread({\n      theme: theme\n    }, flattenProps), colorModeProps));\n\n    var _ref9 = (0, _propsFlattenerTest.propsFlattener)({\n      props: componentVariantProps,\n      platform: _reactNative.Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: baseSpecificityMap || specificityMap,\n      // NOTE: Ideally flattenBaseStyle and flattenProps should be deeply merged to create previouslyFlattenProps.\n      previouslyFlattenProps: flattenProps\n    }, 1);\n\n    var _ref10 = _slicedToArray(_ref9, 2);\n\n    flattenVariantStyle = _ref10[0];\n    variantSpecificityMap = _ref10[1];\n    // We remove variant from original props if we found it in the componentTheme\n    //@ts-ignore\n    flattenProps.variant = undefined;\n  } // NOTE: Resolving size\n\n\n  var size = flattenProps.size;\n  var componentSizeProps = {},\n      flattenSizeStyle,\n      sizeSpecificityMap; // Extracting props from size\n\n  if (size && componentTheme.sizes && componentTheme.sizes[size]) {\n    // Type - sizes: {lg: 1}. Refer icon theme\n    if (typeof componentTheme.sizes[size] === 'string' || typeof componentTheme.sizes[size] === 'number') {\n      flattenProps.size = componentTheme.sizes[size]; //@ts-ignore\n      // componentSizeProps.size = componentTheme.sizes[size];\n    } // Type - sizes: (props) => ({lg: {px: 1}}). Refer heading theme\n    else if (typeof componentTheme.sizes[size] === 'function') {\n      flattenProps.size = undefined;\n      componentSizeProps = componentTheme.sizes[size](_objectSpread(_objectSpread({\n        theme: theme\n      }, flattenProps), colorModeProps));\n    } // Type - sizes: {lg: {px: 1}}. Refer button theme\n    else {\n      flattenProps.size = undefined;\n      componentSizeProps = componentTheme.sizes[size];\n    }\n\n    var _ref11 = (0, _propsFlattenerTest.propsFlattener)({\n      props: componentSizeProps,\n      platform: _reactNative.Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: variantSpecificityMap || baseSpecificityMap || specificityMap,\n      previouslyFlattenProps: flattenProps\n    }, 1);\n\n    var _ref12 = _slicedToArray(_ref11, 2);\n\n    flattenSizeStyle = _ref12[0];\n    sizeSpecificityMap = _ref12[1];\n  } // // STEP 4: merge\n\n\n  var defaultStyles = (0, _lodash2[\"default\"])({}, flattenBaseStyle, flattenVariantStyle, flattenSizeStyle);\n\n  for (var prop in defaultStyles) {\n    delete flattenProps[prop];\n  }\n\n  var defaultSpecificity = (0, _lodash2[\"default\"])({}, specificityMap, baseSpecificityMap, variantSpecificityMap, sizeSpecificityMap);\n  flattenProps = propsSpreader(_objectSpread(_objectSpread({}, defaultStyles), flattenProps), defaultSpecificity); // // STEP 5: linear Grad and contrastText\n\n  var ignore = [];\n\n  if ((_flattenProps$bg = flattenProps.bg) !== null && _flattenProps$bg !== void 0 && _flattenProps$bg.linearGradient || (_flattenProps$backgro = flattenProps.background) !== null && _flattenProps$backgro !== void 0 && _flattenProps$backgro.linearGradient || (_flattenProps$bgColor = flattenProps.bgColor) !== null && _flattenProps$bgColor !== void 0 && _flattenProps$bgColor.linearGradient || (_flattenProps$backgro2 = flattenProps.backgroundColor) !== null && _flattenProps$backgro2 !== void 0 && _flattenProps$backgro2.linearGradient) {\n    var _flattenProps$backgro3, _flattenProps$bgColor2, _flattenProps$backgro4;\n\n    var bgProp = 'bg';\n\n    if ((_flattenProps$backgro3 = flattenProps.background) !== null && _flattenProps$backgro3 !== void 0 && _flattenProps$backgro3.linearGradient) {\n      bgProp = 'background';\n    } else if ((_flattenProps$bgColor2 = flattenProps.bgColor) !== null && _flattenProps$bgColor2 !== void 0 && _flattenProps$bgColor2.linearGradient) {\n      bgProp = 'bgColor';\n    } else if ((_flattenProps$backgro4 = flattenProps.backgroundColor) !== null && _flattenProps$backgro4 !== void 0 && _flattenProps$backgro4.linearGradient) {\n      bgProp = 'backgroundColor';\n    }\n\n    flattenProps[bgProp].linearGradient.colors = flattenProps[bgProp].linearGradient.colors.map(function (color) {\n      return (0, _lodash[\"default\"])(theme.colors, color, color);\n    });\n    ignore = ['bg', 'background', 'backgroundColor', 'bgColor'];\n  } // // NOTE: seprating bg props when linearGardiant is available\n\n\n  var _ref13 = (0, _tools.extractInObject)(flattenProps, ignore),\n      _ref14 = _slicedToArray(_ref13, 1),\n      gradientProps = _ref14[0];\n\n  var bgColor = (_ref = (_flattenProps$bg2 = flattenProps.bg) !== null && _flattenProps$bg2 !== void 0 ? _flattenProps$bg2 : flattenProps.backgroundColor) !== null && _ref !== void 0 ? _ref : flattenProps.bgColor;\n  var contrastTextColor = (0, _useContrastText.useContrastText)(bgColor, (_flattenProps = flattenProps) === null || _flattenProps === void 0 ? void 0 : (_flattenProps$_text = _flattenProps._text) === null || _flattenProps$_text === void 0 ? void 0 : _flattenProps$_text.color);\n  flattenProps._text = contrastTextColor && ((_flattenProps2 = flattenProps) === null || _flattenProps2 === void 0 ? void 0 : (_flattenProps2$_text = _flattenProps2._text) === null || _flattenProps2$_text === void 0 ? void 0 : _flattenProps2$_text.color) === undefined ? _objectSpread({\n    color: contrastTextColor\n  }, flattenProps._text) : flattenProps._text;\n  var resolvedProps = (0, _tools.omitUndefined)(_objectSpread(_objectSpread(_objectSpread({}, flattenProps), ignoredProps), gradientProps)); // STEP 6: Return\n  // flattenProps = {};\n  // propertyDepth = {};\n\n  return resolvedProps;\n}","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/commonjs/hooks/useThemeProps/usePropsResolutionTest.js"],"names":["Object","value","exports","_lodash","_interopRequireDefault","require","_lodash2","_useNativeBase","_colorMode","_tools","_useContrastText","_useBreakpointResolvedProps","_propsFlattenerTest","obj","default","SPREAD_PROP_SPECIFICITY_ORDER","FINAL_SPREAD_PROPS","MARGIN_MAP","mx","my","mt","mb","mr","ml","PADDING_MAP","px","py","pt","pb","pr","pl","SPREAD_PROP_SPECIFICITY_MAP","flattenedDefaultProps","specificity","prop","val","incomingProps","incomingSpecifity","newProp","config","resolveResponsively","theme","colorModeProps","componentTheme","incomingWithDefaultProps","props","platform","_reactNative","colormode","state","previouslyFlattenProps","responsiveProps","propsName","flattenProps","responsivelyResolvedProps","componentBaseStyle","currentSpecificityMap","variant","componentVariantProps","baseSpecificityMap","size","componentSizeProps","variantSpecificityMap","defaultStyles","defaultSpecificity","propsSpreader","ignore","_flattenProps$bg","_flattenProps$backgro","_flattenProps$bgColor","_flattenProps$backgro2","bgProp","_flattenProps$backgro3","_flattenProps$bgColor2","_flattenProps$backgro4","color","bgColor","_ref","_flattenProps$bg2","contrastTextColor","_flattenProps","_flattenProps$_text","_flattenProps2","_flattenProps2$_text","resolvedProps"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.usePropsResolutionTest = usePropsResolutionTest;\n\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\n\nvar _lodash2 = _interopRequireDefault(require(\"lodash.merge\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _useNativeBase = require(\"../useNativeBase\");\n\nvar _colorMode = require(\"../../core/color-mode\");\n\nvar _tools = require(\"../../theme/tools\");\n\nvar _useContrastText = require(\"../useContrastText\");\n\nvar _useBreakpointResolvedProps = require(\"../useBreakpointResolvedProps\");\n\nvar _propsFlattenerTest = require(\"./propsFlattenerTest\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst SPREAD_PROP_SPECIFICITY_ORDER = ['p', 'padding', 'px', 'py', 'pt', 'pb', 'pl', 'pr', 'paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'm', 'margin', 'mx', 'my', 'mt', 'mb', 'ml', 'mr', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nconst FINAL_SPREAD_PROPS = ['paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nconst MARGIN_MAP = {\n  mx: ['marginRight', 'marginLeft'],\n  my: ['marginTop', 'marginBottom'],\n  mt: ['marginTop'],\n  mb: ['marginBottom'],\n  mr: ['marginRight'],\n  ml: ['marginLeft']\n};\nMARGIN_MAP.margin = [...MARGIN_MAP.mx, ...MARGIN_MAP.my];\nMARGIN_MAP.m = MARGIN_MAP.margin;\nMARGIN_MAP.marginTop = MARGIN_MAP.mt;\nMARGIN_MAP.marginBottom = MARGIN_MAP.mb;\nMARGIN_MAP.marginLeft = MARGIN_MAP.ml;\nMARGIN_MAP.marginRight = MARGIN_MAP.mr;\nconst PADDING_MAP = {\n  px: ['paddingRight', 'paddingLeft'],\n  py: ['paddingTop', 'paddingBottom'],\n  pt: ['paddingTop'],\n  pb: ['paddingBottom'],\n  pr: ['paddingRight'],\n  pl: ['paddingLeft']\n};\nPADDING_MAP.padding = [...PADDING_MAP.px, ...PADDING_MAP.py];\nPADDING_MAP.p = PADDING_MAP.padding;\nPADDING_MAP.paddingTop = PADDING_MAP.pt;\nPADDING_MAP.paddingBottom = PADDING_MAP.pb;\nPADDING_MAP.paddingLeft = PADDING_MAP.pl;\nPADDING_MAP.paddingRight = PADDING_MAP.pr;\nconst SPREAD_PROP_SPECIFICITY_MAP = { ...PADDING_MAP,\n  ...MARGIN_MAP\n};\n\nfunction propsSpreader(incomingProps, incomingSpecifity) {\n  const flattenedDefaultProps = { ...incomingProps\n  };\n  const specificity = {};\n  SPREAD_PROP_SPECIFICITY_ORDER.forEach(prop => {\n    if (prop in flattenedDefaultProps) {\n      const val = incomingProps[prop] || flattenedDefaultProps[prop];\n\n      if (!FINAL_SPREAD_PROPS.includes(prop)) {\n        delete flattenedDefaultProps[prop];\n        specificity[prop] = incomingSpecifity[prop];\n      }\n\n      SPREAD_PROP_SPECIFICITY_MAP[prop].forEach(newProp => {\n        if ((0, _propsFlattenerTest.compareSpecificity)(specificity[newProp], specificity[prop])) {\n          specificity[newProp] = incomingSpecifity[prop];\n          flattenedDefaultProps[newProp] = val;\n        }\n      });\n    }\n  });\n  return (0, _lodash2.default)({}, flattenedDefaultProps);\n}\n/**\n * @summary Combines provided porps with component's theme props and resloves them.\n * @arg {string} component - Name of the component.\n * @arg {object} incomingProps - Props passed by the user.\n * @arg {object} state - dependent states.\n * @arg {object} config - configuration for resolution. Accepts key like ignoreProps, resolveResponsively.\n * @returns {object} Resolved and flattened props.\n */\n\n\nfunction usePropsResolutionTest(component, incomingProps, state, config) {\n  var _flattenProps$bg, _flattenProps$backgro, _flattenProps$bgColor, _flattenProps$backgro2, _ref, _flattenProps$bg2, _flattenProps, _flattenProps$_text, _flattenProps2, _flattenProps2$_text;\n\n  const [ignoredProps, cleanIncomingProps] = (0, _tools.extractInObject)(incomingProps, ['children', 'onPress', 'icon', 'onOpen', 'onClose'].concat((config === null || config === void 0 ? void 0 : config.ignoreProps) || []));\n  const resolveResponsively = ['colorScheme', 'size', 'variant', ...((config === null || config === void 0 ? void 0 : config.resolveResponsively) || [])];\n  const {\n    theme\n  } = (0, _useNativeBase.useNativeBase)();\n  const colorModeProps = (0, _colorMode.useColorMode)();\n  const componentTheme = (0, _lodash.default)(theme, \"components.\".concat(component), {}); // STEP 1: combine default props and incoming props\n\n  const incomingWithDefaultProps = (0, _lodash2.default)({}, componentTheme.defaultProps || {}, cleanIncomingProps); // STEP 2: flatten them\n\n  let [flattenProps, specificityMap] = (0, _propsFlattenerTest.propsFlattener)({\n    props: incomingWithDefaultProps,\n    platform: _reactNative.Platform.OS,\n    colormode: colorModeProps.colorMode,\n    state: state || {},\n    previouslyFlattenProps: {}\n  }, 2); // STEP 2.5: resolving responsive props\n\n  const responsiveProps = {};\n  resolveResponsively.map(propsName => {\n    if (flattenProps[propsName]) {\n      // @ts-ignore\n      responsiveProps[propsName] = flattenProps[propsName];\n    }\n  });\n  const responsivelyResolvedProps = (0, _useBreakpointResolvedProps.useBreakpointResolvedProps)(responsiveProps);\n  flattenProps = { ...flattenProps,\n    ...responsivelyResolvedProps\n  }; // STEP 3: Pass it to baseStyle, then variant and then size and resolve them.\n  // NOTE: Resoloving baseStyle\n\n  let componentBaseStyle = {},\n      flattenBaseStyle,\n      baseSpecificityMap;\n\n  if (componentTheme.baseStyle) {\n    componentBaseStyle = typeof componentTheme.baseStyle !== 'function' ? componentTheme.baseStyle : componentTheme.baseStyle({\n      theme,\n      ...flattenProps,\n      ...colorModeProps\n    });\n    [flattenBaseStyle, baseSpecificityMap] = (0, _propsFlattenerTest.propsFlattener)({\n      props: componentBaseStyle,\n      platform: _reactNative.Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: specificityMap,\n      previouslyFlattenProps: flattenProps\n    }, 1);\n  } // NOTE: Resolving variants\n\n\n  const variant = flattenProps.variant;\n  let componentVariantProps = {},\n      flattenVariantStyle,\n      variantSpecificityMap; // Extracting props from variant\n\n  if (variant && componentTheme.variants && componentTheme.variants[variant]) {\n    componentVariantProps = typeof componentTheme.variants[variant] !== 'function' ? componentTheme.variants[variant] : componentTheme.variants[variant]({\n      theme,\n      ...flattenProps,\n      ...colorModeProps\n    });\n    [flattenVariantStyle, variantSpecificityMap] = (0, _propsFlattenerTest.propsFlattener)({\n      props: componentVariantProps,\n      platform: _reactNative.Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: baseSpecificityMap || specificityMap,\n      // NOTE: Ideally flattenBaseStyle and flattenProps should be deeply merged to create previouslyFlattenProps.\n      previouslyFlattenProps: flattenProps\n    }, 1); // We remove variant from original props if we found it in the componentTheme\n    //@ts-ignore\n\n    flattenProps.variant = undefined;\n  } // NOTE: Resolving size\n\n\n  const size = flattenProps.size;\n  let componentSizeProps = {},\n      flattenSizeStyle,\n      sizeSpecificityMap; // Extracting props from size\n\n  if (size && componentTheme.sizes && componentTheme.sizes[size]) {\n    // Type - sizes: {lg: 1}. Refer icon theme\n    if (typeof componentTheme.sizes[size] === 'string' || typeof componentTheme.sizes[size] === 'number') {\n      flattenProps.size = componentTheme.sizes[size]; //@ts-ignore\n      // componentSizeProps.size = componentTheme.sizes[size];\n    } // Type - sizes: (props) => ({lg: {px: 1}}). Refer heading theme\n    else if (typeof componentTheme.sizes[size] === 'function') {\n        flattenProps.size = undefined;\n        componentSizeProps = componentTheme.sizes[size]({\n          theme,\n          ...flattenProps,\n          ...colorModeProps\n        });\n      } // Type - sizes: {lg: {px: 1}}. Refer button theme\n      else {\n          flattenProps.size = undefined;\n          componentSizeProps = componentTheme.sizes[size];\n        }\n\n    [flattenSizeStyle, sizeSpecificityMap] = (0, _propsFlattenerTest.propsFlattener)({\n      props: componentSizeProps,\n      platform: _reactNative.Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: variantSpecificityMap || baseSpecificityMap || specificityMap,\n      previouslyFlattenProps: flattenProps\n    }, 1);\n  } // // STEP 4: merge\n\n\n  const defaultStyles = (0, _lodash2.default)({}, flattenBaseStyle, flattenVariantStyle, flattenSizeStyle);\n\n  for (const prop in defaultStyles) {\n    delete flattenProps[prop];\n  }\n\n  const defaultSpecificity = (0, _lodash2.default)({}, specificityMap, baseSpecificityMap, variantSpecificityMap, sizeSpecificityMap);\n  flattenProps = propsSpreader({ ...defaultStyles,\n    ...flattenProps\n  }, defaultSpecificity); // // STEP 5: linear Grad and contrastText\n\n  let ignore = [];\n\n  if ((_flattenProps$bg = flattenProps.bg) !== null && _flattenProps$bg !== void 0 && _flattenProps$bg.linearGradient || (_flattenProps$backgro = flattenProps.background) !== null && _flattenProps$backgro !== void 0 && _flattenProps$backgro.linearGradient || (_flattenProps$bgColor = flattenProps.bgColor) !== null && _flattenProps$bgColor !== void 0 && _flattenProps$bgColor.linearGradient || (_flattenProps$backgro2 = flattenProps.backgroundColor) !== null && _flattenProps$backgro2 !== void 0 && _flattenProps$backgro2.linearGradient) {\n    var _flattenProps$backgro3, _flattenProps$bgColor2, _flattenProps$backgro4;\n\n    let bgProp = 'bg';\n\n    if ((_flattenProps$backgro3 = flattenProps.background) !== null && _flattenProps$backgro3 !== void 0 && _flattenProps$backgro3.linearGradient) {\n      bgProp = 'background';\n    } else if ((_flattenProps$bgColor2 = flattenProps.bgColor) !== null && _flattenProps$bgColor2 !== void 0 && _flattenProps$bgColor2.linearGradient) {\n      bgProp = 'bgColor';\n    } else if ((_flattenProps$backgro4 = flattenProps.backgroundColor) !== null && _flattenProps$backgro4 !== void 0 && _flattenProps$backgro4.linearGradient) {\n      bgProp = 'backgroundColor';\n    }\n\n    flattenProps[bgProp].linearGradient.colors = flattenProps[bgProp].linearGradient.colors.map(color => {\n      return (0, _lodash.default)(theme.colors, color, color);\n    });\n    ignore = ['bg', 'background', 'backgroundColor', 'bgColor'];\n  } // // NOTE: seprating bg props when linearGardiant is available\n\n\n  const [gradientProps] = (0, _tools.extractInObject)(flattenProps, ignore);\n  const bgColor = (_ref = (_flattenProps$bg2 = flattenProps.bg) !== null && _flattenProps$bg2 !== void 0 ? _flattenProps$bg2 : flattenProps.backgroundColor) !== null && _ref !== void 0 ? _ref : flattenProps.bgColor;\n  const contrastTextColor = (0, _useContrastText.useContrastText)(bgColor, (_flattenProps = flattenProps) === null || _flattenProps === void 0 ? void 0 : (_flattenProps$_text = _flattenProps._text) === null || _flattenProps$_text === void 0 ? void 0 : _flattenProps$_text.color);\n  flattenProps._text = contrastTextColor && ((_flattenProps2 = flattenProps) === null || _flattenProps2 === void 0 ? void 0 : (_flattenProps2$_text = _flattenProps2._text) === null || _flattenProps2$_text === void 0 ? void 0 : _flattenProps2$_text.color) === undefined ? {\n    color: contrastTextColor,\n    ...flattenProps._text\n  } : flattenProps._text;\n  const resolvedProps = (0, _tools.omitUndefined)({ ...flattenProps,\n    ...ignoredProps,\n    ...gradientProps\n  }); // STEP 6: Return\n  // flattenProps = {};\n  // propertyDepth = {};\n\n  return resolvedProps;\n}\n//# sourceMappingURL=usePropsResolutionTest.js.map"]},"metadata":{},"sourceType":"script"}