{"ast":null,"code":"var _jsxFileName = \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/components/index.helper.tsx\",\n    _this = this;\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/*\n * contents data section end\n *  */\nvar INITIAL_DEEP_RATIO = 14;\nvar INITIAL_DEEP_CRITERIA = 15;\nvar REM_CRITERIA_MIN = 20;\nvar REM_CRITERIA_MAX = 25;\nvar REM_CRITERIA = 22.5;\nvar INITIAL_REM_RATIO = 28;\nvar LATENCY_CRITERIA = 30;\nvar INITIAL_LATENCY_RATIO = 31;\nvar INITIAL_ACTUAL_SLEEP_TIME = 500;\nvar INITIAL_LATENCY_TIME = 100;\nvar INITIAL_SLEEP_STAGE_RATIO = {\n  deep: 18,\n  light: 64,\n  rem: 17,\n  wake: 3\n};\nvar INITIAL_SLEEP_STAGE_TIME = {\n  deep: 130,\n  light: 200,\n  rem: 95,\n  wake: 6\n};\n\nvar renderMinuteToHourTime = function renderMinuteToHourTime(time) {\n  if (time < 60) {\n    return __jsx(React.Fragment, null, time, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \"\\uBD84\"), ' ');\n  } else if (time % 60 === 0) {\n    var hour = Math.floor(time / 60);\n    return __jsx(React.Fragment, null, hour, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"\\uC2DC\\uAC04\"));\n  } else {\n    var _hour = Math.floor(time / 60);\n\n    var minute = time % 60;\n    return __jsx(React.Fragment, null, _hour, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"\\uC2DC\\uAC04\"), \" \", minute, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, \"\\uBD84\"));\n  }\n};\n\nvar renderDeepComparationData = function renderDeepComparationData(deepValue) {\n  return {\n    deepComparation: {\n      criteria: {\n        value: INITIAL_DEEP_CRITERIA\n      },\n      renderEvaluation: function renderEvaluation() {\n        return deepValue >= INITIAL_DEEP_CRITERIA ? '좋아요' : '적어요';\n      },\n      renderTitle: function renderTitle() {\n        // 깊은 잠 비율 15% 초과 일때\n        return deepValue > INITIAL_DEEP_CRITERIA ? \"\\uAE4A\\uC740 \\uC7A0\\uC758 \\uBE44\\uC728\\uC774 \".concat(deepValue - INITIAL_DEEP_CRITERIA, \"% \\uB192\\uC544\\uC694.\") : \"\\uAE4A\\uC740 \\uC7A0\\uC758 \\uBE44\\uC728\\uC774 \\uC801\\uB2F9\\uD574\\uC694.\";\n      },\n      subTitle: '* 15% 이상이면 정상입니다.',\n      unit: '%',\n      user: {\n        category: '나의 깊은 잠',\n        value: deepValue\n      }\n    }\n  };\n};\n\nvar renderRemComparationData = function renderRemComparationData(remValue) {\n  return {\n    remComparation: {\n      criteria: {\n        rem: {\n          max: REM_CRITERIA_MAX,\n          min: REM_CRITERIA_MIN\n        },\n        value: REM_CRITERIA\n      },\n      renderEvaluation: function renderEvaluation() {\n        if (remValue > REM_CRITERIA_MAX) {\n          return '많아요';\n        } else if (remValue < REM_CRITERIA_MIN) {\n          return '적어요';\n        } else {\n          return '좋아요';\n        }\n      },\n      renderTitle: function renderTitle() {\n        if (remValue > REM_CRITERIA_MAX) {\n          return \"REM\\uC758 \\uBE44\\uC728\\uC774 \".concat(remValue - REM_CRITERIA_MAX, \"% \\uB192\\uC544\\uC694.\");\n        } else if (remValue < REM_CRITERIA_MIN) {\n          return \"REM\\uC758 \\uBE44\\uC728\\uC774 \".concat(REM_CRITERIA_MIN - remValue, \"% \\uB0AE\\uC544\\uC694.\");\n        } else {\n          return 'REM의 비율이 적당해요.';\n        }\n      },\n      subTitle: '* 20~25%면 정상입니다.',\n      unit: '%',\n      user: {\n        category: '나의 REM',\n        value: remValue\n      }\n    }\n  };\n};\n\nvar renderLatencyComparationData = function renderLatencyComparationData(latencyValue) {\n  return {\n    latencyComparation: {\n      criteria: {\n        value: LATENCY_CRITERIA\n      },\n      renderEvaluation: function renderEvaluation() {\n        return latencyValue > LATENCY_CRITERIA ? '많아요' : '좋아요';\n      },\n      renderTitle: function renderTitle() {\n        return latencyValue > LATENCY_CRITERIA ? \"\\uC7A0\\uB4DC\\uB294\\uB370 \\uD3C9\\uADE0\\uBCF4\\uB2E4 \".concat(latencyValue - LATENCY_CRITERIA, \"\\uBD84 \\uB354 \\uAC78\\uB824\\uC694.\") : \"\\uC7A0\\uB4DC\\uB294 \\uB370 \\uAC78\\uB9B0 \\uC2DC\\uAC04\\uC774 \\uC801\\uB2F9\\uD574\\uC694.\";\n      },\n      subTitle: '* 눈을 감고 30분 안에 잠들면 정상입니다.',\n      unit: '분',\n      user: {\n        category: '나의 잠드는 데 걸린 시간',\n        value: latencyValue\n      }\n    }\n  };\n};\n\nvar renderSleepStageData = function renderSleepStageData(stageRatio, stageTime) {\n  return {\n    stageValue: {\n      stageRatio: stageRatio,\n      stageTime: stageTime\n    }\n  };\n};\n\nvar COLOR_ALPHA = 0.2;\n\nvar setAlphaValue = function setAlphaValue(currentRatio, currentIndex) {\n  if (currentRatio === -1) {\n    return 1;\n  }\n\n  if (currentIndex !== currentRatio) {\n    return COLOR_ALPHA;\n  } else {\n    return 1;\n  }\n};\n\nvar DATE_FORMAT_INDEX_TOP_DATE = 'M월 DD일 dddd';\nvar DATE_FORMAT_QUERY_DATE = 'YYYY-MM-DD';\nexport { renderMinuteToHourTime, renderDeepComparationData, renderLatencyComparationData, renderRemComparationData, renderSleepStageData, INITIAL_SLEEP_STAGE_RATIO, INITIAL_SLEEP_STAGE_TIME, setAlphaValue, DATE_FORMAT_INDEX_TOP_DATE, DATE_FORMAT_QUERY_DATE };","map":{"version":3,"names":["INITIAL_DEEP_RATIO","INITIAL_DEEP_CRITERIA","REM_CRITERIA_MIN","REM_CRITERIA_MAX","REM_CRITERIA","INITIAL_REM_RATIO","LATENCY_CRITERIA","INITIAL_LATENCY_RATIO","INITIAL_ACTUAL_SLEEP_TIME","INITIAL_LATENCY_TIME","INITIAL_SLEEP_STAGE_RATIO","deep","light","rem","wake","INITIAL_SLEEP_STAGE_TIME","renderMinuteToHourTime","time","hour","Math","floor","minute","renderDeepComparationData","deepValue","deepComparation","criteria","value","renderEvaluation","renderTitle","subTitle","unit","user","category","renderRemComparationData","remValue","remComparation","max","min","renderLatencyComparationData","latencyValue","latencyComparation","renderSleepStageData","stageRatio","stageTime","stageValue","COLOR_ALPHA","setAlphaValue","currentRatio","currentIndex","DATE_FORMAT_INDEX_TOP_DATE","DATE_FORMAT_QUERY_DATE"],"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/components/index.helper.tsx"],"sourcesContent":["/*\n * contents data section end\n *  */\n\nconst INITIAL_DEEP_RATIO = 14;\nconst INITIAL_DEEP_CRITERIA = 15;\n\nconst REM_CRITERIA_MIN = 20;\nconst REM_CRITERIA_MAX = 25;\nconst REM_CRITERIA = 22.5;\nconst INITIAL_REM_RATIO = 28;\n\nconst LATENCY_CRITERIA = 30;\nconst INITIAL_LATENCY_RATIO = 31;\n\nconst INITIAL_ACTUAL_SLEEP_TIME = 500;\nconst INITIAL_LATENCY_TIME = 100;\n\ntype SleepStageType = {\n    deep: number;\n    light: number;\n    rem: number;\n    wake: number;\n};\n\nconst INITIAL_SLEEP_STAGE_RATIO: SleepStageType = {\n    deep: 18,\n    light: 64,\n    rem: 17,\n    wake: 3,\n};\n\nconst INITIAL_SLEEP_STAGE_TIME: SleepStageType = {\n    deep: 130,\n    light: 200,\n    rem: 95,\n    wake: 6,\n};\n\nconst renderMinuteToHourTime = (time: number) => {\n    if (time < 60) {\n        return (\n            <>\n                {time}\n                <span>분</span>{' '}\n            </>\n        );\n    } else if (time % 60 === 0) {\n        const hour = Math.floor(time / 60);\n        return (\n            <>\n                {hour}\n                <span>시간</span>\n            </>\n        );\n    } else {\n        const hour = Math.floor(time / 60);\n        const minute = time % 60;\n        return (\n            <>\n                {hour}\n                <span>시간</span> {minute}\n                <span>분</span>\n            </>\n        );\n    }\n};\n\n\nconst renderDeepComparationData = (deepValue: number) => {\n    return {\n        deepComparation: {\n            criteria: {\n                value: INITIAL_DEEP_CRITERIA,\n            },\n            renderEvaluation: () => {\n                return deepValue >= INITIAL_DEEP_CRITERIA ? '좋아요' : '적어요';\n            },\n            renderTitle: () => {\n                // 깊은 잠 비율 15% 초과 일때\n                return deepValue > INITIAL_DEEP_CRITERIA\n                    ? `깊은 잠의 비율이 ${deepValue - INITIAL_DEEP_CRITERIA}% 높아요.`\n                    : `깊은 잠의 비율이 적당해요.`;\n            },\n            subTitle: '* 15% 이상이면 정상입니다.',\n            unit: '%',\n            user: {category: '나의 깊은 잠', value: deepValue},\n        },\n    };\n};\n\nconst renderRemComparationData = (remValue: number) => {\n    return {\n        remComparation: {\n            criteria: {\n                rem: {\n                    max: REM_CRITERIA_MAX,\n                    min: REM_CRITERIA_MIN,\n                },\n                value: REM_CRITERIA,\n            },\n            renderEvaluation: () => {\n                if (remValue > REM_CRITERIA_MAX) {\n                    return '많아요';\n                } else if (remValue < REM_CRITERIA_MIN) {\n                    return '적어요';\n                } else {\n                    return '좋아요';\n                }\n            },\n            renderTitle: () => {\n                if (remValue > REM_CRITERIA_MAX) {\n                    return `REM의 비율이 ${remValue - REM_CRITERIA_MAX}% 높아요.`;\n                } else if (remValue < REM_CRITERIA_MIN) {\n                    return `REM의 비율이 ${REM_CRITERIA_MIN - remValue}% 낮아요.`;\n                } else {\n                    return 'REM의 비율이 적당해요.';\n                }\n            },\n            subTitle: '* 20~25%면 정상입니다.',\n            unit: '%',\n            user: {category: '나의 REM', value: remValue},\n        },\n    };\n};\n\nconst renderLatencyComparationData = (latencyValue: number) => {\n    return {\n        latencyComparation: {\n            criteria: {\n                value: LATENCY_CRITERIA,\n            },\n            renderEvaluation: () => {\n                return latencyValue > LATENCY_CRITERIA ? '많아요' : '좋아요';\n            },\n            renderTitle: () => {\n                return latencyValue > LATENCY_CRITERIA\n                    ? `잠드는데 평균보다 ${latencyValue - LATENCY_CRITERIA}분 더 걸려요.`\n                    : `잠드는 데 걸린 시간이 적당해요.`;\n            },\n            subTitle: '* 눈을 감고 30분 안에 잠들면 정상입니다.',\n            unit: '분',\n            user: {\n                category: '나의 잠드는 데 걸린 시간',\n                value: latencyValue,\n            },\n        },\n    };\n};\n\n\nconst renderSleepStageData = (\n    stageRatio: SleepStageType,\n    stageTime: SleepStageType,\n) => {\n    return {\n        stageValue: {\n            stageRatio,\n            stageTime,\n        },\n    };\n};\n\nconst COLOR_ALPHA = 0.2;\nconst setAlphaValue = (currentRatio: number, currentIndex: number): number => {\n    if (currentRatio === -1) {\n        return 1;\n    }\n\n    if (currentIndex !== currentRatio) {\n        return COLOR_ALPHA;\n    } else {\n        return 1;\n    }\n};\n\nconst DATE_FORMAT_INDEX_TOP_DATE = 'M월 DD일 dddd';\nconst DATE_FORMAT_QUERY_DATE = 'YYYY-MM-DD';\n\nexport {\n    renderMinuteToHourTime,\n    renderDeepComparationData,\n    renderLatencyComparationData,\n    renderRemComparationData,\n    renderSleepStageData,\n    INITIAL_SLEEP_STAGE_RATIO,\n    INITIAL_SLEEP_STAGE_TIME, setAlphaValue,\n    DATE_FORMAT_INDEX_TOP_DATE,\n    DATE_FORMAT_QUERY_DATE\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}