{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _Platform = _interopRequireDefault(require(\"../../../exports/Platform\"));\n\nvar _UIManager = _interopRequireDefault(require(\"../../../exports/UIManager\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar __DEV__ = true;\n\nfunction configureNext(config, onAnimationDidEnd) {\n  if (!_Platform[\"default\"].isTesting) {\n    _UIManager[\"default\"].configureNextLayoutAnimation(config, onAnimationDidEnd !== null && onAnimationDidEnd !== void 0 ? onAnimationDidEnd : function () {}, function () {}\n    /* unused onError */\n    );\n  }\n}\n\nfunction create(duration, type, property) {\n  return {\n    duration: duration,\n    create: {\n      type: type,\n      property: property\n    },\n    update: {\n      type: type\n    },\n    \"delete\": {\n      type: type,\n      property: property\n    }\n  };\n}\n\nvar Presets = {\n  easeInEaseOut: create(300, 'easeInEaseOut', 'opacity'),\n  linear: create(500, 'linear', 'opacity'),\n  spring: {\n    duration: 700,\n    create: {\n      type: 'linear',\n      property: 'opacity'\n    },\n    update: {\n      type: 'spring',\n      springDamping: 0.4\n    },\n    \"delete\": {\n      type: 'linear',\n      property: 'opacity'\n    }\n  }\n};\n/**\n * Automatically animates views to their new positions when the\n * next layout happens.\n *\n * A common way to use this API is to call it before calling `setState`.\n *\n * Note that in order to get this to work on **Android** you need to set the following flags via `UIManager`:\n *\n *     UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n */\n\nvar LayoutAnimation = {\n  /**\n   * Schedules an animation to happen on the next layout.\n   *\n   * @param config Specifies animation properties:\n   *\n   *   - `duration` in milliseconds\n   *   - `create`, `AnimationConfig` for animating in new views\n   *   - `update`, `AnimationConfig` for animating views that have been updated\n   *\n   * @param onAnimationDidEnd Called when the animation finished.\n   * Only supported on iOS.\n   * @param onError Called on error. Only supported on iOS.\n   */\n  configureNext: configureNext,\n\n  /**\n   * Helper for creating a config for `configureNext`.\n   */\n  create: create,\n  Types: Object.freeze({\n    spring: 'spring',\n    linear: 'linear',\n    easeInEaseOut: 'easeInEaseOut',\n    easeIn: 'easeIn',\n    easeOut: 'easeOut',\n    keyboard: 'keyboard'\n  }),\n  Properties: Object.freeze({\n    opacity: 'opacity',\n    scaleX: 'scaleX',\n    scaleY: 'scaleY',\n    scaleXY: 'scaleXY'\n  }),\n  checkConfig: function checkConfig() {\n    console.error('LayoutAnimation.checkConfig(...) has been disabled.');\n  },\n  Presets: Presets,\n  easeInEaseOut: configureNext.bind(null, Presets.easeInEaseOut),\n  linear: configureNext.bind(null, Presets.linear),\n  spring: configureNext.bind(null, Presets.spring)\n};\nvar _default = LayoutAnimation;\nexports[\"default\"] = _default;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/cjs/vendor/react-native/LayoutAnimation/index.js"],"names":["exports","_Platform","_interopRequireDefault","require","_UIManager","obj","default","__DEV__","onAnimationDidEnd","duration","create","type","property","update","delete","Presets","easeInEaseOut","linear","spring","springDamping","LayoutAnimation","configureNext","Types","easeIn","easeOut","keyboard","Properties","opacity","scaleX","scaleY","scaleXY","checkConfig","console","_default","module"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _Platform = _interopRequireDefault(require(\"../../../exports/Platform\"));\n\nvar _UIManager = _interopRequireDefault(require(\"../../../exports/UIManager\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nfunction configureNext(config, onAnimationDidEnd) {\n  if (!_Platform.default.isTesting) {\n    _UIManager.default.configureNextLayoutAnimation(config, onAnimationDidEnd !== null && onAnimationDidEnd !== void 0 ? onAnimationDidEnd : function () {}, function () {}\n    /* unused onError */\n    );\n  }\n}\n\nfunction create(duration, type, property) {\n  return {\n    duration: duration,\n    create: {\n      type: type,\n      property: property\n    },\n    update: {\n      type: type\n    },\n    delete: {\n      type: type,\n      property: property\n    }\n  };\n}\n\nvar Presets = {\n  easeInEaseOut: create(300, 'easeInEaseOut', 'opacity'),\n  linear: create(500, 'linear', 'opacity'),\n  spring: {\n    duration: 700,\n    create: {\n      type: 'linear',\n      property: 'opacity'\n    },\n    update: {\n      type: 'spring',\n      springDamping: 0.4\n    },\n    delete: {\n      type: 'linear',\n      property: 'opacity'\n    }\n  }\n};\n/**\n * Automatically animates views to their new positions when the\n * next layout happens.\n *\n * A common way to use this API is to call it before calling `setState`.\n *\n * Note that in order to get this to work on **Android** you need to set the following flags via `UIManager`:\n *\n *     UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n */\n\nvar LayoutAnimation = {\n  /**\n   * Schedules an animation to happen on the next layout.\n   *\n   * @param config Specifies animation properties:\n   *\n   *   - `duration` in milliseconds\n   *   - `create`, `AnimationConfig` for animating in new views\n   *   - `update`, `AnimationConfig` for animating views that have been updated\n   *\n   * @param onAnimationDidEnd Called when the animation finished.\n   * Only supported on iOS.\n   * @param onError Called on error. Only supported on iOS.\n   */\n  configureNext: configureNext,\n\n  /**\n   * Helper for creating a config for `configureNext`.\n   */\n  create: create,\n  Types: Object.freeze({\n    spring: 'spring',\n    linear: 'linear',\n    easeInEaseOut: 'easeInEaseOut',\n    easeIn: 'easeIn',\n    easeOut: 'easeOut',\n    keyboard: 'keyboard'\n  }),\n  Properties: Object.freeze({\n    opacity: 'opacity',\n    scaleX: 'scaleX',\n    scaleY: 'scaleY',\n    scaleXY: 'scaleXY'\n  }),\n  checkConfig: function checkConfig() {\n    console.error('LayoutAnimation.checkConfig(...) has been disabled.');\n  },\n  Presets: Presets,\n  easeInEaseOut: configureNext.bind(null, Presets.easeInEaseOut),\n  linear: configureNext.bind(null, Presets.linear),\n  spring: configureNext.bind(null, Presets.spring)\n};\nvar _default = LayoutAnimation;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}