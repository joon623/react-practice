{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _NativeAnimatedHelper = _interopRequireDefault(require(\"../NativeAnimatedHelper\"));\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar NativeAnimatedAPI = _NativeAnimatedHelper[\"default\"].API;\nvar _uniqueId = 1; // Note(vjeux): this would be better as an interface but flow doesn't\n// support them yet\n\nvar AnimatedNode = /*#__PURE__*/function () {\n  var _proto = AnimatedNode.prototype;\n\n  _proto.__attach = function __attach() {};\n\n  _proto.__detach = function __detach() {\n    if (this.__isNative && this.__nativeTag != null) {\n      _NativeAnimatedHelper[\"default\"].API.dropAnimatedNode(this.__nativeTag);\n\n      this.__nativeTag = undefined;\n    }\n  };\n\n  _proto.__getValue = function __getValue() {};\n\n  _proto.__getAnimatedValue = function __getAnimatedValue() {\n    return this.__getValue();\n  };\n\n  _proto.__addChild = function __addChild(child) {};\n\n  _proto.__removeChild = function __removeChild(child) {};\n\n  _proto.__getChildren = function __getChildren() {\n    return [];\n  }\n  /* Methods and props used by native Animated impl */\n  ;\n\n  function AnimatedNode() {\n    this._listeners = {};\n  }\n\n  _proto.__makeNative = function __makeNative() {\n    if (!this.__isNative) {\n      throw new Error('This node cannot be made a \"native\" animated node');\n    }\n\n    if (this.hasListeners()) {\n      this._startListeningToNativeValueUpdates();\n    }\n  }\n  /**\n   * Adds an asynchronous listener to the value so you can observe updates from\n   * animations.  This is useful because there is no way to\n   * synchronously read the value because it might be driven natively.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#addlistener\n   */\n  ;\n\n  _proto.addListener = function addListener(callback) {\n    var id = String(_uniqueId++);\n    this._listeners[id] = callback;\n\n    if (this.__isNative) {\n      this._startListeningToNativeValueUpdates();\n    }\n\n    return id;\n  }\n  /**\n   * Unregister a listener. The `id` param shall match the identifier\n   * previously returned by `addListener()`.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#removelistener\n   */\n  ;\n\n  _proto.removeListener = function removeListener(id) {\n    delete this._listeners[id];\n\n    if (this.__isNative && !this.hasListeners()) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  }\n  /**\n   * Remove all registered listeners.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#removealllisteners\n   */\n  ;\n\n  _proto.removeAllListeners = function removeAllListeners() {\n    this._listeners = {};\n\n    if (this.__isNative) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  };\n\n  _proto.hasListeners = function hasListeners() {\n    return !!Object.keys(this._listeners).length;\n  };\n\n  _proto._startListeningToNativeValueUpdates = function _startListeningToNativeValueUpdates() {\n    var _this = this;\n\n    if (this.__nativeAnimatedValueListener && !this.__shouldUpdateListenersForNewNativeTag) {\n      return;\n    }\n\n    if (this.__shouldUpdateListenersForNewNativeTag) {\n      this.__shouldUpdateListenersForNewNativeTag = false;\n\n      this._stopListeningForNativeValueUpdates();\n    }\n\n    NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());\n    this.__nativeAnimatedValueListener = _NativeAnimatedHelper[\"default\"].nativeEventEmitter.addListener('onAnimatedValueUpdate', function (data) {\n      if (data.tag !== _this.__getNativeTag()) {\n        return;\n      }\n\n      _this._onAnimatedValueUpdateReceived(data.value);\n    });\n  };\n\n  _proto._onAnimatedValueUpdateReceived = function _onAnimatedValueUpdateReceived(value) {\n    this.__callListeners(value);\n  };\n\n  _proto.__callListeners = function __callListeners(value) {\n    for (var _key in this._listeners) {\n      this._listeners[_key]({\n        value: value\n      });\n    }\n  };\n\n  _proto._stopListeningForNativeValueUpdates = function _stopListeningForNativeValueUpdates() {\n    if (!this.__nativeAnimatedValueListener) {\n      return;\n    }\n\n    this.__nativeAnimatedValueListener.remove();\n\n    this.__nativeAnimatedValueListener = null;\n    NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());\n  };\n\n  _proto.__getNativeTag = function __getNativeTag() {\n    _NativeAnimatedHelper[\"default\"].assertNativeAnimatedModule();\n\n    (0, _invariant[\"default\"])(this.__isNative, 'Attempt to get native tag from node not marked as \"native\"');\n\n    if (this.__nativeTag == null) {\n      var nativeTag = _NativeAnimatedHelper[\"default\"].generateNewNodeTag();\n\n      this.__nativeTag = nativeTag;\n\n      _NativeAnimatedHelper[\"default\"].API.createAnimatedNode(nativeTag, this.__getNativeConfig());\n\n      this.__shouldUpdateListenersForNewNativeTag = true;\n    }\n\n    return this.__nativeTag;\n  };\n\n  _proto.__getNativeConfig = function __getNativeConfig() {\n    throw new Error('This JS animated node type cannot be used as native animated node');\n  };\n\n  _proto.toJSON = function toJSON() {\n    return this.__getValue();\n  };\n\n  return AnimatedNode;\n}();\n\nvar _default = AnimatedNode;\nexports[\"default\"] = _default;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/cjs/vendor/react-native/Animated/nodes/AnimatedNode.js"],"names":["exports","_NativeAnimatedHelper","_interopRequireDefault","require","_invariant","obj","default","NativeAnimatedAPI","_uniqueId","AnimatedNode","_proto","id","String","Object","_this","data","value","nativeTag","_default","module"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _NativeAnimatedHelper = _interopRequireDefault(require(\"../NativeAnimatedHelper\"));\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NativeAnimatedAPI = _NativeAnimatedHelper.default.API;\nvar _uniqueId = 1; // Note(vjeux): this would be better as an interface but flow doesn't\n// support them yet\n\nvar AnimatedNode =\n/*#__PURE__*/\nfunction () {\n  var _proto = AnimatedNode.prototype;\n\n  _proto.__attach = function __attach() {};\n\n  _proto.__detach = function __detach() {\n    if (this.__isNative && this.__nativeTag != null) {\n      _NativeAnimatedHelper.default.API.dropAnimatedNode(this.__nativeTag);\n\n      this.__nativeTag = undefined;\n    }\n  };\n\n  _proto.__getValue = function __getValue() {};\n\n  _proto.__getAnimatedValue = function __getAnimatedValue() {\n    return this.__getValue();\n  };\n\n  _proto.__addChild = function __addChild(child) {};\n\n  _proto.__removeChild = function __removeChild(child) {};\n\n  _proto.__getChildren = function __getChildren() {\n    return [];\n  }\n  /* Methods and props used by native Animated impl */\n  ;\n\n  function AnimatedNode() {\n    this._listeners = {};\n  }\n\n  _proto.__makeNative = function __makeNative() {\n    if (!this.__isNative) {\n      throw new Error('This node cannot be made a \"native\" animated node');\n    }\n\n    if (this.hasListeners()) {\n      this._startListeningToNativeValueUpdates();\n    }\n  }\n  /**\n   * Adds an asynchronous listener to the value so you can observe updates from\n   * animations.  This is useful because there is no way to\n   * synchronously read the value because it might be driven natively.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#addlistener\n   */\n  ;\n\n  _proto.addListener = function addListener(callback) {\n    var id = String(_uniqueId++);\n    this._listeners[id] = callback;\n\n    if (this.__isNative) {\n      this._startListeningToNativeValueUpdates();\n    }\n\n    return id;\n  }\n  /**\n   * Unregister a listener. The `id` param shall match the identifier\n   * previously returned by `addListener()`.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#removelistener\n   */\n  ;\n\n  _proto.removeListener = function removeListener(id) {\n    delete this._listeners[id];\n\n    if (this.__isNative && !this.hasListeners()) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  }\n  /**\n   * Remove all registered listeners.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#removealllisteners\n   */\n  ;\n\n  _proto.removeAllListeners = function removeAllListeners() {\n    this._listeners = {};\n\n    if (this.__isNative) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  };\n\n  _proto.hasListeners = function hasListeners() {\n    return !!Object.keys(this._listeners).length;\n  };\n\n  _proto._startListeningToNativeValueUpdates = function _startListeningToNativeValueUpdates() {\n    var _this = this;\n\n    if (this.__nativeAnimatedValueListener && !this.__shouldUpdateListenersForNewNativeTag) {\n      return;\n    }\n\n    if (this.__shouldUpdateListenersForNewNativeTag) {\n      this.__shouldUpdateListenersForNewNativeTag = false;\n\n      this._stopListeningForNativeValueUpdates();\n    }\n\n    NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());\n    this.__nativeAnimatedValueListener = _NativeAnimatedHelper.default.nativeEventEmitter.addListener('onAnimatedValueUpdate', function (data) {\n      if (data.tag !== _this.__getNativeTag()) {\n        return;\n      }\n\n      _this._onAnimatedValueUpdateReceived(data.value);\n    });\n  };\n\n  _proto._onAnimatedValueUpdateReceived = function _onAnimatedValueUpdateReceived(value) {\n    this.__callListeners(value);\n  };\n\n  _proto.__callListeners = function __callListeners(value) {\n    for (var _key in this._listeners) {\n      this._listeners[_key]({\n        value: value\n      });\n    }\n  };\n\n  _proto._stopListeningForNativeValueUpdates = function _stopListeningForNativeValueUpdates() {\n    if (!this.__nativeAnimatedValueListener) {\n      return;\n    }\n\n    this.__nativeAnimatedValueListener.remove();\n\n    this.__nativeAnimatedValueListener = null;\n    NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());\n  };\n\n  _proto.__getNativeTag = function __getNativeTag() {\n    _NativeAnimatedHelper.default.assertNativeAnimatedModule();\n\n    (0, _invariant.default)(this.__isNative, 'Attempt to get native tag from node not marked as \"native\"');\n\n    if (this.__nativeTag == null) {\n      var nativeTag = _NativeAnimatedHelper.default.generateNewNodeTag();\n\n      this.__nativeTag = nativeTag;\n\n      _NativeAnimatedHelper.default.API.createAnimatedNode(nativeTag, this.__getNativeConfig());\n\n      this.__shouldUpdateListenersForNewNativeTag = true;\n    }\n\n    return this.__nativeTag;\n  };\n\n  _proto.__getNativeConfig = function __getNativeConfig() {\n    throw new Error('This JS animated node type cannot be used as native animated node');\n  };\n\n  _proto.toJSON = function toJSON() {\n    return this.__getValue();\n  };\n\n  return AnimatedNode;\n}();\n\nvar _default = AnimatedNode;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}