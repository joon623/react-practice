{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.cancelIdleCallback = exports[\"default\"] = void 0;\n\nvar _ExecutionEnvironment = require(\"fbjs/lib/ExecutionEnvironment\");\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nvar _requestIdleCallback = function _requestIdleCallback(cb, options) {\n  return setTimeout(function () {\n    var start = Date.now();\n    cb({\n      didTimeout: false,\n      timeRemaining: function timeRemaining() {\n        return Math.max(0, 50 - (Date.now() - start));\n      }\n    });\n  }, 1);\n}; // $FlowFixMe (TimeoutID type is not recognized by eslint)\n\n\nvar _cancelIdleCallback = function _cancelIdleCallback(id) {\n  clearTimeout(id);\n};\n\nvar isSupported = _ExecutionEnvironment.canUseDOM && typeof window.requestIdleCallback !== 'undefined';\nvar requestIdleCallback = isSupported ? window.requestIdleCallback : _requestIdleCallback;\nvar cancelIdleCallback = isSupported ? window.cancelIdleCallback : _cancelIdleCallback;\nexports.cancelIdleCallback = cancelIdleCallback;\nvar _default = requestIdleCallback;\nexports[\"default\"] = _default;\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/cjs/modules/requestIdleCallback/index.js"],"names":["exports","_ExecutionEnvironment","require","_requestIdleCallback","setTimeout","start","Date","cb","didTimeout","timeRemaining","Math","_cancelIdleCallback","clearTimeout","isSupported","window","requestIdleCallback","cancelIdleCallback","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAAPA,UAAAA,GAAAA,IAAAA;AACAA,OAAO,CAAPA,kBAAAA,GAA6BA,OAAO,CAAPA,SAAO,CAAPA,GAAkB,KAA/CA,CAAAA;;AAEA,IAAIC,qBAAqB,GAAGC,OAAO,CAAnC,+BAAmC,CAAnC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,oBAAoB,GAAG,SAAA,oBAAA,CAAA,EAAA,EAAA,OAAA,EAA2C;EACpE,OAAOC,UAAU,CAAC,YAAY;IAC5B,IAAIC,KAAK,GAAGC,IAAI,CAAhB,GAAYA,EAAZ;IACAC,EAAE,CAAC;MACDC,UAAU,EADT,KAAA;MAEDC,aAAa,EAAE,SAAA,aAAA,GAAyB;QACtC,OAAOC,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAY,MAAMJ,IAAI,CAAJA,GAAAA,KAAzB,KAAmB,CAAZI,CAAP;MACD;IAJA,CAAD,CAAFH;EAFe,CAAA,EAAjB,CAAiB,CAAjB;AADF,CAAA,C,CAUG;;;AAGH,IAAII,mBAAmB,GAAG,SAAA,mBAAA,CAAA,EAAA,EAAiC;EACzDC,YAAY,CAAZA,EAAY,CAAZA;AADF,CAAA;;AAIA,IAAIC,WAAW,GAAGZ,qBAAqB,CAArBA,SAAAA,IAAmC,OAAOa,MAAM,CAAb,mBAAA,KAArD,WAAA;AACA,IAAIC,mBAAmB,GAAGF,WAAW,GAAGC,MAAM,CAAT,mBAAA,GAArC,oBAAA;AACA,IAAIE,kBAAkB,GAAGH,WAAW,GAAGC,MAAM,CAAT,kBAAA,GAApC,mBAAA;AACAd,OAAO,CAAPA,kBAAAA,GAAAA,kBAAAA;AACA,IAAIiB,QAAQ,GAAZ,mBAAA;AACAjB,OAAO,CAAPA,SAAO,CAAPA,GAAAA,QAAAA","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.cancelIdleCallback = exports.default = void 0;\n\nvar _ExecutionEnvironment = require(\"fbjs/lib/ExecutionEnvironment\");\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar _requestIdleCallback = function _requestIdleCallback(cb, options) {\n  return setTimeout(function () {\n    var start = Date.now();\n    cb({\n      didTimeout: false,\n      timeRemaining: function timeRemaining() {\n        return Math.max(0, 50 - (Date.now() - start));\n      }\n    });\n  }, 1);\n}; // $FlowFixMe (TimeoutID type is not recognized by eslint)\n\n\nvar _cancelIdleCallback = function _cancelIdleCallback(id) {\n  clearTimeout(id);\n};\n\nvar isSupported = _ExecutionEnvironment.canUseDOM && typeof window.requestIdleCallback !== 'undefined';\nvar requestIdleCallback = isSupported ? window.requestIdleCallback : _requestIdleCallback;\nvar cancelIdleCallback = isSupported ? window.cancelIdleCallback : _cancelIdleCallback;\nexports.cancelIdleCallback = cancelIdleCallback;\nvar _default = requestIdleCallback;\nexports.default = _default;"]},"metadata":{},"sourceType":"module"}