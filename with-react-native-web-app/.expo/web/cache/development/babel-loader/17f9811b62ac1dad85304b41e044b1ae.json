{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _getBoundingClientRect = _interopRequireDefault(require(\"../../modules/getBoundingClientRect\"));\n\nvar _setValueForStyles = _interopRequireDefault(require(\"../../vendor/react-dom/setValueForStyles\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nvar getRect = function getRect(node) {\n  // Unlike the DOM's getBoundingClientRect, React Native layout measurements\n  // for \"height\" and \"width\" ignore scale transforms.\n  // https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model/Determining_the_dimensions_of_elements\n  var _getBoundingClientRec = (0, _getBoundingClientRect[\"default\"])(node),\n      x = _getBoundingClientRec.x,\n      y = _getBoundingClientRec.y,\n      top = _getBoundingClientRec.top,\n      left = _getBoundingClientRec.left;\n\n  var width = node.offsetWidth;\n  var height = node.offsetHeight;\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    top: top,\n    left: left\n  };\n};\n\nvar _measureLayout = function measureLayout(node, relativeToNativeNode, callback) {\n  var relativeNode = relativeToNativeNode || node && node.parentNode;\n\n  if (node && relativeNode) {\n    setTimeout(function () {\n      var relativeRect = (0, _getBoundingClientRect[\"default\"])(relativeNode);\n\n      var _getRect = getRect(node),\n          height = _getRect.height,\n          left = _getRect.left,\n          top = _getRect.top,\n          width = _getRect.width;\n\n      var x = left - relativeRect.left;\n      var y = top - relativeRect.top;\n      callback(x, y, width, height, left, top);\n    }, 0);\n  }\n};\n\nvar focusableElements = {\n  A: true,\n  INPUT: true,\n  SELECT: true,\n  TEXTAREA: true\n};\nvar UIManager = {\n  blur: function blur(node) {\n    try {\n      node.blur();\n    } catch (err) {}\n  },\n  focus: function focus(node) {\n    try {\n      var name = node.nodeName; // A tabIndex of -1 allows element to be programmatically focused but\n      // prevents keyboard focus, so we don't want to set the value on elements\n      // that support keyboard focus by default.\n\n      if (node.getAttribute('tabIndex') == null && focusableElements[name] == null) {\n        node.setAttribute('tabIndex', '-1');\n      }\n\n      node.focus();\n    } catch (err) {}\n  },\n  measure: function measure(node, callback) {\n    _measureLayout(node, null, callback);\n  },\n  measureInWindow: function measureInWindow(node, callback) {\n    if (node) {\n      setTimeout(function () {\n        var _getRect2 = getRect(node),\n            height = _getRect2.height,\n            left = _getRect2.left,\n            top = _getRect2.top,\n            width = _getRect2.width;\n\n        callback(left, top, width, height);\n      }, 0);\n    }\n  },\n  measureLayout: function measureLayout(node, relativeToNativeNode, onFail, onSuccess) {\n    _measureLayout(node, relativeToNativeNode, onSuccess);\n  },\n  updateView: function updateView(node, props) {\n    for (var prop in props) {\n      if (!Object.prototype.hasOwnProperty.call(props, prop)) {\n        continue;\n      }\n\n      var value = props[prop];\n\n      switch (prop) {\n        case 'style':\n          {\n            (0, _setValueForStyles[\"default\"])(node, value);\n            break;\n          }\n\n        case 'class':\n        case 'className':\n          {\n            node.setAttribute('class', value);\n            break;\n          }\n\n        case 'text':\n        case 'value':\n          // native platforms use `text` prop to replace text input value\n          node.value = value;\n          break;\n\n        default:\n          node.setAttribute(prop, value);\n      }\n    }\n  },\n  configureNextLayoutAnimation: function configureNextLayoutAnimation(config, onAnimationDidEnd) {\n    onAnimationDidEnd();\n  },\n  // mocks\n  setLayoutAnimationEnabledExperimental: function setLayoutAnimationEnabledExperimental() {}\n};\nvar _default = UIManager;\nexports[\"default\"] = _default;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/cjs/exports/UIManager/index.js"],"names":["exports","_getBoundingClientRect","_interopRequireDefault","require","_setValueForStyles","obj","default","getRect","_getBoundingClientRec","x","y","top","left","width","node","height","_measureLayout","relativeNode","relativeToNativeNode","setTimeout","relativeRect","_getRect","callback","focusableElements","A","INPUT","SELECT","TEXTAREA","UIManager","blur","focus","name","measure","measureInWindow","_getRect2","measureLayout","updateView","Object","value","props","configureNextLayoutAnimation","onAnimationDidEnd","setLayoutAnimationEnabledExperimental","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _getBoundingClientRect = _interopRequireDefault(require(\"../../modules/getBoundingClientRect\"));\n\nvar _setValueForStyles = _interopRequireDefault(require(\"../../vendor/react-dom/setValueForStyles\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar getRect = function getRect(node) {\n  // Unlike the DOM's getBoundingClientRect, React Native layout measurements\n  // for \"height\" and \"width\" ignore scale transforms.\n  // https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model/Determining_the_dimensions_of_elements\n  var _getBoundingClientRec = (0, _getBoundingClientRect.default)(node),\n      x = _getBoundingClientRec.x,\n      y = _getBoundingClientRec.y,\n      top = _getBoundingClientRec.top,\n      left = _getBoundingClientRec.left;\n\n  var width = node.offsetWidth;\n  var height = node.offsetHeight;\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    top: top,\n    left: left\n  };\n};\n\nvar _measureLayout = function measureLayout(node, relativeToNativeNode, callback) {\n  var relativeNode = relativeToNativeNode || node && node.parentNode;\n\n  if (node && relativeNode) {\n    setTimeout(function () {\n      var relativeRect = (0, _getBoundingClientRect.default)(relativeNode);\n\n      var _getRect = getRect(node),\n          height = _getRect.height,\n          left = _getRect.left,\n          top = _getRect.top,\n          width = _getRect.width;\n\n      var x = left - relativeRect.left;\n      var y = top - relativeRect.top;\n      callback(x, y, width, height, left, top);\n    }, 0);\n  }\n};\n\nvar focusableElements = {\n  A: true,\n  INPUT: true,\n  SELECT: true,\n  TEXTAREA: true\n};\nvar UIManager = {\n  blur: function blur(node) {\n    try {\n      node.blur();\n    } catch (err) {}\n  },\n  focus: function focus(node) {\n    try {\n      var name = node.nodeName; // A tabIndex of -1 allows element to be programmatically focused but\n      // prevents keyboard focus, so we don't want to set the value on elements\n      // that support keyboard focus by default.\n\n      if (node.getAttribute('tabIndex') == null && focusableElements[name] == null) {\n        node.setAttribute('tabIndex', '-1');\n      }\n\n      node.focus();\n    } catch (err) {}\n  },\n  measure: function measure(node, callback) {\n    _measureLayout(node, null, callback);\n  },\n  measureInWindow: function measureInWindow(node, callback) {\n    if (node) {\n      setTimeout(function () {\n        var _getRect2 = getRect(node),\n            height = _getRect2.height,\n            left = _getRect2.left,\n            top = _getRect2.top,\n            width = _getRect2.width;\n\n        callback(left, top, width, height);\n      }, 0);\n    }\n  },\n  measureLayout: function measureLayout(node, relativeToNativeNode, onFail, onSuccess) {\n    _measureLayout(node, relativeToNativeNode, onSuccess);\n  },\n  updateView: function updateView(node, props) {\n    for (var prop in props) {\n      if (!Object.prototype.hasOwnProperty.call(props, prop)) {\n        continue;\n      }\n\n      var value = props[prop];\n\n      switch (prop) {\n        case 'style':\n          {\n            (0, _setValueForStyles.default)(node, value);\n            break;\n          }\n\n        case 'class':\n        case 'className':\n          {\n            node.setAttribute('class', value);\n            break;\n          }\n\n        case 'text':\n        case 'value':\n          // native platforms use `text` prop to replace text input value\n          node.value = value;\n          break;\n\n        default:\n          node.setAttribute(prop, value);\n      }\n    }\n  },\n  configureNextLayoutAnimation: function configureNextLayoutAnimation(config, onAnimationDidEnd) {\n    onAnimationDidEnd();\n  },\n  // mocks\n  setLayoutAnimationEnabledExperimental: function setLayoutAnimationEnabledExperimental() {}\n};\nvar _default = UIManager;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}