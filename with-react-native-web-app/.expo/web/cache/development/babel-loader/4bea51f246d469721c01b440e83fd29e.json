{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _normalizeColor = _interopRequireDefault(require(\"../../modules/normalizeColor\"));\n\nvar _normalizeValueWithProperty = _interopRequireDefault(require(\"./normalizeValueWithProperty\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\n\nvar resolveShadowValue = function resolveShadowValue(style) {\n  var shadowColor = style.shadowColor,\n      shadowOffset = style.shadowOffset,\n      shadowOpacity = style.shadowOpacity,\n      shadowRadius = style.shadowRadius;\n\n  var _ref = shadowOffset || defaultOffset,\n      height = _ref.height,\n      width = _ref.width;\n\n  var offsetX = (0, _normalizeValueWithProperty[\"default\"])(width);\n  var offsetY = (0, _normalizeValueWithProperty[\"default\"])(height);\n  var blurRadius = (0, _normalizeValueWithProperty[\"default\"])(shadowRadius || 0);\n  var color = (0, _normalizeColor[\"default\"])(shadowColor || 'black', shadowOpacity);\n\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\n\nvar _default = resolveShadowValue;\nexports[\"default\"] = _default;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/cjs/exports/StyleSheet/resolveShadowValue.js"],"names":["exports","_normalizeColor","_interopRequireDefault","require","_normalizeValueWithProperty","obj","default","defaultOffset","height","width","resolveShadowValue","shadowColor","style","shadowOffset","shadowOpacity","shadowRadius","_ref","offsetX","offsetY","blurRadius","color","_default","module"],"mappings":"AAAA;;AAEAA,OAAO,CAAPA,UAAAA,GAAAA,IAAAA;AACAA,OAAAA,WAAAA,GAAkB,KAAlBA,CAAAA;;AAEA,IAAIC,eAAe,GAAGC,sBAAsB,CAACC,OAAO,CAApD,8BAAoD,CAAR,CAA5C;;AAEA,IAAIC,2BAA2B,GAAGF,sBAAsB,CAACC,OAAO,CAAhE,8BAAgE,CAAR,CAAxD;;AAEA,SAAA,sBAAA,CAAA,GAAA,EAAqC;EAAE,OAAOE,GAAG,IAAIA,GAAG,CAAVA,UAAAA,GAAAA,GAAAA,GAA8B;IAAEC,WAASD;EAAX,CAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,aAAa,GAAG;EAClBC,MAAM,EADY,CAAA;EAElBC,KAAK,EAAE;AAFW,CAApB;;AAKA,IAAIC,kBAAkB,GAAG,SAAA,kBAAA,CAAA,KAAA,EAAmC;EAC1D,IAAIC,WAAW,GAAGC,KAAK,CAAvB,WAAA;EAAA,IACIC,YAAY,GAAGD,KAAK,CADxB,YAAA;EAAA,IAEIE,aAAa,GAAGF,KAAK,CAFzB,aAAA;EAAA,IAGIG,YAAY,GAAGH,KAAK,CAHxB,YAAA;;EAKA,IAAII,IAAI,GAAGH,YAAY,IAAvB,aAAA;EAAA,IACIL,MAAM,GAAGQ,IAAI,CADjB,MAAA;EAAA,IAEIP,KAAK,GAAGO,IAAI,CAFhB,KAAA;;EAIA,IAAIC,OAAO,GAAG,CAAC,GAAGb,2BAAJ,WAAA,EAAd,KAAc,CAAd;EACA,IAAIc,OAAO,GAAG,CAAC,GAAGd,2BAAJ,WAAA,EAAd,MAAc,CAAd;EACA,IAAIe,UAAU,GAAG,CAAC,GAAGf,2BAAJ,WAAA,EAAyCW,YAAY,IAAtE,CAAiB,CAAjB;EACA,IAAIK,KAAK,GAAG,CAAC,GAAGnB,eAAJ,WAAA,EAA6BU,WAAW,IAAxC,OAAA,EAAZ,aAAY,CAAZ;;EAEA,IAAIS,KAAK,IAALA,IAAAA,IAAiBH,OAAO,IAAxBG,IAAAA,IAAoCF,OAAO,IAA3CE,IAAAA,IAAuDD,UAAU,IAArE,IAAA,EAA+E;IAC7E,OAAOF,OAAO,GAAPA,GAAAA,GAAAA,OAAAA,GAAAA,GAAAA,GAAAA,UAAAA,GAAAA,GAAAA,GAAP,KAAA;EACD;AAjBH,CAAA;;AAoBA,IAAII,QAAQ,GAAZ,kBAAA;AACArB,OAAAA,WAAAA,GAAAA,QAAAA;AACAsB,MAAM,CAANA,OAAAA,GAAiBtB,OAAjBsB,WAAAA","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _normalizeColor = _interopRequireDefault(require(\"../../modules/normalizeColor\"));\n\nvar _normalizeValueWithProperty = _interopRequireDefault(require(\"./normalizeValueWithProperty\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\n\nvar resolveShadowValue = function resolveShadowValue(style) {\n  var shadowColor = style.shadowColor,\n      shadowOffset = style.shadowOffset,\n      shadowOpacity = style.shadowOpacity,\n      shadowRadius = style.shadowRadius;\n\n  var _ref = shadowOffset || defaultOffset,\n      height = _ref.height,\n      width = _ref.width;\n\n  var offsetX = (0, _normalizeValueWithProperty.default)(width);\n  var offsetY = (0, _normalizeValueWithProperty.default)(height);\n  var blurRadius = (0, _normalizeValueWithProperty.default)(shadowRadius || 0);\n  var color = (0, _normalizeColor.default)(shadowColor || 'black', shadowOpacity);\n\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\n\nvar _default = resolveShadowValue;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}