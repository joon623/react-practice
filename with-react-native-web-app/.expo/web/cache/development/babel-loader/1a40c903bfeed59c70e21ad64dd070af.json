{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AlertDialogOverlay = exports.AlertDialogFooter = exports.AlertDialogBody = exports.AlertDialogHeader = exports.AlertDialogCloseButton = exports.AlertDialogContent = exports.AlertDialog = void 0;\n\nvar _reactNative = require(\"react-native-web/dist/cjs/index\");\n\nvar _tools = require(\"../tools\");\n\nvar sizes = {\n  xs: {\n    contentSize: {\n      width: '60%',\n      maxWidth: '280'\n    }\n  },\n  sm: {\n    contentSize: {\n      width: '65%',\n      maxWidth: '320'\n    }\n  },\n  md: {\n    contentSize: {\n      width: '75%',\n      maxWidth: '380'\n    }\n  },\n  lg: {\n    contentSize: {\n      width: '80%',\n      maxWidth: '520'\n    }\n  },\n  xl: {\n    contentSize: {\n      width: '90%',\n      maxWidth: '580'\n    }\n  },\n  full: {\n    contentSize: {\n      width: '100%'\n    }\n  }\n};\nvar AlertDialog = {\n  baseStyle: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    _web: {\n      pointerEvents: 'box-none'\n    },\n    _backdropFade: {\n      exitDuration: 150,\n      entryDuration: 200\n    },\n    _fade: {\n      exitDuration: 100,\n      entryDuration: 200\n    },\n    _slide: {\n      duration: 200,\n      overlay: false\n    }\n  },\n  sizes: sizes,\n  defaultProps: {\n    size: 'md',\n    closeOnOverlayClick: true\n  }\n};\nexports.AlertDialog = AlertDialog;\nvar AlertDialogContent = {\n  baseStyle: function baseStyle(props) {\n    return {\n      bg: (0, _tools.mode)('coolGray.50', 'gray.700')(props),\n      _text: {\n        color: (0, _tools.mode)('coolGray.800', 'warmGray.50')(props)\n      },\n      shadow: 1,\n      rounded: 'lg',\n      maxHeight: \"\".concat(_reactNative.Dimensions.get('window').height - 150, \"px\"),\n      overflow: 'hidden'\n    };\n  }\n};\nexports.AlertDialogContent = AlertDialogContent;\nvar AlertDialogCloseButton = {\n  baseStyle: function baseStyle(props) {\n    return {\n      position: 'absolute',\n      right: '3',\n      top: '3',\n      zIndex: '1',\n      colorScheme: 'coolGray',\n      p: '2',\n      _icon: {\n        size: '3',\n        color: (0, _tools.mode)('coolGray.600', 'coolGray.100')(props)\n      }\n    };\n  }\n};\nexports.AlertDialogCloseButton = AlertDialogCloseButton;\nvar AlertDialogHeader = {\n  baseStyle: function baseStyle(props) {\n    return {\n      py: '4',\n      px: '3',\n      borderBottomWidth: '1',\n      borderColor: (0, _tools.mode)('coolGray.200', 'gray.600')(props),\n      _text: {\n        fontSize: 'md',\n        fontWeight: 'semibold',\n        color: (0, _tools.mode)('coolGray.800', 'warmGray.50')(props),\n        lineHeight: 'sm'\n      }\n    };\n  }\n};\nexports.AlertDialogHeader = AlertDialogHeader;\nvar AlertDialogBody = {\n  baseStyle: function baseStyle(props) {\n    return {\n      pt: '2',\n      p: '3',\n      _text: {\n        color: (0, _tools.mode)('coolGray.600', 'coolGray.300')(props)\n      }\n    };\n  }\n};\nexports.AlertDialogBody = AlertDialogBody;\nvar AlertDialogFooter = {\n  baseStyle: function baseStyle(props) {\n    return {\n      p: '3',\n      bg: (0, _tools.mode)('coolGray.100', 'gray.600')(props),\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      flexWrap: 'wrap'\n    };\n  }\n};\nexports.AlertDialogFooter = AlertDialogFooter;\nvar AlertDialogOverlay = {\n  baseStyle: {\n    position: 'absolute',\n    left: '0',\n    top: '0',\n    opacity: '50',\n    right: '0',\n    bottom: '0'\n  }\n};\nexports.AlertDialogOverlay = AlertDialogOverlay;","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/commonjs/theme/v33x-theme/components/alert-dialog.js"],"names":["Object","value","exports","_tools","require","sizes","xs","contentSize","width","maxWidth","sm","md","lg","xl","full","AlertDialog","baseStyle","height","justifyContent","alignItems","_web","pointerEvents","_backdropFade","exitDuration","entryDuration","_fade","_slide","duration","overlay","defaultProps","size","closeOnOverlayClick","AlertDialogContent","props","bg","_text","color","shadow","rounded","maxHeight","_reactNative","overflow","AlertDialogCloseButton","position","right","top","zIndex","colorScheme","p","_icon","AlertDialogHeader","py","px","borderBottomWidth","borderColor","fontSize","fontWeight","lineHeight","AlertDialogBody","pt","AlertDialogFooter","flexDirection","flexWrap","AlertDialogOverlay","left","opacity","bottom"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AlertDialogOverlay = exports.AlertDialogFooter = exports.AlertDialogBody = exports.AlertDialogHeader = exports.AlertDialogCloseButton = exports.AlertDialogContent = exports.AlertDialog = void 0;\n\nvar _reactNative = require(\"react-native\");\n\nvar _tools = require(\"../tools\");\n\nconst sizes = {\n  xs: {\n    contentSize: {\n      width: '60%',\n      maxWidth: '280'\n    }\n  },\n  sm: {\n    contentSize: {\n      width: '65%',\n      maxWidth: '320'\n    }\n  },\n  md: {\n    contentSize: {\n      width: '75%',\n      maxWidth: '380'\n    }\n  },\n  lg: {\n    contentSize: {\n      width: '80%',\n      maxWidth: '520'\n    }\n  },\n  xl: {\n    contentSize: {\n      width: '90%',\n      maxWidth: '580'\n    }\n  },\n  full: {\n    contentSize: {\n      width: '100%'\n    }\n  }\n};\nconst AlertDialog = {\n  baseStyle: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    _web: {\n      pointerEvents: 'box-none'\n    },\n    _backdropFade: {\n      exitDuration: 150,\n      entryDuration: 200\n    },\n    _fade: {\n      exitDuration: 100,\n      entryDuration: 200\n    },\n    _slide: {\n      duration: 200,\n      overlay: false\n    }\n  },\n  sizes,\n  defaultProps: {\n    size: 'md',\n    closeOnOverlayClick: true\n  }\n};\nexports.AlertDialog = AlertDialog;\nconst AlertDialogContent = {\n  baseStyle: props => {\n    return {\n      bg: (0, _tools.mode)('coolGray.50', 'gray.700')(props),\n      _text: {\n        color: (0, _tools.mode)('coolGray.800', 'warmGray.50')(props)\n      },\n      shadow: 1,\n      rounded: 'lg',\n      maxHeight: \"\".concat(_reactNative.Dimensions.get('window').height - 150, \"px\"),\n      overflow: 'hidden'\n    };\n  }\n};\nexports.AlertDialogContent = AlertDialogContent;\nconst AlertDialogCloseButton = {\n  baseStyle: props => {\n    return {\n      position: 'absolute',\n      right: '3',\n      top: '3',\n      zIndex: '1',\n      colorScheme: 'coolGray',\n      p: '2',\n      _icon: {\n        size: '3',\n        color: (0, _tools.mode)('coolGray.600', 'coolGray.100')(props)\n      }\n    };\n  }\n};\nexports.AlertDialogCloseButton = AlertDialogCloseButton;\nconst AlertDialogHeader = {\n  baseStyle: props => {\n    return {\n      py: '4',\n      px: '3',\n      borderBottomWidth: '1',\n      borderColor: (0, _tools.mode)('coolGray.200', 'gray.600')(props),\n      _text: {\n        fontSize: 'md',\n        fontWeight: 'semibold',\n        color: (0, _tools.mode)('coolGray.800', 'warmGray.50')(props),\n        lineHeight: 'sm'\n      }\n    };\n  }\n};\nexports.AlertDialogHeader = AlertDialogHeader;\nconst AlertDialogBody = {\n  baseStyle: props => {\n    return {\n      pt: '2',\n      p: '3',\n      _text: {\n        color: (0, _tools.mode)('coolGray.600', 'coolGray.300')(props)\n      }\n    };\n  }\n};\nexports.AlertDialogBody = AlertDialogBody;\nconst AlertDialogFooter = {\n  baseStyle: props => {\n    return {\n      p: '3',\n      bg: (0, _tools.mode)('coolGray.100', 'gray.600')(props),\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      flexWrap: 'wrap'\n    };\n  }\n};\nexports.AlertDialogFooter = AlertDialogFooter;\nconst AlertDialogOverlay = {\n  baseStyle: {\n    position: 'absolute',\n    left: '0',\n    top: '0',\n    opacity: '50',\n    right: '0',\n    bottom: '0'\n  }\n};\nexports.AlertDialogOverlay = AlertDialogOverlay;\n//# sourceMappingURL=alert-dialog.js.map"]},"metadata":{},"sourceType":"script"}