{"ast":null,"code":"\"use strict\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nexports.__esModule = true;\nexports[\"default\"] = useResponderEvents;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar ResponderSystem = _interopRequireWildcard(require(\"./ResponderSystem\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n/**\n * Copyright (c) Nicolas Gallagher\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * Hook for integrating the Responder System into React\n *\n *   function SomeComponent({ onStartShouldSetResponder }) {\n *     const ref = useRef(null);\n *     useResponderEvents(ref, { onStartShouldSetResponder });\n *     return <div ref={ref} />\n *   }\n */\n\n\nvar emptyObject = {};\nvar idCounter = 0;\n\nfunction useStable(getInitialValue) {\n  _s();\n\n  var ref = React.useRef(null);\n\n  if (ref.current == null) {\n    ref.current = getInitialValue();\n  }\n\n  return ref.current;\n}\n\n_s(useStable, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\n\nfunction useResponderEvents(hostRef, config) {\n  _s2();\n\n  if (config === void 0) {\n    config = emptyObject;\n  }\n\n  var id = useStable(function () {\n    return idCounter++;\n  });\n  var isAttachedRef = React.useRef(false); // This is a separate effects so it doesn't run when the config changes.\n  // On initial mount, attach global listeners if needed.\n  // On unmount, remove node potentially attached to the Responder System.\n\n  React.useEffect(function () {\n    ResponderSystem.attachListeners();\n    return function () {\n      ResponderSystem.removeNode(id);\n    };\n  }, [id]); // Register and unregister with the Responder System as necessary\n\n  React.useEffect(function () {\n    var _config = config,\n        onMoveShouldSetResponder = _config.onMoveShouldSetResponder,\n        onMoveShouldSetResponderCapture = _config.onMoveShouldSetResponderCapture,\n        onScrollShouldSetResponder = _config.onScrollShouldSetResponder,\n        onScrollShouldSetResponderCapture = _config.onScrollShouldSetResponderCapture,\n        onSelectionChangeShouldSetResponder = _config.onSelectionChangeShouldSetResponder,\n        onSelectionChangeShouldSetResponderCapture = _config.onSelectionChangeShouldSetResponderCapture,\n        onStartShouldSetResponder = _config.onStartShouldSetResponder,\n        onStartShouldSetResponderCapture = _config.onStartShouldSetResponderCapture;\n    var requiresResponderSystem = onMoveShouldSetResponder != null || onMoveShouldSetResponderCapture != null || onScrollShouldSetResponder != null || onScrollShouldSetResponderCapture != null || onSelectionChangeShouldSetResponder != null || onSelectionChangeShouldSetResponderCapture != null || onStartShouldSetResponder != null || onStartShouldSetResponderCapture != null;\n    var node = hostRef.current;\n\n    if (requiresResponderSystem) {\n      ResponderSystem.addNode(id, node, config);\n      isAttachedRef.current = true;\n    } else if (isAttachedRef.current) {\n      ResponderSystem.removeNode(id);\n      isAttachedRef.current = false;\n    }\n  }, [config, hostRef, id]);\n  React.useDebugValue({\n    isResponder: hostRef.current === ResponderSystem.getResponderNode()\n  });\n  React.useDebugValue(config);\n}\n\n_s2(useResponderEvents, \"DGcHtLtlazs5FRMTwJ6n+Mo/OEI=\", false, function () {\n  return [useStable];\n});\n\nmodule.exports = exports[\"default\"];\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/cjs/hooks/useResponderEvents/index.js"],"names":["exports","React","_interopRequireWildcard","require","ResponderSystem","cache","_getRequireWildcardCache","obj","newObj","hasPropertyDescriptor","Object","desc","emptyObject","idCounter","useStable","ref","getInitialValue","useResponderEvents","config","id","isAttachedRef","_config","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","requiresResponderSystem","node","hostRef","isResponder","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = useResponderEvents;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar ResponderSystem = _interopRequireWildcard(require(\"./ResponderSystem\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * Copyright (c) Nicolas Gallagher\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * Hook for integrating the Responder System into React\n *\n *   function SomeComponent({ onStartShouldSetResponder }) {\n *     const ref = useRef(null);\n *     useResponderEvents(ref, { onStartShouldSetResponder });\n *     return <div ref={ref} />\n *   }\n */\nvar emptyObject = {};\nvar idCounter = 0;\n\nfunction useStable(getInitialValue) {\n  var ref = React.useRef(null);\n\n  if (ref.current == null) {\n    ref.current = getInitialValue();\n  }\n\n  return ref.current;\n}\n\nfunction useResponderEvents(hostRef, config) {\n  if (config === void 0) {\n    config = emptyObject;\n  }\n\n  var id = useStable(function () {\n    return idCounter++;\n  });\n  var isAttachedRef = React.useRef(false); // This is a separate effects so it doesn't run when the config changes.\n  // On initial mount, attach global listeners if needed.\n  // On unmount, remove node potentially attached to the Responder System.\n\n  React.useEffect(function () {\n    ResponderSystem.attachListeners();\n    return function () {\n      ResponderSystem.removeNode(id);\n    };\n  }, [id]); // Register and unregister with the Responder System as necessary\n\n  React.useEffect(function () {\n    var _config = config,\n        onMoveShouldSetResponder = _config.onMoveShouldSetResponder,\n        onMoveShouldSetResponderCapture = _config.onMoveShouldSetResponderCapture,\n        onScrollShouldSetResponder = _config.onScrollShouldSetResponder,\n        onScrollShouldSetResponderCapture = _config.onScrollShouldSetResponderCapture,\n        onSelectionChangeShouldSetResponder = _config.onSelectionChangeShouldSetResponder,\n        onSelectionChangeShouldSetResponderCapture = _config.onSelectionChangeShouldSetResponderCapture,\n        onStartShouldSetResponder = _config.onStartShouldSetResponder,\n        onStartShouldSetResponderCapture = _config.onStartShouldSetResponderCapture;\n    var requiresResponderSystem = onMoveShouldSetResponder != null || onMoveShouldSetResponderCapture != null || onScrollShouldSetResponder != null || onScrollShouldSetResponderCapture != null || onSelectionChangeShouldSetResponder != null || onSelectionChangeShouldSetResponderCapture != null || onStartShouldSetResponder != null || onStartShouldSetResponderCapture != null;\n    var node = hostRef.current;\n\n    if (requiresResponderSystem) {\n      ResponderSystem.addNode(id, node, config);\n      isAttachedRef.current = true;\n    } else if (isAttachedRef.current) {\n      ResponderSystem.removeNode(id);\n      isAttachedRef.current = false;\n    }\n  }, [config, hostRef, id]);\n  React.useDebugValue({\n    isResponder: hostRef.current === ResponderSystem.getResponderNode()\n  });\n  React.useDebugValue(config);\n}\n\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"module"}