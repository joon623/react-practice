{"ast":null,"code":"import _objectWithoutProperties from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nvar _excluded = [\"children\", \"startColor\", \"endColor\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport Animated from \"react-native-web/dist/cjs/exports/Animated\";\nimport Platform from \"react-native-web/dist/cjs/exports/Platform\";\nimport { usePropsResolution } from '../../../hooks';\nimport { canUseDom } from '../../../utils';\nimport Box from '../../primitives/Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useToken } from '../../../hooks/useToken';\n\nvar Skeleton = function Skeleton(props, ref) {\n  _s();\n\n  var isDomUsable = canUseDom();\n\n  var _usePropsResolution = usePropsResolution('Skeleton', props),\n      children = _usePropsResolution.children,\n      startColor = _usePropsResolution.startColor,\n      endColor = _usePropsResolution.endColor,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded); // Setting blink Animation\n\n\n  var blinkAnim = React.useRef(new Animated.Value(0)).current;\n  var tokenisedStartColor = useToken('colors', startColor); // Generating blink animation in a sequence\n\n  React.useEffect(function () {\n    //Check if window is loaded\n    if (isDomUsable) {\n      var blink = Animated.sequence([Animated.timing(blinkAnim, {\n        toValue: 1,\n        duration: resolvedProps.fadeDuration * 10000 * (1 / resolvedProps.speed),\n        useNativeDriver: Platform.OS !== 'web'\n      }), Animated.timing(blinkAnim, {\n        toValue: 0,\n        duration: resolvedProps.fadeDuration * 10000 * (1 / resolvedProps.speed),\n        useNativeDriver: Platform.OS !== 'web'\n      })]);\n      Animated.loop(blink).start();\n    }\n  }, [blinkAnim, isDomUsable, resolvedProps]);\n  var skeletonStyle = {\n    skeleton: {\n      height: '100%',\n      width: '100%',\n      backgroundColor: tokenisedStartColor,\n      opacity: blinkAnim // Bind opacity to animated value\n\n    }\n  }; //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return resolvedProps.isLoaded ? children : /*#__PURE__*/React.createElement(Box, _extends({\n    bg: endColor\n  }, resolvedProps, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(Animated.View, {\n    style: skeletonStyle.skeleton\n  }));\n};\n\n_s(Skeleton, \"2XqADYua+RF6B+UaQZNvd70RA2U=\", false, function () {\n  return [usePropsResolution, useToken, useHasResponsiveProps];\n});\n\n_c = Skeleton;\nexport default /*#__PURE__*/_c3 = /*#__PURE__*/memo( /*#__PURE__*/_c2 = /*#__PURE__*/forwardRef(Skeleton));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Skeleton\");\n$RefreshReg$(_c2, \"%default%$memo\");\n$RefreshReg$(_c3, \"%default%\");\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/module/components/composites/Skeleton/Skeleton.js"],"names":["_extends","Object","i","arguments","source","target","Skeleton","isDomUsable","canUseDom","children","startColor","endColor","resolvedProps","usePropsResolution","blinkAnim","React","Animated","tokenisedStartColor","useToken","blink","toValue","duration","useNativeDriver","Platform","skeletonStyle","skeleton","height","width","backgroundColor","opacity","useHasResponsiveProps","bg","ref","style","memo","forwardRef"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, forwardRef } from 'react';\nimport { Animated, Platform } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { canUseDom } from '../../../utils';\nimport Box from '../../primitives/Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useToken } from '../../../hooks/useToken';\n\nconst Skeleton = (props, ref) => {\n  const isDomUsable = canUseDom();\n  const {\n    children,\n    startColor,\n    endColor,\n    ...resolvedProps\n  } = usePropsResolution('Skeleton', props); // Setting blink Animation\n\n  const blinkAnim = React.useRef(new Animated.Value(0)).current;\n  const tokenisedStartColor = useToken('colors', startColor); // Generating blink animation in a sequence\n\n  React.useEffect(() => {\n    //Check if window is loaded\n    if (isDomUsable) {\n      const blink = Animated.sequence([Animated.timing(blinkAnim, {\n        toValue: 1,\n        duration: resolvedProps.fadeDuration * 10000 * (1 / resolvedProps.speed),\n        useNativeDriver: Platform.OS !== 'web'\n      }), Animated.timing(blinkAnim, {\n        toValue: 0,\n        duration: resolvedProps.fadeDuration * 10000 * (1 / resolvedProps.speed),\n        useNativeDriver: Platform.OS !== 'web'\n      })]);\n      Animated.loop(blink).start();\n    }\n  }, [blinkAnim, isDomUsable, resolvedProps]);\n  const skeletonStyle = {\n    skeleton: {\n      height: '100%',\n      width: '100%',\n      backgroundColor: tokenisedStartColor,\n      opacity: blinkAnim // Bind opacity to animated value\n\n    }\n  }; //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return resolvedProps.isLoaded ? children : /*#__PURE__*/React.createElement(Box, _extends({\n    bg: endColor\n  }, resolvedProps, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(Animated.View, {\n    style: skeletonStyle.skeleton\n  }));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Skeleton));\n//# sourceMappingURL=Skeleton.js.map"]},"metadata":{},"sourceType":"module"}