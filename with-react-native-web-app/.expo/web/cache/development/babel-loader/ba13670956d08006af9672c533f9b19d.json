{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/slicedToArray\");\n\nvar _excluded = [\"children\"];\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Hidden = Hidden;\nexports[\"default\"] = void 0;\n\nvar _react = require(\"react\");\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _hooks2 = require(\"../../../core/color-mode/hooks\");\n\nvar _reactNative = require(\"react-native-web/dist/cjs/index\");\n\nfunction Hidden(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _ref2 = (0, _useThemeProps.usePropsResolution)('Hidden', props, {}, {\n    ignoreProps: ['only', 'platform']\n  }),\n      from = _ref2.from,\n      till = _ref2.till,\n      only = _ref2.only,\n      platform = _ref2.platform,\n      colorMode = _ref2.colorMode;\n\n  var _ref3 = (0, _hooks.useTheme)(),\n      breakpoints = _ref3.breakpoints;\n\n  var currentColorMode = (0, _hooks2.useColorMode)();\n  var breakpointValueObject = Object.keys(breakpoints).reduce(function (obj, val) {\n    obj[val] = val;\n    return obj;\n  }, {});\n  var breakpointValue = (0, _hooks.useBreakpointValue)(breakpointValueObject);\n\n  var _ref4 = (0, _hooks.useToken)('breakpoints', [breakpointValue]),\n      _ref5 = _slicedToArray(_ref4, 1),\n      currentBreakpointValue = _ref5[0];\n\n  var _ref6 = (0, _hooks.useToken)('breakpoints', [from]),\n      _ref7 = _slicedToArray(_ref6, 1),\n      fromBreakPointValue = _ref7[0];\n\n  var _ref8 = (0, _hooks.useToken)('breakpoints', [till]),\n      _ref9 = _slicedToArray(_ref8, 1),\n      tillBreakPointValue = _ref9[0]; //if no prop is passed, it will hide the element wrapped with hidden\n\n\n  if (!from && !till && !only && !colorMode && !platform) {\n    return null;\n  } //if from and till prop exists, it will hide the element wrapped accordingly\n  else if (from && till && currentBreakpointValue >= fromBreakPointValue && currentBreakpointValue < tillBreakPointValue) {\n    return null;\n  } //if from prop exists, it will hide the element wrapped starting from that breakpoint.\n  else if (from && !till && currentBreakpointValue >= fromBreakPointValue) {\n    return null;\n  } //if till prop exists, it will hide the element wrapped starting from  0 till that breakpoint.\n  else if (till && !from && currentBreakpointValue < tillBreakPointValue) {\n    return null;\n  } //if only prop exists and is array, check that array consists current breakpoint value, and if that exists, hide on that breakpoint to next breakpoint.\n  // if only prop is string, hide on that breakpoint to next breakpoint.\n  else if (Array.isArray(only) && only.includes(breakpointValue) || only === breakpointValue) {\n    return null;\n  } //if platform prop exists and is array, check that array consists current platform value, and if that exists, hide on that platform.\n  // if platform prop is string, hide on that platform.\n  else if (Array.isArray(platform) && platform.includes(_reactNative.Platform.OS) || platform === _reactNative.Platform.OS) {\n    return null;\n  } //if colormode prop is valid string, hide on that colormode.\n  else if (colorMode === currentColorMode.colorMode) {\n    return null;\n  }\n\n  return children;\n}\n\nvar _default = /*#__PURE__*/(0, _react.memo)(Hidden);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/commonjs/components/primitives/Hidden/index.js"],"names":["Object","value","exports","_react","require","_useThemeProps","_hooks","_hooks2","children","props","colorMode","ignoreProps","breakpoints","currentColorMode","breakpointValueObject","obj","breakpointValue","from","currentBreakpointValue","till","Array","only","platform","_reactNative","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Hidden = Hidden;\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _hooks2 = require(\"../../../core/color-mode/hooks\");\n\nvar _reactNative = require(\"react-native\");\n\nfunction Hidden({\n  children,\n  ...props\n}) {\n  const {\n    from,\n    till,\n    only,\n    platform,\n    colorMode\n  } = (0, _useThemeProps.usePropsResolution)('Hidden', props, {}, {\n    ignoreProps: ['only', 'platform']\n  });\n  const {\n    breakpoints\n  } = (0, _hooks.useTheme)();\n  const currentColorMode = (0, _hooks2.useColorMode)();\n  const breakpointValueObject = Object.keys(breakpoints).reduce((obj, val) => {\n    obj[val] = val;\n    return obj;\n  }, {});\n  const breakpointValue = (0, _hooks.useBreakpointValue)(breakpointValueObject);\n  const [currentBreakpointValue] = (0, _hooks.useToken)('breakpoints', [breakpointValue]);\n  const [fromBreakPointValue] = (0, _hooks.useToken)('breakpoints', [from]);\n  const [tillBreakPointValue] = (0, _hooks.useToken)('breakpoints', [till]); //if no prop is passed, it will hide the element wrapped with hidden\n\n  if (!from && !till && !only && !colorMode && !platform) {\n    return null;\n  } //if from and till prop exists, it will hide the element wrapped accordingly\n  else if (from && till && currentBreakpointValue >= fromBreakPointValue && currentBreakpointValue < tillBreakPointValue) {\n      return null;\n    } //if from prop exists, it will hide the element wrapped starting from that breakpoint.\n    else if (from && !till && currentBreakpointValue >= fromBreakPointValue) {\n        return null;\n      } //if till prop exists, it will hide the element wrapped starting from  0 till that breakpoint.\n      else if (till && !from && currentBreakpointValue < tillBreakPointValue) {\n          return null;\n        } //if only prop exists and is array, check that array consists current breakpoint value, and if that exists, hide on that breakpoint to next breakpoint.\n        // if only prop is string, hide on that breakpoint to next breakpoint.\n        else if (Array.isArray(only) && only.includes(breakpointValue) || only === breakpointValue) {\n            return null;\n          } //if platform prop exists and is array, check that array consists current platform value, and if that exists, hide on that platform.\n          // if platform prop is string, hide on that platform.\n          else if (Array.isArray(platform) && platform.includes(_reactNative.Platform.OS) || platform === _reactNative.Platform.OS) {\n              return null;\n            } //if colormode prop is valid string, hide on that colormode.\n            else if (colorMode === currentColorMode.colorMode) {\n                return null;\n              }\n\n  return children;\n}\n\nvar _default = /*#__PURE__*/(0, _react.memo)(Hidden);\n\nexports.default = _default;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}