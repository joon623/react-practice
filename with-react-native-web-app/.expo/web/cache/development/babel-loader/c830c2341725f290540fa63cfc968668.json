{"ast":null,"code":"import { mode, getColorScheme } from '../tools';\nvar sizes = {\n  'xs': {\n    height: 6,\n    width: 6\n  },\n  'sm': {\n    height: 8,\n    width: 8\n  },\n  'md': {\n    height: 16,\n    width: 16\n  },\n  'lg': {\n    height: 20,\n    width: 20\n  },\n  'xl': {\n    height: 24,\n    width: 24\n  },\n  '2xl': {\n    height: 32,\n    width: 32\n  }\n};\nvar defaultProps = {\n  thickness: 8,\n  colorScheme: 'primary',\n  size: 'lg'\n};\n\nfunction baseStyle(props) {\n  var colorScheme = getColorScheme(props);\n  return {\n    color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".500\"))(props),\n    trackColor: mode(\"\".concat(colorScheme, \".200\"), \"\".concat(colorScheme, \".800\"))(props)\n  };\n}\n\nexport default {\n  baseStyle: baseStyle,\n  sizes: sizes,\n  defaultProps: defaultProps\n};\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/module/theme/components/circular-progress.js"],"names":["sizes","height","width","defaultProps","thickness","colorScheme","size","getColorScheme","color","mode","trackColor","baseStyle"],"mappings":"AAAA,SAAA,IAAA,EAAA,cAAA,QAAA,UAAA;AACA,IAAMA,KAAK,GAAG;EACZ,MAAM;IACJC,MAAM,EADF,CAAA;IAEJC,KAAK,EAAE;EAFH,CADM;EAKZ,MAAM;IACJD,MAAM,EADF,CAAA;IAEJC,KAAK,EAAE;EAFH,CALM;EASZ,MAAM;IACJD,MAAM,EADF,EAAA;IAEJC,KAAK,EAAE;EAFH,CATM;EAaZ,MAAM;IACJD,MAAM,EADF,EAAA;IAEJC,KAAK,EAAE;EAFH,CAbM;EAiBZ,MAAM;IACJD,MAAM,EADF,EAAA;IAEJC,KAAK,EAAE;EAFH,CAjBM;EAqBZ,OAAO;IACLD,MAAM,EADD,EAAA;IAELC,KAAK,EAAE;EAFF;AArBK,CAAd;AA0BA,IAAMC,YAAY,GAAG;EACnBC,SAAS,EADU,CAAA;EAEnBC,WAAW,EAFQ,SAAA;EAGnBC,IAAI,EAAE;AAHa,CAArB;;AAMA,SAAA,SAAA,CAAA,KAAA,EAA0B;EACxB,IAAMD,WAAW,GAAGE,cAAc,CAAlC,KAAkC,CAAlC;EACA,OAAO;IACLC,KAAK,EAAEC,IAAI,CAAC,GAAA,MAAA,CAAA,WAAA,EAAD,MAAC,CAAD,EAAiC,GAAA,MAAA,CAAA,WAAA,EAArCA,MAAqC,CAAjC,CAAJA,CADF,KACEA,CADF;IAELC,UAAU,EAAED,IAAI,CAAC,GAAA,MAAA,CAAA,WAAA,EAAD,MAAC,CAAD,EAAiC,GAAA,MAAA,CAAA,WAAA,EAArCA,MAAqC,CAAjC,CAAJA,CAAAA,KAAAA;EAFP,CAAP;AAID;;AAED,eAAe;EACbE,SAAS,EADI,SAAA;EAEbX,KAAK,EAFQ,KAAA;EAGbG,YAAY,EAAZA;AAHa,CAAf","sourcesContent":["import { mode, getColorScheme } from '../tools';\nconst sizes = {\n  'xs': {\n    height: 6,\n    width: 6\n  },\n  'sm': {\n    height: 8,\n    width: 8\n  },\n  'md': {\n    height: 16,\n    width: 16\n  },\n  'lg': {\n    height: 20,\n    width: 20\n  },\n  'xl': {\n    height: 24,\n    width: 24\n  },\n  '2xl': {\n    height: 32,\n    width: 32\n  }\n};\nconst defaultProps = {\n  thickness: 8,\n  colorScheme: 'primary',\n  size: 'lg'\n};\n\nfunction baseStyle(props) {\n  const colorScheme = getColorScheme(props);\n  return {\n    color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".500\"))(props),\n    trackColor: mode(\"\".concat(colorScheme, \".200\"), \"\".concat(colorScheme, \".800\"))(props)\n  };\n}\n\nexport default {\n  baseStyle,\n  sizes,\n  defaultProps\n};\n//# sourceMappingURL=circular-progress.js.map"]},"metadata":{},"sourceType":"module"}