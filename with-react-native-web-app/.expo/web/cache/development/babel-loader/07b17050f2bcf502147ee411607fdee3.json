{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useContrastText = useContrastText;\n\nvar _tinycolor = _interopRequireDefault(require(\"tinycolor2\"));\n\nvar _useToken = require(\"./useToken\");\n\nvar _hooks = require(\"../core/color-mode/hooks\");\n\nvar _NativeBaseContext = require(\"../core/NativeBaseContext\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction useContrastText(bg, color) {\n  var _ref = (0, _useToken.useToken)('colors', ['contrastThreshold', 'darkText', 'lightText', bg, color !== null && color !== void 0 ? color : '']),\n      _ref2 = _slicedToArray(_ref, 5),\n      contrastThreshold = _ref2[0],\n      trueDarkText = _ref2[1],\n      trueLightText = _ref2[2],\n      trueBg = _ref2[3],\n      trueColor = _ref2[4];\n\n  var suppressColorAccessibilityWarning = (0, _NativeBaseContext.useNativeBaseConfig)('NativeBaseConfigProvider').config.suppressColorAccessibilityWarning;\n\n  var _ref3 = (0, _hooks.useAccessibleColors)(),\n      _ref4 = _slicedToArray(_ref3, 1),\n      accessibleColors = _ref4[0];\n\n  if ((0, _NativeBaseContext.useNativeBaseConfig)('NativeBaseConfigProvider').disableContrastText) {\n    return trueColor;\n  }\n\n  if (typeof bg !== 'string') {\n    return;\n  }\n\n  var _bg$split = bg.split('.'),\n      _bg$split2 = _slicedToArray(_bg$split, 2),\n      bgThemeColorVariant = _bg$split2[0],\n      bgShade = _bg$split2[1];\n\n  var textColor = !accessibleColors && bgThemeColorVariant && themeColorsThresholdShades[bgThemeColorVariant] ? getContrastThemeColor(bgThemeColorVariant, bgShade) : getAccessibleContrastColor(contrastThreshold, trueDarkText, trueLightText, trueBg, trueColor, bg, color, suppressColorAccessibilityWarning);\n  return textColor;\n}\n\nfunction getContrastThemeColor(bgThemeColorVariant, bgShade) {\n  var shadeThreshold = themeColorsThresholdShades[bgThemeColorVariant];\n\n  if (bgShade && shadeThreshold && (bgShade >= shadeThreshold && bgThemeColorVariant !== 'dark' || bgThemeColorVariant === 'dark' && bgShade < shadeThreshold)) {\n    return 'lightText';\n  }\n\n  return 'darkText';\n}\n\nfunction getAccessibleContrastColor(contrastThreshold, trueDarkText, trueLightText, trueBg, trueColor, bg, color, suppressColorAccessibilityWarning) {\n  if (typeof trueBg !== 'string') {\n    trueBg = bg;\n  }\n\n  var trueContrastColor;\n  var contrastColorToken;\n  var darkTextConstrast = getContrastRatio(trueBg, trueDarkText);\n  var lightTextConstrast = getContrastRatio(trueBg, trueLightText);\n\n  if (darkTextConstrast >= contrastThreshold || darkTextConstrast > lightTextConstrast) {\n    trueContrastColor = trueDarkText;\n    contrastColorToken = 'darkText';\n  } else {\n    trueContrastColor = trueLightText;\n    contrastColorToken = 'lightText';\n  }\n\n  if (true) {\n    var contrast = getContrastRatio(trueBg, trueColor ? trueColor : trueContrastColor);\n\n    if (contrast < 3 && !suppressColorAccessibilityWarning) {\n      console.warn([\"NativeBase: The contrast ratio of \".concat(contrast, \":1 for \").concat(color ? color : contrastColorToken, \" on \").concat(bg), 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));\n    }\n  }\n\n  return contrastColorToken;\n}\n\nfunction getContrastRatio(foreground, background) {\n  var lumA = (0, _tinycolor[\"default\"])(foreground).getLuminance();\n  var lumB = (0, _tinycolor[\"default\"])(background).getLuminance();\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n\nvar themeColorsThresholdShades = {\n  rose: 500,\n  pink: 500,\n  fuchsia: 800,\n  purple: 700,\n  violet: 600,\n  indigo: 500,\n  blue: 400,\n  lightBlue: 400,\n  cyan: 300,\n  teal: 300,\n  emerald: 300,\n  tertiary: 300,\n  green: 400,\n  lime: 600,\n  yellow: 800,\n  amber: 500,\n  orange: 500,\n  red: 500,\n  warmGray: 500,\n  trueGray: 500,\n  gray: 500,\n  coolGray: 500,\n  blueGray: 500,\n  dark: 500,\n  danger: 500,\n  error: 500,\n  success: 400,\n  warning: 500,\n  muted: 500,\n  primary: 500,\n  info: 400,\n  secondary: 500,\n  light: 500\n};","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/commonjs/hooks/useContrastText.js"],"names":["Object","value","exports","_tinycolor","_interopRequireDefault","require","_useToken","_hooks","_NativeBaseContext","obj","default","color","suppressColorAccessibilityWarning","bg","textColor","themeColorsThresholdShades","getContrastThemeColor","getAccessibleContrastColor","shadeThreshold","bgShade","bgThemeColorVariant","trueBg","darkTextConstrast","getContrastRatio","lightTextConstrast","trueContrastColor","contrastColorToken","contrast","trueColor","console","lumA","lumB","Math","rose","pink","fuchsia","purple","violet","indigo","blue","lightBlue","cyan","teal","emerald","tertiary","green","lime","yellow","amber","orange","red","warmGray","trueGray","gray","coolGray","blueGray","dark","danger","error","success","warning","muted","primary","info","secondary","light"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useContrastText = useContrastText;\n\nvar _tinycolor = _interopRequireDefault(require(\"tinycolor2\"));\n\nvar _useToken = require(\"./useToken\");\n\nvar _hooks = require(\"../core/color-mode/hooks\");\n\nvar _NativeBaseContext = require(\"../core/NativeBaseContext\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction useContrastText(bg, color) {\n  const [contrastThreshold, trueDarkText, trueLightText, trueBg, trueColor] = (0, _useToken.useToken)('colors', ['contrastThreshold', 'darkText', 'lightText', bg, color !== null && color !== void 0 ? color : '']);\n  const suppressColorAccessibilityWarning = (0, _NativeBaseContext.useNativeBaseConfig)('NativeBaseConfigProvider').config.suppressColorAccessibilityWarning;\n  const [accessibleColors] = (0, _hooks.useAccessibleColors)();\n\n  if ((0, _NativeBaseContext.useNativeBaseConfig)('NativeBaseConfigProvider').disableContrastText) {\n    return trueColor;\n  }\n\n  if (typeof bg !== 'string') {\n    return;\n  }\n\n  const [bgThemeColorVariant, bgShade] = bg.split('.');\n  const textColor = !accessibleColors && bgThemeColorVariant && themeColorsThresholdShades[bgThemeColorVariant] ? getContrastThemeColor(bgThemeColorVariant, bgShade) : getAccessibleContrastColor(contrastThreshold, trueDarkText, trueLightText, trueBg, trueColor, bg, color, suppressColorAccessibilityWarning);\n  return textColor;\n}\n\nfunction getContrastThemeColor(bgThemeColorVariant, bgShade) {\n  const shadeThreshold = themeColorsThresholdShades[bgThemeColorVariant];\n\n  if (bgShade && shadeThreshold && (bgShade >= shadeThreshold && bgThemeColorVariant !== 'dark' || bgThemeColorVariant === 'dark' && bgShade < shadeThreshold)) {\n    return 'lightText';\n  }\n\n  return 'darkText';\n}\n\nfunction getAccessibleContrastColor(contrastThreshold, trueDarkText, trueLightText, trueBg, trueColor, bg, color, suppressColorAccessibilityWarning) {\n  if (typeof trueBg !== 'string') {\n    trueBg = bg;\n  }\n\n  let trueContrastColor;\n  let contrastColorToken;\n  const darkTextConstrast = getContrastRatio(trueBg, trueDarkText);\n  const lightTextConstrast = getContrastRatio(trueBg, trueLightText);\n\n  if (darkTextConstrast >= contrastThreshold || darkTextConstrast > lightTextConstrast) {\n    trueContrastColor = trueDarkText;\n    contrastColorToken = 'darkText';\n  } else {\n    trueContrastColor = trueLightText;\n    contrastColorToken = 'lightText';\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    const contrast = getContrastRatio(trueBg, trueColor ? trueColor : trueContrastColor);\n\n    if (contrast < 3 && !suppressColorAccessibilityWarning) {\n      console.warn([\"NativeBase: The contrast ratio of \".concat(contrast, \":1 for \").concat(color ? color : contrastColorToken, \" on \").concat(bg), 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));\n    }\n  }\n\n  return contrastColorToken;\n}\n\nfunction getContrastRatio(foreground, background) {\n  const lumA = (0, _tinycolor.default)(foreground).getLuminance();\n  const lumB = (0, _tinycolor.default)(background).getLuminance();\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n\nconst themeColorsThresholdShades = {\n  rose: 500,\n  pink: 500,\n  fuchsia: 800,\n  purple: 700,\n  violet: 600,\n  indigo: 500,\n  blue: 400,\n  lightBlue: 400,\n  cyan: 300,\n  teal: 300,\n  emerald: 300,\n  tertiary: 300,\n  green: 400,\n  lime: 600,\n  yellow: 800,\n  amber: 500,\n  orange: 500,\n  red: 500,\n  warmGray: 500,\n  trueGray: 500,\n  gray: 500,\n  coolGray: 500,\n  blueGray: 500,\n  dark: 500,\n  danger: 500,\n  error: 500,\n  success: 400,\n  warning: 500,\n  muted: 500,\n  primary: 500,\n  info: 400,\n  secondary: 500,\n  light: 500\n};\n//# sourceMappingURL=useContrastText.js.map"]},"metadata":{},"sourceType":"script"}