{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _UIManager = _interopRequireDefault(require(\"../../exports/UIManager\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * This class is responsible for coordinating the \"focused\"\n * state for TextInputs. All calls relating to the keyboard\n * should be funneled through here\n */\n\n\nvar TextInputState = {\n  /**\n   * Internal state\n   */\n  _currentlyFocusedNode: null,\n\n  /**\n   * Returns the ID of the currently focused text field, if one exists\n   * If no text field is focused it returns null\n   */\n  currentlyFocusedField: function currentlyFocusedField() {\n    if (document.activeElement !== this._currentlyFocusedNode) {\n      this._currentlyFocusedNode = null;\n    }\n\n    return this._currentlyFocusedNode;\n  },\n\n  /**\n   * @param {Object} TextInputID id of the text field to focus\n   * Focuses the specified text field\n   * noop if the text field was already focused\n   */\n  focusTextInput: function focusTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = textFieldNode;\n\n      if (document.activeElement !== textFieldNode) {\n        _UIManager[\"default\"].focus(textFieldNode);\n      }\n    }\n  },\n\n  /**\n   * @param {Object} textFieldNode id of the text field to focus\n   * Unfocuses the specified text field\n   * noop if it wasn't focused\n   */\n  blurTextInput: function blurTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = null;\n\n      if (document.activeElement === textFieldNode) {\n        _UIManager[\"default\"].blur(textFieldNode);\n      }\n    }\n  }\n};\nvar _default = TextInputState;\nexports[\"default\"] = _default;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/cjs/modules/TextInputState/index.js"],"names":["exports","_UIManager","_interopRequireDefault","require","obj","default","TextInputState","_currentlyFocusedNode","currentlyFocusedField","document","focusTextInput","textFieldNode","blurTextInput","_default","module"],"mappings":"AAAA;;AAEAA,OAAO,CAAPA,UAAAA,GAAAA,IAAAA;AACAA,OAAAA,WAAAA,GAAkB,KAAlBA,CAAAA;;AAEA,IAAIC,UAAU,GAAGC,sBAAsB,CAACC,OAAO,CAA/C,yBAA+C,CAAR,CAAvC;;AAEA,SAAA,sBAAA,CAAA,GAAA,EAAqC;EAAE,OAAOC,GAAG,IAAIA,GAAG,CAAVA,UAAAA,GAAAA,GAAAA,GAA8B;IAAEC,WAASD;EAAX,CAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,cAAc,GAAG;EACnB;AACF;AACA;EACEC,qBAAqB,EAJF,IAAA;;EAMnB;AACF;AACA;AACA;EACEC,qBAAqB,EAAE,SAAA,qBAAA,GAAiC;IACtD,IAAIC,QAAQ,CAARA,aAAAA,KAA2B,KAA/B,qBAAA,EAA2D;MACzD,KAAA,qBAAA,GAAA,IAAA;IACD;;IAED,OAAO,KAAP,qBAAA;EAfiB,CAAA;;EAkBnB;AACF;AACA;AACA;AACA;EACEC,cAAc,EAAE,SAAA,cAAA,CAAA,aAAA,EAAuC;IACrD,IAAIC,aAAa,KAAjB,IAAA,EAA4B;MAC1B,KAAA,qBAAA,GAAA,aAAA;;MAEA,IAAIF,QAAQ,CAARA,aAAAA,KAAJ,aAAA,EAA8C;QAC5CR,UAAAA,WAAAA,CAAAA,KAAAA,CAAAA,aAAAA;MACD;IACF;EA9BgB,CAAA;;EAiCnB;AACF;AACA;AACA;AACA;EACEW,aAAa,EAAE,SAAA,aAAA,CAAA,aAAA,EAAsC;IACnD,IAAID,aAAa,KAAjB,IAAA,EAA4B;MAC1B,KAAA,qBAAA,GAAA,IAAA;;MAEA,IAAIF,QAAQ,CAARA,aAAAA,KAAJ,aAAA,EAA8C;QAC5CR,UAAAA,WAAAA,CAAAA,IAAAA,CAAAA,aAAAA;MACD;IACF;EACF;AA9CkB,CAArB;AAgDA,IAAIY,QAAQ,GAAZ,cAAA;AACAb,OAAAA,WAAAA,GAAAA,QAAAA;AACAc,MAAM,CAANA,OAAAA,GAAiBd,OAAjBc,WAAAA","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _UIManager = _interopRequireDefault(require(\"../../exports/UIManager\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * This class is responsible for coordinating the \"focused\"\n * state for TextInputs. All calls relating to the keyboard\n * should be funneled through here\n */\nvar TextInputState = {\n  /**\n   * Internal state\n   */\n  _currentlyFocusedNode: null,\n\n  /**\n   * Returns the ID of the currently focused text field, if one exists\n   * If no text field is focused it returns null\n   */\n  currentlyFocusedField: function currentlyFocusedField() {\n    if (document.activeElement !== this._currentlyFocusedNode) {\n      this._currentlyFocusedNode = null;\n    }\n\n    return this._currentlyFocusedNode;\n  },\n\n  /**\n   * @param {Object} TextInputID id of the text field to focus\n   * Focuses the specified text field\n   * noop if the text field was already focused\n   */\n  focusTextInput: function focusTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = textFieldNode;\n\n      if (document.activeElement !== textFieldNode) {\n        _UIManager.default.focus(textFieldNode);\n      }\n    }\n  },\n\n  /**\n   * @param {Object} textFieldNode id of the text field to focus\n   * Unfocuses the specified text field\n   * noop if it wasn't focused\n   */\n  blurTextInput: function blurTextInput(textFieldNode) {\n    if (textFieldNode !== null) {\n      this._currentlyFocusedNode = null;\n\n      if (document.activeElement === textFieldNode) {\n        _UIManager.default.blur(textFieldNode);\n      }\n    }\n  }\n};\nvar _default = TextInputState;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}