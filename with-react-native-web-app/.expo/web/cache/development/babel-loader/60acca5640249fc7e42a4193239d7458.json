{"ast":null,"code":"import Badge from './badge';\nvar variants = Badge.variants;\nvar baseStyle = {\n  _text: {\n    fontWeight: 'medium' // lineHeight: 1.2,\n\n  },\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexDirection: 'row',\n  display: 'flex'\n};\nvar sizes = {\n  sm: {\n    minH: 5,\n    minW: 5,\n    _text: {\n      fontSize: 'xs'\n    },\n    p: 1,\n    borderRadius: 'sm'\n  },\n  md: {\n    minH: 6,\n    minW: 6,\n    _text: {\n      fontSize: 'sm'\n    },\n    borderRadius: 'md',\n    p: 2\n  },\n  lg: {\n    minH: 8,\n    minW: 8,\n    _text: {\n      fontSize: 'md'\n    },\n    borderRadius: 'md',\n    p: 3\n  }\n};\nvar defaultProps = {\n  size: 'md',\n  variant: 'subtle',\n  colorScheme: 'primary'\n};\nexport default {\n  variants: variants,\n  baseStyle: baseStyle,\n  sizes: sizes,\n  defaultProps: defaultProps\n};\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/theme/v33x-theme/components/tag.ts"],"names":["variants","Badge","baseStyle","_text","fontWeight","alignItems","justifyContent","flexDirection","display","sizes","sm","minH","minW","fontSize","p","borderRadius","md","lg","defaultProps","size","variant","colorScheme"],"mappings":"AAAA,OAAA,KAAA,MAAA,SAAA;AAEA,IAAQA,QAAR,GAAqBC,KAArB,CAAA,QAAA;AACA,IAAMC,SAAS,GAAG;EAChBC,KAAK,EAAE;IACLC,UAAU,EADL,QAAA,CAEL;;EAFK,CADS;EAKhBC,UAAU,EALM,QAAA;EAMhBC,cAAc,EANE,QAAA;EAOhBC,aAAa,EAPG,KAAA;EAQhBC,OAAO,EAAE;AARO,CAAlB;AAUA,IAAMC,KAAK,GAAG;EACZC,EAAE,EAAE;IACFC,IAAI,EADF,CAAA;IAEFC,IAAI,EAFF,CAAA;IAGFT,KAAK,EAAE;MACLU,QAAQ,EAAE;IADL,CAHL;IAMFC,CAAC,EANC,CAAA;IAOFC,YAAY,EAAE;EAPZ,CADQ;EAUZC,EAAE,EAAE;IACFL,IAAI,EADF,CAAA;IAEFC,IAAI,EAFF,CAAA;IAGFT,KAAK,EAAE;MACLU,QAAQ,EAAE;IADL,CAHL;IAMFE,YAAY,EANV,IAAA;IAOFD,CAAC,EAAE;EAPD,CAVQ;EAmBZG,EAAE,EAAE;IACFN,IAAI,EADF,CAAA;IAEFC,IAAI,EAFF,CAAA;IAGFT,KAAK,EAAE;MACLU,QAAQ,EAAE;IADL,CAHL;IAMFE,YAAY,EANV,IAAA;IAOFD,CAAC,EAAE;EAPD;AAnBQ,CAAd;AA8BA,IAAMI,YAAY,GAAG;EACnBC,IAAI,EADe,IAAA;EAEnBC,OAAO,EAFY,QAAA;EAGnBC,WAAW,EAAE;AAHM,CAArB;AAMA,eAAe;EACbrB,QAAQ,EADK,QAAA;EAEbE,SAAS,EAFI,SAAA;EAGbO,KAAK,EAHQ,KAAA;EAIbS,YAAY,EAAZA;AAJa,CAAf","sourcesContent":["import Badge from './badge';\n\nconst { variants } = Badge;\nconst baseStyle = {\n  _text: {\n    fontWeight: 'medium',\n    // lineHeight: 1.2,\n  },\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexDirection: 'row',\n  display: 'flex',\n};\nconst sizes = {\n  sm: {\n    minH: 5,\n    minW: 5,\n    _text: {\n      fontSize: 'xs',\n    },\n    p: 1,\n    borderRadius: 'sm',\n  },\n  md: {\n    minH: 6,\n    minW: 6,\n    _text: {\n      fontSize: 'sm',\n    },\n    borderRadius: 'md',\n    p: 2,\n  },\n  lg: {\n    minH: 8,\n    minW: 8,\n    _text: {\n      fontSize: 'md',\n    },\n    borderRadius: 'md',\n    p: 3,\n  },\n};\n\nconst defaultProps = {\n  size: 'md',\n  variant: 'subtle',\n  colorScheme: 'primary',\n};\n\nexport default {\n  variants,\n  baseStyle,\n  sizes,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"module"}