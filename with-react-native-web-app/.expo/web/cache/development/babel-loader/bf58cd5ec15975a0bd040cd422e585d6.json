{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useTheme } from './useTheme';\nimport get from 'lodash.get';\nexport function useToken(property, token, fallback) {\n  _s();\n\n  var theme = useTheme();\n\n  if (Array.isArray(token)) {\n    var fallbackArr = [];\n\n    if (fallback) {\n      fallbackArr = Array.isArray(fallback) ? fallback : [fallback];\n    }\n\n    return token.map(function (innerToken, index) {\n      var _fallbackArr$index;\n\n      var path = \"\".concat(property, \".\").concat(innerToken);\n      return get(theme, path, (_fallbackArr$index = fallbackArr[index]) !== null && _fallbackArr$index !== void 0 ? _fallbackArr$index : innerToken);\n    });\n  }\n\n  var path = \"\".concat(property, \".\").concat(token);\n  return get(theme, path, fallback !== null && fallback !== void 0 ? fallback : token);\n}\n\n_s(useToken, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/module/hooks/useToken.js"],"names":["useToken","theme","useTheme","Array","fallbackArr","path","get","_fallbackArr$index","fallback"],"mappings":";;AAAA,SAAA,QAAA,QAAA,YAAA;AACA,OAAA,GAAA,MAAA,YAAA;AACA,OAAO,SAAA,QAAA,CAAA,QAAA,EAAA,KAAA,EAAA,QAAA,EAA6C;EAAA,EAAA;;EAClD,IAAMC,KAAK,GAAGC,QAAd,EAAA;;EAEA,IAAIC,KAAK,CAALA,OAAAA,CAAJ,KAAIA,CAAJ,EAA0B;IACxB,IAAIC,WAAW,GAAf,EAAA;;IAEA,IAAA,QAAA,EAAc;MACZA,WAAW,GAAGD,KAAK,CAALA,OAAAA,CAAAA,QAAAA,IAAAA,QAAAA,GAAqC,CAAnDC,QAAmD,CAAnDA;IACD;;IAED,OAAO,KAAK,CAAL,GAAA,CAAU,UAAA,UAAA,EAAA,KAAA,EAAuB;MACtC,IAAA,kBAAA;;MAEA,IAAMC,IAAI,GAAG,GAAA,MAAA,CAAA,QAAA,EAAA,GAAA,EAAA,MAAA,CAAb,UAAa,CAAb;MACA,OAAOC,GAAG,CAAA,KAAA,EAAA,IAAA,EAAc,CAACC,kBAAkB,GAAGH,WAAW,CAAjC,KAAiC,CAAjC,MAAA,IAAA,IAAsDG,kBAAkB,KAAK,KAA7E,CAAA,GAAA,kBAAA,GAAxB,UAAU,CAAV;IAJF,CAAO,CAAP;EAMD;;EAED,IAAMF,IAAI,GAAG,GAAA,MAAA,CAAA,QAAA,EAAA,GAAA,EAAA,MAAA,CAAb,KAAa,CAAb;EACA,OAAOC,GAAG,CAAA,KAAA,EAAA,IAAA,EAAcE,QAAQ,KAARA,IAAAA,IAAqBA,QAAQ,KAAK,KAAlCA,CAAAA,GAAAA,QAAAA,GAAxB,KAAU,CAAV;AACD;;GApBeR,Q;UACAE,Q","sourcesContent":["import { useTheme } from './useTheme';\nimport get from 'lodash.get';\nexport function useToken(property, token, fallback) {\n  const theme = useTheme();\n\n  if (Array.isArray(token)) {\n    let fallbackArr = [];\n\n    if (fallback) {\n      fallbackArr = Array.isArray(fallback) ? fallback : [fallback];\n    }\n\n    return token.map((innerToken, index) => {\n      var _fallbackArr$index;\n\n      const path = \"\".concat(property, \".\").concat(innerToken);\n      return get(theme, path, (_fallbackArr$index = fallbackArr[index]) !== null && _fallbackArr$index !== void 0 ? _fallbackArr$index : innerToken);\n    });\n  }\n\n  const path = \"\".concat(property, \".\").concat(token);\n  return get(theme, path, fallback !== null && fallback !== void 0 ? fallback : token);\n}\n//# sourceMappingURL=useToken.js.map"]},"metadata":{},"sourceType":"module"}