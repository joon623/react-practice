{"ast":null,"code":"import _defineProperty from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"align\", \"justify\", \"wrap\", \"basis\", \"grow\", \"shrink\", \"direction\"];\n\nvar _jsxFileName = \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/components/primitives/Flex/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { memo, forwardRef } from 'react';\nimport Box from '../Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Flex = function Flex(props, ref) {\n  _s();\n\n  var _usePropsResolution = usePropsResolution('Flex', props),\n      align = _usePropsResolution.align,\n      justify = _usePropsResolution.justify,\n      wrap = _usePropsResolution.wrap,\n      basis = _usePropsResolution.basis,\n      grow = _usePropsResolution.grow,\n      shrink = _usePropsResolution.shrink,\n      direction = _usePropsResolution.direction,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded); //TODO: refactor for responsive prop\n\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, _objectSpread(_objectSpread({}, resolvedProps), {}, {\n    flexDirection: direction || resolvedProps.flexDirection,\n    alignItems: align || resolvedProps.alignItems,\n    justifyContent: justify || resolvedProps.justifyContent,\n    flexGrow: grow || resolvedProps.flexGrow,\n    flexBasis: basis || resolvedProps.flexBasis,\n    flexShrink: shrink || resolvedProps.flexShrink,\n    flexWrap: wrap || resolvedProps.flexWrap,\n    ref: ref\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, _this);\n}; //Spacer Component that adds space between components where it is placed\n\n\n_s(Flex, \"SAiFIq9LnS97L9F165ovIygffDk=\", false, function () {\n  return [usePropsResolution, useHasResponsiveProps];\n});\n\n_c = Flex;\nexport var Spacer = function Spacer(props) {\n  _s2();\n\n  var resolvedProps = usePropsResolution('Spacer', props);\n  return /*#__PURE__*/_jsxDEV(Box, _objectSpread({}, resolvedProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, _this);\n};\n\n_s2(Spacer, \"cve9TyidSxelX/BlA3QfmmlHL7Y=\", false, function () {\n  return [usePropsResolution];\n});\n\n_c2 = Spacer;\nexport default _c4 = /*#__PURE__*/memo(_c3 = /*#__PURE__*/forwardRef(Flex));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Flex\");\n$RefreshReg$(_c2, \"Spacer\");\n$RefreshReg$(_c3, \"%default%$memo\");\n$RefreshReg$(_c4, \"%default%\");\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/components/primitives/Flex/index.tsx"],"names":["Flex","align","justify","wrap","basis","grow","shrink","direction","resolvedProps","usePropsResolution","useHasResponsiveProps","ref","Spacer","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,OAAA,GAAA,MAAA,QAAA;AAEA,SAAA,kBAAA,QAAA,8BAAA;AACA,SAAA,qBAAA,QAAA,sCAAA;;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAAA,KAAA,EAAA,GAAA,EAAiC;EAAA,EAAA;;EAC5C,IAAA,mBAAA,GASIS,kBAAkB,CAAA,MAAA,EATtB,KASsB,CATtB;EAAA,IACER,KADF,GAAA,mBAAA,CAAA,KAAA;EAAA,IAEEC,OAFF,GAAA,mBAAA,CAAA,OAAA;EAAA,IAGEC,IAHF,GAAA,mBAAA,CAAA,IAAA;EAAA,IAIEC,KAJF,GAAA,mBAAA,CAAA,KAAA;EAAA,IAKEC,IALF,GAAA,mBAAA,CAAA,IAAA;EAAA,IAMEC,MANF,GAAA,mBAAA,CAAA,MAAA;EAAA,IAOEC,SAPF,GAAA,mBAAA,CAAA,SAAA;EAAA,IAQKC,aARL,GAAA,wBAAA,CAAA,mBAAA,EAD4C,SAC5C,CAAA,CAD4C,CAY5C;;;EACA,IAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EAED,OAAA,aACE,OAAA,CAAA,GAAA,EAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA;IAEE,aAAa,EAAEH,SAAS,IAAIC,aAAa,CAF3C,aAAA;IAGE,UAAU,EAAEP,KAAK,IAAIO,aAAa,CAHpC,UAAA;IAIE,cAAc,EAAEN,OAAO,IAAIM,aAAa,CAJ1C,cAAA;IAKE,QAAQ,EAAEH,IAAI,IAAIG,aAAa,CALjC,QAAA;IAME,SAAS,EAAEJ,KAAK,IAAII,aAAa,CANnC,SAAA;IAOE,UAAU,EAAEF,MAAM,IAAIE,aAAa,CAPrC,UAAA;IAQE,QAAQ,EAAEL,IAAI,IAAIK,aAAa,CARjC,QAAA;IASE,GAAG,EAAEG;EATP,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;IAAA,QAAA,EAAA,YAAA;IAAA,UAAA,EAAA,EAAA;IAAA,YAAA,EAAA;EAAA,CAAA,EADF,KACE,CADF;AAjBF,CAAA,C,CAgCA;;;GAhCMX,I;UAUAS,kB,EAGAC,qB;;;KAbAV,I;AAiCN,OAAO,IAAMY,MAAM,GAAG,SAATA,MAAS,CAAA,KAAA,EAAgB;EAAA,GAAA;;EACpC,IAAMJ,aAAa,GAAGC,kBAAkB,CAAA,QAAA,EAAxC,KAAwC,CAAxC;EAEA,OAAA,aAAO,OAAA,CAAA,GAAA,EAAA,aAAA,CAAA,EAAA,EAAA,aAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;IAAA,QAAA,EAAA,YAAA;IAAA,UAAA,EAAA,EAAA;IAAA,YAAA,EAAA;EAAA,CAAA,EAAP,KAAO,CAAP;AAHK,CAAA;;IAAMG,M;UACWH,kB;;;MADXG,M;AAOb,eAAA,GAAA,GAAA,aAAeC,IAAI,CAAA,GAAA,GAAA,aAACC,UAAU,CAA9B,IAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../Box';\nimport type { IFlexProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Flex = (props: IFlexProps, ref: any) => {\n  const {\n    align,\n    justify,\n    wrap,\n    basis,\n    grow,\n    shrink,\n    direction,\n    ...resolvedProps\n  } = usePropsResolution('Flex', props);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Box\n      {...resolvedProps}\n      flexDirection={direction || resolvedProps.flexDirection}\n      alignItems={align || resolvedProps.alignItems}\n      justifyContent={justify || resolvedProps.justifyContent}\n      flexGrow={grow || resolvedProps.flexGrow}\n      flexBasis={basis || resolvedProps.flexBasis}\n      flexShrink={shrink || resolvedProps.flexShrink}\n      flexWrap={wrap || resolvedProps.flexWrap}\n      ref={ref}\n    />\n  );\n};\n\n//Spacer Component that adds space between components where it is placed\nexport const Spacer = (props: any) => {\n  const resolvedProps = usePropsResolution('Spacer', props);\n\n  return <Box {...resolvedProps} />;\n};\n\nexport type { IFlexProps };\nexport default memo(forwardRef(Flex));\n"]},"metadata":{},"sourceType":"module"}