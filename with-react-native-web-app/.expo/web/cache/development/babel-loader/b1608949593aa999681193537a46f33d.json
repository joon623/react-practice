{"ast":null,"code":"import _defineProperty from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _INITIAL_PROP_SPECIFI;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport merge from 'lodash.merge';\nvar SPECIFICITY_1000 = 1000;\nvar SPECIFICITY_110 = 110;\nvar SPECIFICITY_100 = 100;\nvar SPECIFICITY_70 = 70;\nvar SPECIFICITY_60 = 60;\nvar SPECIFICITY_55 = 55;\nvar SPECIFICITY_50 = 50;\nvar SPECIFICITY_40 = 40;\nvar SPECIFICITY_30 = 30; // SPECIFICITY_20 is being user for defferentiating between User Props and Theme Props. So any specificity less than SPECIFICITY_20 will be ovridable by user props.\n\nvar SPECIFICITY_20 = 20;\nvar SPECIFICITY_10 = 10;\nvar specificityPrecedence = [SPECIFICITY_1000, SPECIFICITY_110, SPECIFICITY_100, SPECIFICITY_70, SPECIFICITY_60, SPECIFICITY_55, SPECIFICITY_50, SPECIFICITY_40, SPECIFICITY_30, SPECIFICITY_20, SPECIFICITY_10];\nvar INITIAL_PROP_SPECIFICITY = (_INITIAL_PROP_SPECIFI = {}, _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_1000, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_110, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_100, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_70, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_60, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_50, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_55, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_40, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_30, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_20, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_10, 0), _INITIAL_PROP_SPECIFI);\nvar pseudoPropsMap = {\n  _web: {\n    dependentOn: 'platform',\n    priority: SPECIFICITY_10\n  },\n  _ios: {\n    dependentOn: 'platform',\n    priority: SPECIFICITY_10\n  },\n  _android: {\n    dependentOn: 'platform',\n    priority: SPECIFICITY_10\n  },\n  _light: {\n    dependentOn: 'colormode',\n    priority: SPECIFICITY_10\n  },\n  _dark: {\n    dependentOn: 'colormode',\n    priority: SPECIFICITY_10\n  },\n  // TODO: have to add more interactionProps and stateProps\n  _indeterminate: {\n    dependentOn: 'state',\n    respondTo: 'isIndeterminate',\n    priority: SPECIFICITY_30\n  },\n  _checked: {\n    dependentOn: 'state',\n    respondTo: 'isChecked',\n    priority: SPECIFICITY_30\n  },\n  // Add new pseudeo props in between -------\n  _readOnly: {\n    dependentOn: 'state',\n    respondTo: 'isReadOnly',\n    priority: SPECIFICITY_30\n  },\n  // Add new pseudeo props in between -------\n  _invalid: {\n    dependentOn: 'state',\n    respondTo: 'isInvalid',\n    priority: SPECIFICITY_40\n  },\n  _focus: {\n    dependentOn: 'state',\n    respondTo: 'isFocused',\n    priority: SPECIFICITY_50\n  },\n  _focusVisible: {\n    dependentOn: 'state',\n    respondTo: 'isFocusVisible',\n    priority: SPECIFICITY_55\n  },\n  _hover: {\n    dependentOn: 'state',\n    respondTo: 'isHovered',\n    priority: SPECIFICITY_60\n  },\n  _pressed: {\n    dependentOn: 'state',\n    respondTo: 'isPressed',\n    priority: SPECIFICITY_70\n  },\n  _disabled: {\n    dependentOn: 'state',\n    respondTo: 'isDisabled',\n    priority: SPECIFICITY_100\n  },\n  _loading: {\n    dependentOn: 'state',\n    respondTo: 'isLoading',\n    priority: SPECIFICITY_110\n  },\n  _important: {\n    dependentOn: null,\n    priority: SPECIFICITY_1000\n  }\n};\nexport var compareSpecificity = function compareSpecificity(exisiting, upcoming, ignorebaseTheme) {\n  if (!exisiting) return true;\n  if (!upcoming) return false;\n  var condition = ignorebaseTheme ? specificityPrecedence.length - 1 : specificityPrecedence.length;\n\n  for (var index = 0; index < condition; index++) {\n    if (exisiting[specificityPrecedence[index]] > upcoming[specificityPrecedence[index]]) {\n      return false;\n    } else if (exisiting[specificityPrecedence[index]] < upcoming[specificityPrecedence[index]]) {\n      return true;\n    }\n  }\n\n  return true;\n};\n\nvar shouldResolvePseudoProp = function shouldResolvePseudoProp(_ref) {\n  var property = _ref.property,\n      state = _ref.state,\n      platform = _ref.platform,\n      colormode = _ref.colormode;\n\n  if (pseudoPropsMap[property].dependentOn === 'platform') {\n    return property === \"_\".concat(platform);\n  } else if (pseudoPropsMap[property].dependentOn === 'colormode') {\n    return property === \"_\".concat(colormode);\n  } else if (pseudoPropsMap[property].dependentOn === 'state') {\n    // @ts-ignore\n    return state[pseudoPropsMap[property].respondTo];\n  } else if (pseudoPropsMap[property].dependentOn === null) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nvar simplifyProps = function simplifyProps(_ref2) {\n  var props = _ref2.props,\n      colormode = _ref2.colormode,\n      platform = _ref2.platform,\n      state = _ref2.state,\n      currentSpecificity = _ref2.currentSpecificity,\n      previouslyFlattenProps = _ref2.previouslyFlattenProps,\n      cascadePseudoProps = _ref2.cascadePseudoProps;\n  var flattenProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var specificityMap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var priority = arguments.length > 3 ? arguments[3] : undefined;\n\n  var mergePsuedoProps = function mergePsuedoProps(property, propertySpecity) {\n    if (compareSpecificity(specificityMap[property], propertySpecity, false)) {\n      if (true && props.debug) {\n        /* eslint-disable-next-line */\n        console.log(\"%c \".concat(property), 'color: #818cf8;', 'updated as internal prop with higher specificity');\n      }\n\n      specificityMap[property] = propertySpecity; // merging internal props (like, _text, _stack ...)\n\n      flattenProps[property] = merge({}, flattenProps[property], props[property]);\n    } else {\n      if (true && props.debug) {\n        /* eslint-disable-next-line */\n        console.log(\"%c \".concat(property), 'color: #818cf8;', 'updated as internal prop with lower specificity');\n      }\n\n      flattenProps[property] = merge({}, props[property], flattenProps[property]);\n    }\n  };\n\n  for (var property in props) {\n    var _pseudoPropsMap$prope; // NOTE: the order is important here. Keep in mind while specificity breakpoints.\n\n\n    var propertySpecity = currentSpecificity ? _objectSpread({}, currentSpecificity) : _objectSpread(_objectSpread({}, INITIAL_PROP_SPECIFICITY), {}, _defineProperty({}, SPECIFICITY_20, priority));\n\n    if ( // @ts-ignore\n    state[(_pseudoPropsMap$prope = pseudoPropsMap[property]) === null || _pseudoPropsMap$prope === void 0 ? void 0 : _pseudoPropsMap$prope.respondTo] || ['_dark', '_light', '_web', '_ios', '_android', '_important'].includes(property)) {\n      // @ts-ignore\n      if (shouldResolvePseudoProp({\n        property: property,\n        state: state,\n        platform: platform,\n        colormode: colormode\n      })) {\n        // NOTE: Handling (state driven) props like _important, _web, _ios, _android, _dark, _light, _disabled, _focus, _focusVisible, _hover, _pressed, _readOnly, _invalid, .... Only when they are true.\n        if (true && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(\"%c \".concat(property), 'color: #818cf8;', 'recursively resolving');\n        } // @ts-ignore\n\n\n        propertySpecity[pseudoPropsMap[property].priority]++;\n        simplifyProps({\n          props: props[property],\n          colormode: colormode,\n          platform: platform,\n          state: state,\n          currentSpecificity: propertySpecity,\n          previouslyFlattenProps: previouslyFlattenProps,\n          cascadePseudoProps: cascadePseudoProps\n        }, flattenProps, specificityMap, priority);\n      } // @ts-ignore\n\n    } else if (pseudoPropsMap[property] === undefined) {\n      if (property.startsWith('_')) {\n        // NOTE: Handling (internal) props like _text, _stack, ....\n        mergePsuedoProps(property, propertySpecity);\n      } else {\n        if (compareSpecificity(specificityMap[property], propertySpecity, false)) {\n          if (true && props.debug) {\n            /* eslint-disable-next-line */\n            console.log(\"%c \".concat(property), 'color: #818cf8;', 'updated as simple prop');\n          }\n\n          specificityMap[property] = propertySpecity; // replacing simple props (like, p, m, bg, color, ...)\n\n          flattenProps[property] = props[property];\n        } else {\n          if (true && props.debug) {\n            /* eslint-disable-next-line */\n            console.log(\"%c \".concat(property), 'color: #818cf8;', 'ignored');\n          }\n        }\n      }\n    } else {\n      // Can delete unused props\n      if (!cascadePseudoProps) {\n        delete flattenProps[property];\n\n        if (true && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(\"%c \".concat(property), 'color: #818cf8;', 'deleted');\n        }\n      } else {\n        if (true && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(\"%c \".concat(property), 'color: #818cf8;', 'cascaded');\n        }\n\n        mergePsuedoProps(property, propertySpecity);\n      }\n    }\n  }\n};\n\nexport var propsFlattener = function propsFlattener(_ref3, priority) {\n  var props = _ref3.props,\n      colormode = _ref3.colormode,\n      platform = _ref3.platform,\n      state = _ref3.state,\n      currentSpecificityMap = _ref3.currentSpecificityMap,\n      previouslyFlattenProps = _ref3.previouslyFlattenProps,\n      cascadePseudoProps = _ref3.cascadePseudoProps;\n  var flattenProps = {};\n\n  for (var property in props) {\n    var _pseudoPropsMap$prope2;\n\n    if ( // @ts-ignore\n    state[(_pseudoPropsMap$prope2 = pseudoPropsMap[property]) === null || _pseudoPropsMap$prope2 === void 0 ? void 0 : _pseudoPropsMap$prope2.respondTo] === undefined && property.startsWith('_')) {\n      flattenProps[property] = previouslyFlattenProps[property];\n    }\n  }\n\n  var specificityMap = currentSpecificityMap || {};\n  simplifyProps({\n    props: props,\n    colormode: colormode,\n    platform: platform,\n    state: state,\n    currentSpecificityMap: currentSpecificityMap,\n    previouslyFlattenProps: previouslyFlattenProps,\n    cascadePseudoProps: cascadePseudoProps\n  }, flattenProps, specificityMap, priority);\n  return [flattenProps, specificityMap];\n};\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/hooks/useThemeProps/propsFlattener.tsx"],"names":["SPECIFICITY_1000","SPECIFICITY_110","SPECIFICITY_100","SPECIFICITY_70","SPECIFICITY_60","SPECIFICITY_55","SPECIFICITY_50","SPECIFICITY_40","SPECIFICITY_30","SPECIFICITY_20","SPECIFICITY_10","specificityPrecedence","INITIAL_PROP_SPECIFICITY","pseudoPropsMap","_web","dependentOn","priority","_ios","_android","_light","_dark","_indeterminate","respondTo","_checked","_readOnly","_invalid","_focus","_focusVisible","_hover","_pressed","_disabled","_loading","_important","compareSpecificity","condition","ignorebaseTheme","index","exisiting","upcoming","shouldResolvePseudoProp","property","state","platform","colormode","simplifyProps","props","currentSpecificity","previouslyFlattenProps","cascadePseudoProps","flattenProps","specificityMap","mergePsuedoProps","console","merge","propertySpecity","propsFlattener","currentSpecificityMap"],"mappings":"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","sourcesContent":["import merge from 'lodash.merge';\n\nconst SPECIFICITY_1000 = 1000;\nconst SPECIFICITY_110 = 110;\nconst SPECIFICITY_100 = 100;\nconst SPECIFICITY_70 = 70;\nconst SPECIFICITY_60 = 60;\nconst SPECIFICITY_55 = 55;\nconst SPECIFICITY_50 = 50;\nconst SPECIFICITY_40 = 40;\nconst SPECIFICITY_30 = 30;\n// SPECIFICITY_20 is being user for defferentiating between User Props and Theme Props. So any specificity less than SPECIFICITY_20 will be ovridable by user props.\nconst SPECIFICITY_20 = 20;\nconst SPECIFICITY_10 = 10;\nconst specificityPrecedence = [\n  SPECIFICITY_1000,\n  SPECIFICITY_110,\n  SPECIFICITY_100,\n  SPECIFICITY_70,\n  SPECIFICITY_60,\n  SPECIFICITY_55,\n  SPECIFICITY_50,\n  SPECIFICITY_40,\n  SPECIFICITY_30,\n  SPECIFICITY_20,\n  SPECIFICITY_10,\n];\nconst INITIAL_PROP_SPECIFICITY = {\n  [SPECIFICITY_1000]: 0,\n  [SPECIFICITY_110]: 0,\n  [SPECIFICITY_100]: 0,\n  [SPECIFICITY_70]: 0,\n  [SPECIFICITY_60]: 0,\n  [SPECIFICITY_50]: 0,\n  [SPECIFICITY_55]: 0,\n  [SPECIFICITY_40]: 0,\n  [SPECIFICITY_30]: 0,\n  [SPECIFICITY_20]: 0,\n  [SPECIFICITY_10]: 0,\n};\n\nconst pseudoPropsMap = {\n  _web: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n  _ios: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n  _android: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n\n  _light: { dependentOn: 'colormode', priority: SPECIFICITY_10 },\n  _dark: { dependentOn: 'colormode', priority: SPECIFICITY_10 },\n\n  // TODO: have to add more interactionProps and stateProps\n  _indeterminate: {\n    dependentOn: 'state',\n    respondTo: 'isIndeterminate',\n    priority: SPECIFICITY_30,\n  },\n  _checked: {\n    dependentOn: 'state',\n    respondTo: 'isChecked',\n    priority: SPECIFICITY_30,\n  },\n  // Add new pseudeo props in between -------\n  _readOnly: {\n    dependentOn: 'state',\n    respondTo: 'isReadOnly',\n    priority: SPECIFICITY_30,\n  },\n  // Add new pseudeo props in between -------\n  _invalid: {\n    dependentOn: 'state',\n    respondTo: 'isInvalid',\n    priority: SPECIFICITY_40,\n  },\n  _focus: {\n    dependentOn: 'state',\n    respondTo: 'isFocused',\n    priority: SPECIFICITY_50,\n  },\n  _focusVisible: {\n    dependentOn: 'state',\n    respondTo: 'isFocusVisible',\n    priority: SPECIFICITY_55,\n  },\n  _hover: {\n    dependentOn: 'state',\n    respondTo: 'isHovered',\n    priority: SPECIFICITY_60,\n  },\n  _pressed: {\n    dependentOn: 'state',\n    respondTo: 'isPressed',\n    priority: SPECIFICITY_70,\n  },\n  _disabled: {\n    dependentOn: 'state',\n    respondTo: 'isDisabled',\n    priority: SPECIFICITY_100,\n  },\n  _loading: {\n    dependentOn: 'state',\n    respondTo: 'isLoading',\n    priority: SPECIFICITY_110,\n  },\n  _important: {\n    dependentOn: null,\n    priority: SPECIFICITY_1000,\n  },\n} as const;\n\ntype IPseudoPropsMap = typeof pseudoPropsMap;\ntype ExtractState<T extends IPseudoPropsMap> = {\n  // @ts-ignore\n  [P in keyof T as T[P]['respondTo']]?: boolean;\n};\nexport type IStateProps = ExtractState<IPseudoPropsMap>;\n\nexport const compareSpecificity = (\n  exisiting: any,\n  upcoming: any,\n  ignorebaseTheme?: boolean\n  // property?: any\n) => {\n  if (!exisiting) return true;\n  if (!upcoming) return false;\n  const condition = ignorebaseTheme\n    ? specificityPrecedence.length - 1\n    : specificityPrecedence.length;\n  for (let index = 0; index < condition; index++) {\n    if (\n      exisiting[specificityPrecedence[index]] >\n      upcoming[specificityPrecedence[index]]\n    ) {\n      return false;\n    } else if (\n      exisiting[specificityPrecedence[index]] <\n      upcoming[specificityPrecedence[index]]\n    ) {\n      return true;\n    }\n  }\n  return true;\n};\n\nconst shouldResolvePseudoProp = ({\n  property,\n  state,\n  platform,\n  colormode,\n}: {\n  property: keyof IPseudoPropsMap;\n  state: IStateProps;\n  platform: any;\n  colormode: any;\n}) => {\n  if (pseudoPropsMap[property].dependentOn === 'platform') {\n    return property === `_${platform}`;\n  } else if (pseudoPropsMap[property].dependentOn === 'colormode') {\n    return property === `_${colormode}`;\n  } else if (pseudoPropsMap[property].dependentOn === 'state') {\n    // @ts-ignore\n    return state[pseudoPropsMap[property].respondTo];\n  } else if (pseudoPropsMap[property].dependentOn === null) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst simplifyProps = (\n  {\n    props,\n    colormode,\n    platform,\n    state,\n    currentSpecificity,\n    previouslyFlattenProps,\n    cascadePseudoProps,\n  }: any,\n  flattenProps: any = {},\n  specificityMap: any = {},\n  priority: number\n) => {\n  const mergePsuedoProps = (property: string, propertySpecity: object) => {\n    if (compareSpecificity(specificityMap[property], propertySpecity, false)) {\n      if (process.env.NODE_ENV === 'development' && props.debug) {\n        /* eslint-disable-next-line */\n        console.log(\n          `%c ${property}`,\n          'color: #818cf8;',\n          'updated as internal prop with higher specificity'\n        );\n      }\n      specificityMap[property] = propertySpecity;\n      // merging internal props (like, _text, _stack ...)\n      flattenProps[property] = merge(\n        {},\n        flattenProps[property],\n        props[property]\n      );\n    } else {\n      if (process.env.NODE_ENV === 'development' && props.debug) {\n        /* eslint-disable-next-line */\n        console.log(\n          `%c ${property}`,\n          'color: #818cf8;',\n          'updated as internal prop with lower specificity'\n        );\n      }\n      flattenProps[property] = merge(\n        {},\n        props[property],\n        flattenProps[property]\n      );\n    }\n  };\n  for (const property in props) {\n    // NOTE: the order is important here. Keep in mind while specificity breakpoints.\n    const propertySpecity = currentSpecificity\n      ? { ...currentSpecificity }\n      : {\n          ...INITIAL_PROP_SPECIFICITY,\n          [SPECIFICITY_20]: priority,\n        };\n\n    if (\n      // @ts-ignore\n      state[pseudoPropsMap[property]?.respondTo] ||\n      ['_dark', '_light', '_web', '_ios', '_android', '_important'].includes(\n        property\n      )\n    ) {\n      // @ts-ignore\n      if (shouldResolvePseudoProp({ property, state, platform, colormode })) {\n        // NOTE: Handling (state driven) props like _important, _web, _ios, _android, _dark, _light, _disabled, _focus, _focusVisible, _hover, _pressed, _readOnly, _invalid, .... Only when they are true.\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(\n            `%c ${property}`,\n            'color: #818cf8;',\n            'recursively resolving'\n          );\n        }\n        // @ts-ignore\n        propertySpecity[pseudoPropsMap[property].priority]++;\n        simplifyProps(\n          {\n            props: props[property],\n            colormode,\n            platform,\n            state,\n            currentSpecificity: propertySpecity,\n            previouslyFlattenProps: previouslyFlattenProps,\n            cascadePseudoProps,\n          },\n          flattenProps,\n          specificityMap,\n          priority\n        );\n      }\n      // @ts-ignore\n    } else if (pseudoPropsMap[property] === undefined) {\n      if (property.startsWith('_')) {\n        // NOTE: Handling (internal) props like _text, _stack, ....\n        mergePsuedoProps(property, propertySpecity);\n      } else {\n        if (\n          compareSpecificity(specificityMap[property], propertySpecity, false)\n        ) {\n          if (process.env.NODE_ENV === 'development' && props.debug) {\n            /* eslint-disable-next-line */\n            console.log(\n              `%c ${property}`,\n              'color: #818cf8;',\n              'updated as simple prop'\n            );\n          }\n          specificityMap[property] = propertySpecity;\n          // replacing simple props (like, p, m, bg, color, ...)\n          flattenProps[property] = props[property];\n        } else {\n          if (process.env.NODE_ENV === 'development' && props.debug) {\n            /* eslint-disable-next-line */\n            console.log(`%c ${property}`, 'color: #818cf8;', 'ignored');\n          }\n        }\n      }\n    } else {\n      // Can delete unused props\n      if (!cascadePseudoProps) {\n        delete flattenProps[property];\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(`%c ${property}`, 'color: #818cf8;', 'deleted');\n        }\n      } else {\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(`%c ${property}`, 'color: #818cf8;', 'cascaded');\n        }\n        mergePsuedoProps(property, propertySpecity);\n      }\n    }\n  }\n};\n\nexport const propsFlattener = (\n  {\n    props,\n    colormode,\n    platform,\n    state,\n    currentSpecificityMap,\n    previouslyFlattenProps,\n    cascadePseudoProps,\n  }: any,\n  priority: number\n) => {\n  const flattenProps: any = {};\n\n  for (const property in props) {\n    if (\n      // @ts-ignore\n      state[pseudoPropsMap[property]?.respondTo] === undefined &&\n      property.startsWith('_')\n    ) {\n      flattenProps[property] = previouslyFlattenProps[property];\n    }\n  }\n\n  const specificityMap = currentSpecificityMap || {};\n\n  simplifyProps(\n    {\n      props,\n      colormode,\n      platform,\n      state,\n      currentSpecificityMap,\n      previouslyFlattenProps,\n      cascadePseudoProps,\n    },\n    flattenProps,\n    specificityMap,\n    priority\n  );\n\n  return [flattenProps, specificityMap];\n};\n"]},"metadata":{},"sourceType":"module"}