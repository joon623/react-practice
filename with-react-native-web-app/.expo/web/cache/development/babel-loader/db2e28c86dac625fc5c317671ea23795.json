{"ast":null,"code":"\"use strict\";\n\nvar _excluded = [\"fieldIndex\", \"defaultValue\"],\n    _excluded2 = [\"handleChange\", \"value\", \"setRefList\", \"defaultValue\", \"handleMultiValueChange\"];\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Input = require(\"../../primitives/Input\");\n\nvar _Context = require(\"./Context\");\n\nvar _reactNative = require(\"react-native-web/dist/cjs/index\");\n\nvar _utils = require(\"../../../utils\");\n\nvar _useHasResponsiveProps = require(\"../../../hooks/useHasResponsiveProps\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar PinInputFiled = function PinInputFiled(_ref, ref) {\n  var _ref$fieldIndex = _ref.fieldIndex,\n      fieldIndex = _ref$fieldIndex === void 0 ? 0 : _ref$fieldIndex,\n      pDefaultValue = _ref.defaultValue,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _react$default$useCon = _react[\"default\"].useContext(_Context.PinInputContext),\n      handleChange = _react$default$useCon.handleChange,\n      cValue = _react$default$useCon.value,\n      setRefList = _react$default$useCon.setRefList,\n      cDefaultValue = _react$default$useCon.defaultValue,\n      handleMultiValueChange = _react$default$useCon.handleMultiValueChange,\n      context = _objectWithoutProperties(_react$default$useCon, _excluded2);\n\n  cDefaultValue = cDefaultValue && cDefaultValue[fieldIndex];\n  var defaultValue = pDefaultValue || cDefaultValue;\n  var value = cValue && cValue[fieldIndex];\n\n  var keyPressHandler = function keyPressHandler(event) {\n    if (_reactNative.Platform.OS !== 'web') {\n      if (event.nativeEvent.key >= 0 && event.nativeEvent.key <= 9) {\n        handleChange && handleChange(event.nativeEvent.key, fieldIndex);\n      } else if (event.nativeEvent.key === 'Backspace') {\n        handleChange && handleChange('', fieldIndex);\n      }\n    }\n  };\n\n  var textChangeHandler = function textChangeHandler(value) {\n    // Also used to handle change for Android.\n    handleMultiValueChange && handleMultiValueChange(value, fieldIndex);\n  };\n\n  var myRef = _react[\"default\"].useRef(null);\n\n  _react[\"default\"].useEffect(function () {\n    setRefList && setRefList(myRef, fieldIndex);\n  }, [myRef, fieldIndex, setRefList]); //TODO: refactor for responsive prop\n\n\n  if ((0, _useHasResponsiveProps.useHasResponsiveProps)(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Input.Input //@ts-ignore\n  , _extends({\n    ref: (0, _utils.mergeRefs)([myRef, ref])\n  }, context, props, {\n    onKeyPress: function onKeyPress(event) {\n      return keyPressHandler(event);\n    },\n    onChangeText: function onChangeText(value) {\n      return textChangeHandler(value);\n    },\n    keyboardType: \"numeric\",\n    defaultValue: defaultValue,\n    value: value\n  }));\n};\n\nvar _default = /*#__PURE__*/_react[\"default\"].memo( /*#__PURE__*/_react[\"default\"].forwardRef(PinInputFiled));\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/commonjs/components/composites/PinInput/PinInputField.js"],"names":["Object","value","exports","_react","_interopRequireDefault","require","_Input","_Context","_utils","_useHasResponsiveProps","obj","default","_extends","i","arguments","source","target","PinInputFiled","fieldIndex","defaultValue","pDefaultValue","props","handleMultiValueChange","cDefaultValue","cValue","keyPressHandler","event","_reactNative","handleChange","textChangeHandler","myRef","setRefList","ref","onKeyPress","onChangeText","keyboardType","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Input = require(\"../../primitives/Input\");\n\nvar _Context = require(\"./Context\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _utils = require(\"../../../utils\");\n\nvar _useHasResponsiveProps = require(\"../../../hooks/useHasResponsiveProps\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nconst PinInputFiled = ({\n  fieldIndex = 0,\n  defaultValue: pDefaultValue,\n  ...props\n}, ref) => {\n  let {\n    handleChange,\n    value: cValue,\n    setRefList,\n    defaultValue: cDefaultValue,\n    handleMultiValueChange,\n    ...context\n  } = _react.default.useContext(_Context.PinInputContext);\n\n  cDefaultValue = cDefaultValue && cDefaultValue[fieldIndex];\n  let defaultValue = pDefaultValue || cDefaultValue;\n  let value = cValue && cValue[fieldIndex];\n\n  const keyPressHandler = event => {\n    if (_reactNative.Platform.OS !== 'web') {\n      if (event.nativeEvent.key >= 0 && event.nativeEvent.key <= 9) {\n        handleChange && handleChange(event.nativeEvent.key, fieldIndex);\n      } else if (event.nativeEvent.key === 'Backspace') {\n        handleChange && handleChange('', fieldIndex);\n      }\n    }\n  };\n\n  const textChangeHandler = value => {\n    // Also used to handle change for Android.\n    handleMultiValueChange && handleMultiValueChange(value, fieldIndex);\n  };\n\n  const myRef = _react.default.useRef(null);\n\n  _react.default.useEffect(() => {\n    setRefList && setRefList(myRef, fieldIndex);\n  }, [myRef, fieldIndex, setRefList]); //TODO: refactor for responsive prop\n\n\n  if ((0, _useHasResponsiveProps.useHasResponsiveProps)(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_react.default.createElement(_Input.Input //@ts-ignore\n  , _extends({\n    ref: (0, _utils.mergeRefs)([myRef, ref])\n  }, context, props, {\n    onKeyPress: event => keyPressHandler(event),\n    onChangeText: value => textChangeHandler(value),\n    keyboardType: \"numeric\",\n    defaultValue: defaultValue,\n    value: value\n  }));\n};\n\nvar _default = /*#__PURE__*/_react.default.memo( /*#__PURE__*/_react.default.forwardRef(PinInputFiled));\n\nexports.default = _default;\n//# sourceMappingURL=PinInputField.js.map"]},"metadata":{},"sourceType":"script"}