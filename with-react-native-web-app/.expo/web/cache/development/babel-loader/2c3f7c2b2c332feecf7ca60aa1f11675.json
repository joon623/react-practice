{"ast":null,"code":"var _s = $RefreshSig$();\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { useKeyboardDismissable, usePropsResolution, useToken } from '../../../hooks';\nimport React from 'react';\nimport Platform from \"react-native-web/dist/cjs/exports/Platform\";\nimport { Popper } from '../Popper';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nexport var PopoverContent = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s(function (props, ref) {\n  _s();\n\n  var _ref, _ref2, _props$bgColor;\n\n  var _React$useContext = React.useContext(PopoverContext),\n      onClose = _React$useContext.onClose,\n      initialFocusRef = _React$useContext.initialFocusRef,\n      finalFocusRef = _React$useContext.finalFocusRef,\n      popoverContentId = _React$useContext.popoverContentId,\n      headerMounted = _React$useContext.headerMounted,\n      bodyMounted = _React$useContext.bodyMounted,\n      bodyId = _React$useContext.bodyId,\n      headerId = _React$useContext.headerId,\n      isOpen = _React$useContext.isOpen;\n\n  var resolvedProps = usePropsResolution('PopoverContent', props);\n  var arrowDefaultColor = (_ref = (_ref2 = (_props$bgColor = props.bgColor) !== null && _props$bgColor !== void 0 ? _props$bgColor : props.bg) !== null && _ref2 !== void 0 ? _ref2 : props.backgroundColor) !== null && _ref !== void 0 ? _ref : resolvedProps.backgroundColor;\n  var color = useToken('colors', arrowDefaultColor);\n  React.useEffect(function () {\n    var finalFocusRefCurrentVal = finalFocusRef === null || finalFocusRef === void 0 ? void 0 : finalFocusRef.current;\n\n    if (initialFocusRef && initialFocusRef.current) {\n      initialFocusRef.current.focus();\n    }\n\n    return function () {\n      if (finalFocusRefCurrentVal) {\n        finalFocusRefCurrentVal.focus();\n      }\n    };\n  }, [finalFocusRef, initialFocusRef]);\n  useKeyboardDismissable({\n    enabled: true,\n    callback: onClose\n  });\n  var arrowElement = null;\n  var restChildren = [];\n  React.Children.forEach(props.children, function (child) {\n    if (child.type.displayName === 'PopperArrow') {\n      var _child$props$color;\n\n      arrowElement = /*#__PURE__*/React.cloneElement(child, {\n        backgroundColor: (_child$props$color = child.props.color) !== null && _child$props$color !== void 0 ? _child$props$color : color\n      });\n    } else {\n      restChildren.push(child);\n    }\n  });\n  var accessibilityProps = Platform.OS === 'web' ? {\n    'accessibilityRole': 'dialog',\n    'aria-labelledby': headerMounted ? headerId : undefined,\n    'aria-describedby': bodyMounted ? bodyId : undefined\n  } : {}; //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Popper.Content, _extends({\n    nativeID: popoverContentId\n  }, accessibilityProps, resolvedProps, {\n    ref: ref,\n    isOpen: isOpen\n  }), arrowElement, restChildren);\n}, \"XSanfUgwJLxrv9m+8NLkJ2pTJWc=\", false, function () {\n  return [usePropsResolution, useToken, useKeyboardDismissable, useHasResponsiveProps];\n})), \"XSanfUgwJLxrv9m+8NLkJ2pTJWc=\", false, function () {\n  return [usePropsResolution, useToken, useKeyboardDismissable, useHasResponsiveProps];\n});\n_c2 = PopoverContent;\nPopoverContent.displayName = 'PopoverContent';\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PopoverContent$React.forwardRef\");\n$RefreshReg$(_c2, \"PopoverContent\");\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/module/components/composites/Popover/PopoverContent.js"],"names":["_extends","Object","i","arguments","source","target","PopoverContent","onClose","initialFocusRef","finalFocusRef","popoverContentId","headerMounted","bodyMounted","bodyId","headerId","isOpen","React","resolvedProps","usePropsResolution","arrowDefaultColor","_ref","_ref2","_props$bgColor","props","color","useToken","finalFocusRefCurrentVal","useKeyboardDismissable","enabled","callback","arrowElement","restChildren","child","backgroundColor","_child$props$color","accessibilityProps","undefined","useHasResponsiveProps","Popper","nativeID","ref"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useKeyboardDismissable, usePropsResolution, useToken } from '../../../hooks';\nimport React from 'react';\nimport { Platform } from 'react-native';\nimport { Popper } from '../Popper';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nexport const PopoverContent = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _ref, _ref2, _props$bgColor;\n\n  const {\n    onClose,\n    initialFocusRef,\n    finalFocusRef,\n    popoverContentId,\n    headerMounted,\n    bodyMounted,\n    bodyId,\n    headerId,\n    isOpen\n  } = React.useContext(PopoverContext);\n  const resolvedProps = usePropsResolution('PopoverContent', props);\n  const arrowDefaultColor = (_ref = (_ref2 = (_props$bgColor = props.bgColor) !== null && _props$bgColor !== void 0 ? _props$bgColor : props.bg) !== null && _ref2 !== void 0 ? _ref2 : props.backgroundColor) !== null && _ref !== void 0 ? _ref : resolvedProps.backgroundColor;\n  const color = useToken('colors', arrowDefaultColor);\n  React.useEffect(() => {\n    const finalFocusRefCurrentVal = finalFocusRef === null || finalFocusRef === void 0 ? void 0 : finalFocusRef.current;\n\n    if (initialFocusRef && initialFocusRef.current) {\n      initialFocusRef.current.focus();\n    }\n\n    return () => {\n      if (finalFocusRefCurrentVal) {\n        finalFocusRefCurrentVal.focus();\n      }\n    };\n  }, [finalFocusRef, initialFocusRef]);\n  useKeyboardDismissable({\n    enabled: true,\n    callback: onClose\n  });\n  let arrowElement = null;\n  const restChildren = [];\n  React.Children.forEach(props.children, child => {\n    if (child.type.displayName === 'PopperArrow') {\n      var _child$props$color;\n\n      arrowElement = /*#__PURE__*/React.cloneElement(child, {\n        backgroundColor: (_child$props$color = child.props.color) !== null && _child$props$color !== void 0 ? _child$props$color : color\n      });\n    } else {\n      restChildren.push(child);\n    }\n  });\n  const accessibilityProps = Platform.OS === 'web' ? {\n    'accessibilityRole': 'dialog',\n    'aria-labelledby': headerMounted ? headerId : undefined,\n    'aria-describedby': bodyMounted ? bodyId : undefined\n  } : {}; //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Popper.Content, _extends({\n    nativeID: popoverContentId\n  }, accessibilityProps, resolvedProps, {\n    ref: ref,\n    isOpen: isOpen\n  }), arrowElement, restChildren);\n});\nPopoverContent.displayName = 'PopoverContent';\n//# sourceMappingURL=PopoverContent.js.map"]},"metadata":{},"sourceType":"module"}