{"ast":null,"code":"import _slicedToArray from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport get from 'lodash.get';\nimport merge from 'lodash.merge';\nimport isEmpty from 'lodash.isempty';\nimport Platform from \"react-native-web/dist/cjs/exports/Platform\";\nimport { useNativeBase } from '../useNativeBase';\nimport { useColorMode } from '../../core/color-mode';\nimport { omitUndefined, extractInObject } from '../../theme/tools';\nimport { useBreakpointResolvedProps } from '../useBreakpointResolvedProps';\nimport { propsFlattener, compareSpecificity } from './propsFlattener';\nimport { useResponsiveSSRProps } from '../useResponsiveSSRProps';\nimport React from 'react';\nimport { ResponsiveQueryContext } from '../../utils/useResponsiveQuery/ResponsiveQueryProvider';\nvar SPREAD_PROP_SPECIFICITY_ORDER = ['p', 'padding', 'px', 'py', 'pt', 'pb', 'pl', 'pr', 'paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'm', 'margin', 'mx', 'my', 'mt', 'mb', 'ml', 'mr', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nvar FINAL_SPREAD_PROPS = ['paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nvar MARGIN_MAP = {\n  mx: ['marginRight', 'marginLeft'],\n  my: ['marginTop', 'marginBottom'],\n  mt: ['marginTop'],\n  mb: ['marginBottom'],\n  mr: ['marginRight'],\n  ml: ['marginLeft']\n};\nMARGIN_MAP.margin = [].concat(_toConsumableArray(MARGIN_MAP.mx), _toConsumableArray(MARGIN_MAP.my));\nMARGIN_MAP.m = MARGIN_MAP.margin;\nMARGIN_MAP.marginTop = MARGIN_MAP.mt;\nMARGIN_MAP.marginBottom = MARGIN_MAP.mb;\nMARGIN_MAP.marginLeft = MARGIN_MAP.ml;\nMARGIN_MAP.marginRight = MARGIN_MAP.mr;\nvar PADDING_MAP = {\n  px: ['paddingRight', 'paddingLeft'],\n  py: ['paddingTop', 'paddingBottom'],\n  pt: ['paddingTop'],\n  pb: ['paddingBottom'],\n  pr: ['paddingRight'],\n  pl: ['paddingLeft']\n};\nPADDING_MAP.padding = [].concat(_toConsumableArray(PADDING_MAP.px), _toConsumableArray(PADDING_MAP.py));\nPADDING_MAP.p = PADDING_MAP.padding;\nPADDING_MAP.paddingTop = PADDING_MAP.pt;\nPADDING_MAP.paddingBottom = PADDING_MAP.pb;\nPADDING_MAP.paddingLeft = PADDING_MAP.pl;\nPADDING_MAP.paddingRight = PADDING_MAP.pr;\n\nvar SPREAD_PROP_SPECIFICITY_MAP = _objectSpread(_objectSpread({}, PADDING_MAP), MARGIN_MAP);\n\nfunction propsSpreader(incomingProps, incomingSpecifity) {\n  var flattenedDefaultProps = _objectSpread({}, incomingProps);\n\n  var specificity = {};\n  SPREAD_PROP_SPECIFICITY_ORDER.forEach(function (prop) {\n    if (prop in flattenedDefaultProps) {\n      var val = incomingProps[prop] || flattenedDefaultProps[prop];\n\n      if (!FINAL_SPREAD_PROPS.includes(prop)) {\n        delete flattenedDefaultProps[prop];\n        specificity[prop] = incomingSpecifity[prop];\n      }\n\n      SPREAD_PROP_SPECIFICITY_MAP[prop].forEach(function (newProp) {\n        if (compareSpecificity(specificity[newProp], specificity[prop])) {\n          specificity[newProp] = incomingSpecifity[prop];\n          flattenedDefaultProps[newProp] = val;\n        }\n      });\n    }\n  });\n  return merge({}, flattenedDefaultProps);\n}\n/**\n * @summary Combines provided porps with component's theme props and resloves them.\n * @arg {string} component - Name of the component.\n * @arg {object} incomingProps - Props passed by the user.\n * @arg {object} state - dependent states.\n * @arg {object} config - configuration for resolution. Accepts key like ignoreProps, resolveResponsively.\n * @returns {object} Resolved and flattened props.\n */\n\n\nexport function usePropsResolution(component, incomingProps, state, config) {\n  _s();\n\n  var _config$componentThem;\n\n  var _useNativeBase = useNativeBase(),\n      theme = _useNativeBase.theme;\n\n  var componentTheme = (_config$componentThem = config === null || config === void 0 ? void 0 : config.componentTheme) !== null && _config$componentThem !== void 0 ? _config$componentThem : get(theme, \"components.\".concat(component), {});\n\n  if (true && incomingProps.debug) {\n    /* eslint-disable-next-line */\n    console.log(\"%c\".concat(component), 'background: #d97706; color: #111; font-weight: 700; padding: 2px 8px;');\n    /* eslint-disable-next-line */\n\n    console.log(\"%cusePropsResolution\", 'background: #4b5563; color: #d97706; font-weight: 700; padding: 2px 8px;');\n    /* eslint-disable-next-line */\n\n    console.log('%c incomingProps: ', 'color: #4ade80; font-weight: 700;', incomingProps);\n    /* eslint-disable-next-line */\n\n    console.log('%c state: ', 'color: #4ade80; font-weight: 700;', state);\n    /* eslint-disable-next-line */\n\n    console.log('%c componentTheme: ', 'color: #4ade80; font-weight: 700;', componentTheme);\n  }\n\n  var resolvedProps = usePropsResolutionWithComponentTheme(componentTheme, incomingProps, state, config); // Not Resolve theme props and pseudo props\n\n  if (incomingProps !== null && incomingProps !== void 0 && incomingProps.INTERNAL_notResolveThemeAndPseudoProps) {\n    delete incomingProps.INTERNAL_notResolveThemeAndPseudoProps;\n    return incomingProps;\n  }\n\n  if (true && incomingProps.debug) {\n    /* eslint-disable-next-line */\n    console.log('%c resolvedProps: ', 'color: #22d3ee; font-weight: 700;', resolvedProps);\n  }\n\n  return resolvedProps;\n}\n\n_s(usePropsResolution, \"yadbs+yKaedpMDUtamJzmyhIvJU=\", false, function () {\n  return [useNativeBase, usePropsResolutionWithComponentTheme];\n});\n\nexport var usePropsResolutionWithComponentTheme = function usePropsResolutionWithComponentTheme(componentTheme, incomingProps, state, config) {\n  _s2();\n\n  var modifiedPropsForSSR = useResponsiveSSRProps(incomingProps);\n\n  var _extractInObject = extractInObject(modifiedPropsForSSR, ['children', 'onPress', 'icon', 'onOpen', 'onClose'].concat((config === null || config === void 0 ? void 0 : config.ignoreProps) || [])),\n      _extractInObject2 = _slicedToArray(_extractInObject, 2),\n      ignoredProps = _extractInObject2[0],\n      cleanIncomingProps = _extractInObject2[1];\n\n  var responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  var disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n  var resolveResponsively = ['colorScheme', 'size', 'variant'].concat(_toConsumableArray((config === null || config === void 0 ? void 0 : config.resolveResponsively) || []));\n\n  var _useNativeBase2 = useNativeBase(),\n      theme = _useNativeBase2.theme;\n\n  var colorModeProps = useColorMode();\n  var extendedTheme = [];\n\n  if (config !== null && config !== void 0 && config.extendTheme) {\n    config === null || config === void 0 ? void 0 : config.extendTheme.map(function (componentName) {\n      extendedTheme.push(get(theme, \"components.\".concat(componentName), {}));\n    });\n  }\n\n  if (!isEmpty(componentTheme)) extendedTheme.push(componentTheme);\n\n  var resolveComponentTheme = function resolveComponentTheme(themeType, providedTheme) {\n    try {\n      if (themeType[1]) {\n        return typeof providedTheme[themeType[0]][themeType[1]] !== 'function' ? providedTheme[themeType[0]][themeType[1]] : providedTheme[themeType[0]][themeType[1]](_objectSpread(_objectSpread({\n          theme: theme\n        }, incomingWithDefaultProps), colorModeProps));\n      } else {\n        return typeof providedTheme[themeType[0]] !== 'function' ? providedTheme[themeType[0]] : providedTheme[themeType[0]](_objectSpread(_objectSpread({\n          theme: theme\n        }, incomingWithDefaultProps), colorModeProps));\n      }\n    } catch (_unused) {\n      return {};\n    }\n  };\n\n  var callPropsFlattener = function callPropsFlattener() {\n    var targetProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var latestSpecifictyMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var specificity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    return propsFlattener({\n      props: true && cleanIncomingProps.debug ? _objectSpread(_objectSpread({}, targetProps), {}, {\n        debug: true\n      }) : targetProps,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: latestSpecifictyMap,\n      previouslyFlattenProps: flattenProps || {},\n      cascadePseudoProps: config === null || config === void 0 ? void 0 : config.cascadePseudoProps\n    }, specificity);\n  }; // STEP 1: combine default props and incoming props\n\n\n  var incomingWithDefaultProps = merge({}, componentTheme.defaultProps || {}, cleanIncomingProps); // STEP 1.5: resolving component theme\n\n  var combinedBaseStyle = {};\n  var combinedVariantStyle = {};\n  var combinedSizeStyle = {};\n  extendedTheme.map(function (extededComponentTheme) {\n    if (extededComponentTheme.baseStyle) {\n      combinedBaseStyle = _objectSpread(_objectSpread({}, combinedBaseStyle), resolveComponentTheme(['baseStyle'], extededComponentTheme));\n    }\n\n    if (incomingWithDefaultProps.variant) {\n      if (extededComponentTheme.variants) {\n        combinedVariantStyle = _objectSpread(_objectSpread({}, combinedVariantStyle), resolveComponentTheme(['variants', incomingWithDefaultProps.variant], extededComponentTheme));\n      }\n    }\n\n    if (incomingWithDefaultProps.size && extededComponentTheme !== null && extededComponentTheme !== void 0 && extededComponentTheme.sizes && extededComponentTheme !== null && extededComponentTheme !== void 0 && extededComponentTheme.sizes[incomingWithDefaultProps.size]) {\n      if (typeof extededComponentTheme.sizes[incomingWithDefaultProps.size] === 'string' || typeof extededComponentTheme.sizes[incomingWithDefaultProps.size] === 'number') {\n        incomingWithDefaultProps.size = extededComponentTheme.sizes[incomingWithDefaultProps.size];\n      } else {\n        combinedSizeStyle = _objectSpread(_objectSpread({}, combinedSizeStyle), resolveComponentTheme(['sizes', incomingWithDefaultProps.size], extededComponentTheme));\n        incomingWithDefaultProps.size = undefined;\n      }\n    }\n  }); // STEP 2: flatten them\n\n  if (true && cleanIncomingProps.debug) {\n    /* eslint-disable-next-line */\n    console.log(\"%cFlattening incoming and Default\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n  } //TODO: hack\n\n\n  var flattenProps, specificityMap;\n\n  var _callPropsFlattener = callPropsFlattener(incomingWithDefaultProps, {}, 2);\n\n  var _callPropsFlattener2 = _slicedToArray(_callPropsFlattener, 2);\n\n  flattenProps = _callPropsFlattener2[0];\n  specificityMap = _callPropsFlattener2[1];\n  var responsiveProps = {};\n\n  if (disableCSSMediaQueries) {\n    // STEP 2.5: resolving responsive props\n    resolveResponsively.map(function (propsName) {\n      if (flattenProps[propsName]) {\n        // @ts-ignore\n        responsiveProps[propsName] = flattenProps[propsName];\n      }\n    });\n  }\n\n  if (resolveResponsively.includes('direction')) {\n    var propName = 'direction';\n\n    if (flattenProps[propName]) {\n      // @ts-ignore\n      responsiveProps[propName] = flattenProps[propName];\n    }\n  }\n\n  var responsivelyResolvedProps = useBreakpointResolvedProps(responsiveProps);\n  flattenProps = _objectSpread(_objectSpread({}, flattenProps), responsivelyResolvedProps); // STEP 3: Pass it to baseStyle, then variant and then size and resolve them.\n  // NOTE: Resoloving baseStyle\n\n  var flattenBaseStyle, baseSpecificityMap;\n\n  if (combinedBaseStyle) {\n    if (true && cleanIncomingProps.debug) {\n      /* eslint-disable-next-line */\n      console.log(\"%cFlattening baseStyle\", 'background: #4b5563; color: #eee; font-weight: 700; padding: 2px 8px;');\n    }\n\n    var _callPropsFlattener3 = callPropsFlattener(combinedBaseStyle, specificityMap);\n\n    var _callPropsFlattener4 = _slicedToArray(_callPropsFlattener3, 2);\n\n    flattenBaseStyle = _callPropsFlattener4[0];\n    baseSpecificityMap = _callPropsFlattener4[1];\n  } // NOTE: Resolving variants\n\n\n  var flattenVariantStyle, variantSpecificityMap; // Extracting props from variant\n\n  if (combinedVariantStyle) {\n    if (true && cleanIncomingProps.debug) {\n      /* eslint-disable-next-line */\n      console.log(\"%cFlattening variantStyle\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n    }\n\n    var _callPropsFlattener5 = callPropsFlattener(combinedVariantStyle, baseSpecificityMap || specificityMap);\n\n    var _callPropsFlattener6 = _slicedToArray(_callPropsFlattener5, 2);\n\n    flattenVariantStyle = _callPropsFlattener6[0];\n    variantSpecificityMap = _callPropsFlattener6[1]; // We remove variant from original props if we found it in the componentTheme\n    //@ts-ignore\n\n    flattenProps.variant = undefined;\n  } // NOTE: Resolving size\n\n\n  var flattenSizeStyle, sizeSpecificityMap; // Extracting props from size\n\n  if (combinedSizeStyle) {\n    if (true && cleanIncomingProps.debug) {\n      /* eslint-disable-next-line */\n      console.log(\"%cFlattening sizeStyle\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n    }\n\n    var _callPropsFlattener7 = callPropsFlattener(combinedSizeStyle, variantSpecificityMap || baseSpecificityMap || specificityMap);\n\n    var _callPropsFlattener8 = _slicedToArray(_callPropsFlattener7, 2);\n\n    flattenSizeStyle = _callPropsFlattener8[0];\n    sizeSpecificityMap = _callPropsFlattener8[1];\n  } // STEP 4: merge\n\n\n  var defaultStyles = merge({}, flattenBaseStyle, flattenVariantStyle, flattenSizeStyle);\n  /*Resolve all the internal used Pseudo Props*/\n\n  var resolvePseudoProps = function resolvePseudoProps(flatPseudoProp, baseStylePseudoProp)\n  /** Props coming from Pseudo inside defaultStyles(baseStyle) */\n  {\n    for (var prop in flatPseudoProp) {\n      baseStylePseudoProp[prop] = flatPseudoProp[prop];\n      /* Replace all the similar prop from from internal props */\n    }\n\n    return baseStylePseudoProp;\n  };\n\n  for (var prop in defaultStyles) {\n    if (prop.startsWith('_') && flattenProps.hasOwnProperty(prop)) {\n      /*Resolve all the internal used Pseudo Props*/\n      defaultStyles[prop] = resolvePseudoProps(flattenProps[prop], defaultStyles[prop]);\n    }\n\n    delete flattenProps[prop];\n  }\n\n  var defaultSpecificity = merge({}, specificityMap, baseSpecificityMap, variantSpecificityMap, sizeSpecificityMap);\n  flattenProps = propsSpreader(_objectSpread(_objectSpread({}, defaultStyles), flattenProps), defaultSpecificity);\n  var resolvedProps = omitUndefined(_objectSpread(_objectSpread({}, flattenProps), ignoredProps)); // STEP 5: Return\n\n  return resolvedProps;\n};\n\n_s2(usePropsResolutionWithComponentTheme, \"Xv1AfzQPmTI63iz2XbAvdxzCwsU=\", false, function () {\n  return [useResponsiveSSRProps, useNativeBase, useColorMode, useBreakpointResolvedProps];\n});\n\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/module/hooks/useThemeProps/usePropsResolution.js"],"names":["SPREAD_PROP_SPECIFICITY_ORDER","FINAL_SPREAD_PROPS","MARGIN_MAP","mx","my","mt","mb","mr","ml","PADDING_MAP","px","py","pt","pb","pr","pl","SPREAD_PROP_SPECIFICITY_MAP","flattenedDefaultProps","specificity","prop","val","incomingProps","incomingSpecifity","compareSpecificity","merge","usePropsResolution","theme","useNativeBase","componentTheme","_config$componentThem","config","get","console","resolvedProps","usePropsResolutionWithComponentTheme","modifiedPropsForSSR","useResponsiveSSRProps","ignoredProps","cleanIncomingProps","extractInObject","responsiveQueryContext","React","disableCSSMediaQueries","resolveResponsively","colorModeProps","useColorMode","extendedTheme","isEmpty","resolveComponentTheme","themeType","providedTheme","callPropsFlattener","targetProps","latestSpecifictyMap","propsFlattener","props","debug","platform","Platform","colormode","state","currentSpecificityMap","previouslyFlattenProps","flattenProps","cascadePseudoProps","incomingWithDefaultProps","combinedBaseStyle","combinedVariantStyle","combinedSizeStyle","extededComponentTheme","specificityMap","responsiveProps","propName","responsivelyResolvedProps","useBreakpointResolvedProps","flattenBaseStyle","baseSpecificityMap","flattenVariantStyle","variantSpecificityMap","flattenSizeStyle","sizeSpecificityMap","defaultStyles","resolvePseudoProps","baseStylePseudoProp","flatPseudoProp","defaultSpecificity","propsSpreader","omitUndefined"],"mappings":"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","sourcesContent":["import get from 'lodash.get';\nimport merge from 'lodash.merge';\nimport isEmpty from 'lodash.isempty';\nimport { Platform } from 'react-native';\nimport { useNativeBase } from '../useNativeBase';\nimport { useColorMode } from '../../core/color-mode';\nimport { omitUndefined, extractInObject } from '../../theme/tools';\nimport { useBreakpointResolvedProps } from '../useBreakpointResolvedProps';\nimport { propsFlattener, compareSpecificity } from './propsFlattener';\nimport { useResponsiveSSRProps } from '../useResponsiveSSRProps';\nimport React from 'react';\nimport { ResponsiveQueryContext } from '../../utils/useResponsiveQuery/ResponsiveQueryProvider';\nconst SPREAD_PROP_SPECIFICITY_ORDER = ['p', 'padding', 'px', 'py', 'pt', 'pb', 'pl', 'pr', 'paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'm', 'margin', 'mx', 'my', 'mt', 'mb', 'ml', 'mr', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nconst FINAL_SPREAD_PROPS = ['paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nconst MARGIN_MAP = {\n  mx: ['marginRight', 'marginLeft'],\n  my: ['marginTop', 'marginBottom'],\n  mt: ['marginTop'],\n  mb: ['marginBottom'],\n  mr: ['marginRight'],\n  ml: ['marginLeft']\n};\nMARGIN_MAP.margin = [...MARGIN_MAP.mx, ...MARGIN_MAP.my];\nMARGIN_MAP.m = MARGIN_MAP.margin;\nMARGIN_MAP.marginTop = MARGIN_MAP.mt;\nMARGIN_MAP.marginBottom = MARGIN_MAP.mb;\nMARGIN_MAP.marginLeft = MARGIN_MAP.ml;\nMARGIN_MAP.marginRight = MARGIN_MAP.mr;\nconst PADDING_MAP = {\n  px: ['paddingRight', 'paddingLeft'],\n  py: ['paddingTop', 'paddingBottom'],\n  pt: ['paddingTop'],\n  pb: ['paddingBottom'],\n  pr: ['paddingRight'],\n  pl: ['paddingLeft']\n};\nPADDING_MAP.padding = [...PADDING_MAP.px, ...PADDING_MAP.py];\nPADDING_MAP.p = PADDING_MAP.padding;\nPADDING_MAP.paddingTop = PADDING_MAP.pt;\nPADDING_MAP.paddingBottom = PADDING_MAP.pb;\nPADDING_MAP.paddingLeft = PADDING_MAP.pl;\nPADDING_MAP.paddingRight = PADDING_MAP.pr;\nconst SPREAD_PROP_SPECIFICITY_MAP = { ...PADDING_MAP,\n  ...MARGIN_MAP\n};\n\nfunction propsSpreader(incomingProps, incomingSpecifity) {\n  const flattenedDefaultProps = { ...incomingProps\n  };\n  const specificity = {};\n  SPREAD_PROP_SPECIFICITY_ORDER.forEach(prop => {\n    if (prop in flattenedDefaultProps) {\n      const val = incomingProps[prop] || flattenedDefaultProps[prop];\n\n      if (!FINAL_SPREAD_PROPS.includes(prop)) {\n        delete flattenedDefaultProps[prop];\n        specificity[prop] = incomingSpecifity[prop];\n      }\n\n      SPREAD_PROP_SPECIFICITY_MAP[prop].forEach(newProp => {\n        if (compareSpecificity(specificity[newProp], specificity[prop])) {\n          specificity[newProp] = incomingSpecifity[prop];\n          flattenedDefaultProps[newProp] = val;\n        }\n      });\n    }\n  });\n  return merge({}, flattenedDefaultProps);\n}\n/**\n * @summary Combines provided porps with component's theme props and resloves them.\n * @arg {string} component - Name of the component.\n * @arg {object} incomingProps - Props passed by the user.\n * @arg {object} state - dependent states.\n * @arg {object} config - configuration for resolution. Accepts key like ignoreProps, resolveResponsively.\n * @returns {object} Resolved and flattened props.\n */\n\n\nexport function usePropsResolution(component, incomingProps, state, config) {\n  var _config$componentThem;\n\n  const {\n    theme\n  } = useNativeBase();\n  const componentTheme = (_config$componentThem = config === null || config === void 0 ? void 0 : config.componentTheme) !== null && _config$componentThem !== void 0 ? _config$componentThem : get(theme, \"components.\".concat(component), {});\n\n  if (process.env.NODE_ENV === 'development' && incomingProps.debug) {\n    /* eslint-disable-next-line */\n    console.log(\"%c\".concat(component), 'background: #d97706; color: #111; font-weight: 700; padding: 2px 8px;');\n    /* eslint-disable-next-line */\n\n    console.log(\"%cusePropsResolution\", 'background: #4b5563; color: #d97706; font-weight: 700; padding: 2px 8px;');\n    /* eslint-disable-next-line */\n\n    console.log('%c incomingProps: ', 'color: #4ade80; font-weight: 700;', incomingProps);\n    /* eslint-disable-next-line */\n\n    console.log('%c state: ', 'color: #4ade80; font-weight: 700;', state);\n    /* eslint-disable-next-line */\n\n    console.log('%c componentTheme: ', 'color: #4ade80; font-weight: 700;', componentTheme);\n  }\n\n  const resolvedProps = usePropsResolutionWithComponentTheme(componentTheme, incomingProps, state, config); // Not Resolve theme props and pseudo props\n\n  if (incomingProps !== null && incomingProps !== void 0 && incomingProps.INTERNAL_notResolveThemeAndPseudoProps) {\n    delete incomingProps.INTERNAL_notResolveThemeAndPseudoProps;\n    return incomingProps;\n  }\n\n  if (process.env.NODE_ENV === 'development' && incomingProps.debug) {\n    /* eslint-disable-next-line */\n    console.log('%c resolvedProps: ', 'color: #22d3ee; font-weight: 700;', resolvedProps);\n  }\n\n  return resolvedProps;\n}\nexport const usePropsResolutionWithComponentTheme = (componentTheme, incomingProps, state, config) => {\n  const modifiedPropsForSSR = useResponsiveSSRProps(incomingProps);\n  const [ignoredProps, cleanIncomingProps] = extractInObject(modifiedPropsForSSR, ['children', 'onPress', 'icon', 'onOpen', 'onClose'].concat((config === null || config === void 0 ? void 0 : config.ignoreProps) || []));\n  const responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  const disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n  const resolveResponsively = ['colorScheme', 'size', 'variant', ...((config === null || config === void 0 ? void 0 : config.resolveResponsively) || [])];\n  const {\n    theme\n  } = useNativeBase();\n  const colorModeProps = useColorMode();\n  const extendedTheme = [];\n\n  if (config !== null && config !== void 0 && config.extendTheme) {\n    config === null || config === void 0 ? void 0 : config.extendTheme.map(componentName => {\n      extendedTheme.push(get(theme, \"components.\".concat(componentName), {}));\n    });\n  }\n\n  if (!isEmpty(componentTheme)) extendedTheme.push(componentTheme);\n\n  const resolveComponentTheme = (themeType, providedTheme) => {\n    try {\n      if (themeType[1]) {\n        return typeof providedTheme[themeType[0]][themeType[1]] !== 'function' ? providedTheme[themeType[0]][themeType[1]] : providedTheme[themeType[0]][themeType[1]]({\n          theme,\n          ...incomingWithDefaultProps,\n          ...colorModeProps\n        });\n      } else {\n        return typeof providedTheme[themeType[0]] !== 'function' ? providedTheme[themeType[0]] : providedTheme[themeType[0]]({\n          theme,\n          ...incomingWithDefaultProps,\n          ...colorModeProps\n        });\n      }\n    } catch {\n      return {};\n    }\n  };\n\n  const callPropsFlattener = (targetProps = {}, latestSpecifictyMap = {}, specificity = 1) => {\n    return propsFlattener({\n      props: process.env.NODE_ENV === 'development' && cleanIncomingProps.debug ? { ...targetProps,\n        debug: true\n      } : targetProps,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: latestSpecifictyMap,\n      previouslyFlattenProps: flattenProps || {},\n      cascadePseudoProps: config === null || config === void 0 ? void 0 : config.cascadePseudoProps\n    }, specificity);\n  }; // STEP 1: combine default props and incoming props\n\n\n  const incomingWithDefaultProps = merge({}, componentTheme.defaultProps || {}, cleanIncomingProps); // STEP 1.5: resolving component theme\n\n  let combinedBaseStyle = {};\n  let combinedVariantStyle = {};\n  let combinedSizeStyle = {};\n  extendedTheme.map(extededComponentTheme => {\n    if (extededComponentTheme.baseStyle) {\n      combinedBaseStyle = { ...combinedBaseStyle,\n        ...resolveComponentTheme(['baseStyle'], extededComponentTheme)\n      };\n    }\n\n    if (incomingWithDefaultProps.variant) {\n      if (extededComponentTheme.variants) {\n        combinedVariantStyle = { ...combinedVariantStyle,\n          ...resolveComponentTheme(['variants', incomingWithDefaultProps.variant], extededComponentTheme)\n        };\n      }\n    }\n\n    if (incomingWithDefaultProps.size && extededComponentTheme !== null && extededComponentTheme !== void 0 && extededComponentTheme.sizes && extededComponentTheme !== null && extededComponentTheme !== void 0 && extededComponentTheme.sizes[incomingWithDefaultProps.size]) {\n      if (typeof extededComponentTheme.sizes[incomingWithDefaultProps.size] === 'string' || typeof extededComponentTheme.sizes[incomingWithDefaultProps.size] === 'number') {\n        incomingWithDefaultProps.size = extededComponentTheme.sizes[incomingWithDefaultProps.size];\n      } else {\n        combinedSizeStyle = { ...combinedSizeStyle,\n          ...resolveComponentTheme(['sizes', incomingWithDefaultProps.size], extededComponentTheme)\n        };\n        incomingWithDefaultProps.size = undefined;\n      }\n    }\n  }); // STEP 2: flatten them\n\n  if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n    /* eslint-disable-next-line */\n    console.log(\"%cFlattening incoming and Default\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n  } //TODO: hack\n\n\n  let flattenProps, specificityMap;\n  [flattenProps, specificityMap] = callPropsFlattener(incomingWithDefaultProps, {}, 2);\n  const responsiveProps = {};\n\n  if (disableCSSMediaQueries) {\n    // STEP 2.5: resolving responsive props\n    resolveResponsively.map(propsName => {\n      if (flattenProps[propsName]) {\n        // @ts-ignore\n        responsiveProps[propsName] = flattenProps[propsName];\n      }\n    });\n  }\n\n  if (resolveResponsively.includes('direction')) {\n    const propName = 'direction';\n\n    if (flattenProps[propName]) {\n      // @ts-ignore\n      responsiveProps[propName] = flattenProps[propName];\n    }\n  }\n\n  const responsivelyResolvedProps = useBreakpointResolvedProps(responsiveProps);\n  flattenProps = { ...flattenProps,\n    ...responsivelyResolvedProps\n  }; // STEP 3: Pass it to baseStyle, then variant and then size and resolve them.\n  // NOTE: Resoloving baseStyle\n\n  let flattenBaseStyle, baseSpecificityMap;\n\n  if (combinedBaseStyle) {\n    if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n      /* eslint-disable-next-line */\n      console.log(\"%cFlattening baseStyle\", 'background: #4b5563; color: #eee; font-weight: 700; padding: 2px 8px;');\n    }\n\n    [flattenBaseStyle, baseSpecificityMap] = callPropsFlattener(combinedBaseStyle, specificityMap);\n  } // NOTE: Resolving variants\n\n\n  let flattenVariantStyle, variantSpecificityMap; // Extracting props from variant\n\n  if (combinedVariantStyle) {\n    if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n      /* eslint-disable-next-line */\n      console.log(\"%cFlattening variantStyle\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n    }\n\n    [flattenVariantStyle, variantSpecificityMap] = callPropsFlattener(combinedVariantStyle, baseSpecificityMap || specificityMap); // We remove variant from original props if we found it in the componentTheme\n    //@ts-ignore\n\n    flattenProps.variant = undefined;\n  } // NOTE: Resolving size\n\n\n  let flattenSizeStyle, sizeSpecificityMap; // Extracting props from size\n\n  if (combinedSizeStyle) {\n    if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n      /* eslint-disable-next-line */\n      console.log(\"%cFlattening sizeStyle\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n    }\n\n    [flattenSizeStyle, sizeSpecificityMap] = callPropsFlattener(combinedSizeStyle, variantSpecificityMap || baseSpecificityMap || specificityMap);\n  } // STEP 4: merge\n\n\n  const defaultStyles = merge({}, flattenBaseStyle, flattenVariantStyle, flattenSizeStyle);\n  /*Resolve all the internal used Pseudo Props*/\n\n  const resolvePseudoProps = (flatPseudoProp, baseStylePseudoProp) =>\n  /** Props coming from Pseudo inside defaultStyles(baseStyle) */\n  {\n    for (const prop in flatPseudoProp) {\n      baseStylePseudoProp[prop] = flatPseudoProp[prop];\n      /* Replace all the similar prop from from internal props */\n    }\n\n    return baseStylePseudoProp;\n  };\n\n  for (const prop in defaultStyles) {\n    if (prop.startsWith('_') && flattenProps.hasOwnProperty(prop)) {\n      /*Resolve all the internal used Pseudo Props*/\n      defaultStyles[prop] = resolvePseudoProps(flattenProps[prop], defaultStyles[prop]);\n    }\n\n    delete flattenProps[prop];\n  }\n\n  const defaultSpecificity = merge({}, specificityMap, baseSpecificityMap, variantSpecificityMap, sizeSpecificityMap);\n  flattenProps = propsSpreader({ ...defaultStyles,\n    ...flattenProps\n  }, defaultSpecificity);\n  const resolvedProps = omitUndefined({ ...flattenProps,\n    ...ignoredProps\n  }); // STEP 5: Return\n\n  return resolvedProps;\n};\n//# sourceMappingURL=usePropsResolution.js.map"]},"metadata":{},"sourceType":"module"}