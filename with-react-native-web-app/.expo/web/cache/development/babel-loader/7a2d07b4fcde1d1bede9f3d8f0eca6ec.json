{"ast":null,"code":"var _excluded = [\"_web\", \"_ios\", \"_android\"];\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport merge from 'lodash.merge';\nimport Platform from \"react-native-web/dist/cjs/exports/Platform\";\nexport var usePlatformProps = function usePlatformProps(props) {\n  var _web = props._web,\n      _ios = props._ios,\n      _android = props._android,\n      remainingProps = _objectWithoutProperties(props, _excluded);\n\n  var platformProps = function platformProps() {\n    switch (Platform.OS) {\n      case 'web':\n        return _web;\n\n      case 'ios':\n        return _ios;\n\n      case 'android':\n        return _android;\n\n      default:\n        return {};\n    }\n  };\n\n  return merge(remainingProps, platformProps());\n};","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/hooks/usePlatformProps.ts"],"names":["usePlatformProps","props","_android","platformProps","Platform","merge"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,cAAA;;AAGA,OAAO,IAAMA,gBAAgB,GAAIC,SAApBD,gBAAoBC,CAAAA,KAAD,EAAgB;EAC9C,IAAM,IAAN,GAAA,KAAA,CAAM,IAAN;EAAA,IAAM,IAAN,GAAA,KAAA,CAAM,IAAN;EAAA,IAAoBC,QAApB,GAAA,KAAA,CAAoBA,QAApB;EAAA,IAAA,cAAA,GAAA,wBAAA,CAAA,KAAA,EAAA,SAAA,CAAA;;EACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;IAC1B,QAAQC,QAAQ,CAAhB,EAAA;MACE,KAAA,KAAA;QACE,OAAA,IAAA;;MACF,KAAA,KAAA;QACE,OAAA,IAAA;;MACF,KAAA,SAAA;QACE,OAAA,QAAA;;MACF;QACE,OAAA,EAAA;IARJ;EADF,CAAA;;EAYA,OAAOC,KAAK,CAAA,cAAA,EAAiBF,aAA7B,EAAY,CAAZ;AAdK,CAAA","sourcesContent":["import merge from 'lodash.merge';\nimport { Platform } from 'react-native';\n\nexport const usePlatformProps = (props: any) => {\n  const { _web, _ios, _android, ...remainingProps } = props;\n  const platformProps = () => {\n    switch (Platform.OS) {\n      case 'web':\n        return _web;\n      case 'ios':\n        return _ios;\n      case 'android':\n        return _android;\n      default:\n        return {};\n    }\n  };\n  return merge(remainingProps, platformProps());\n};\n"]},"metadata":{},"sourceType":"module"}