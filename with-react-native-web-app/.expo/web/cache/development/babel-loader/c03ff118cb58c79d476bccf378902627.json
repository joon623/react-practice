{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mode = mode;\nexports.randomColor = randomColor;\nexports.isLight = exports.isDark = exports.tone = exports.getColor = exports.transparentize = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\n\nvar _lodash2 = _interopRequireDefault(require(\"lodash.isempty\"));\n\nvar _tinycolor = _interopRequireDefault(require(\"tinycolor2\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction mode(light, dark) {\n  return function (props) {\n    return props.colorMode === 'dark' ? dark : light;\n  };\n}\n\nvar transparentize = function transparentize(color, opacity) {\n  return function (theme) {\n    var raw = getColor(theme, color);\n    return (0, _tinycolor[\"default\"])(raw).setAlpha(opacity).toRgbString();\n  };\n};\n\nexports.transparentize = transparentize;\n\nvar getColor = function getColor(theme, color, fallback) {\n  var hex = (0, _lodash[\"default\"])(theme, \"colors.\".concat(color), color);\n  var isValid = (0, _tinycolor[\"default\"])(hex).isValid();\n  return isValid ? hex : fallback;\n};\n\nexports.getColor = getColor;\n\nvar tone = function tone(color) {\n  return function (theme) {\n    var hex = getColor(theme, color);\n    var isDark = (0, _tinycolor[\"default\"])(hex).isDark();\n    return isDark ? 'dark' : 'light';\n  };\n};\n\nexports.tone = tone;\n\nvar isDark = function isDark(color) {\n  return function (theme) {\n    return tone(color)(theme) === 'dark';\n  };\n};\n\nexports.isDark = isDark;\n\nvar isLight = function isLight(color) {\n  return function (theme) {\n    return tone(color)(theme) === 'light';\n  };\n};\n\nexports.isLight = isLight;\n\nfunction randomColor(opts) {\n  var fallback = _tinycolor[\"default\"].random().toHexString();\n\n  if (!opts || (0, _lodash2[\"default\"])(opts)) {\n    return fallback;\n  }\n\n  if (opts.string && opts.colors) {\n    return randomColorFromList(opts.string, opts.colors);\n  }\n\n  if (opts.string && !opts.colors) {\n    return randomColorFromString(opts.string);\n  }\n\n  if (opts.colors && !opts.string) {\n    return randomFromList(opts.colors);\n  }\n\n  return fallback;\n}\n\nfunction randomFromList(list) {\n  return list[Math.floor(Math.random() * list.length)];\n}\n\nfunction randomColorFromList(str, list) {\n  var index = 0;\n  if (str.length === 0) return list[0];\n\n  for (var i = 0; i < str.length; i++) {\n    index = str.charCodeAt(i) + ((index << 5) - index);\n    index = index & index;\n  }\n\n  index = (index % list.length + list.length) % list.length;\n  return list[index];\n}\n\nfunction randomColorFromString(str) {\n  var hash = 0;\n  if (str.length === 0) return hash.toString();\n\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n\n  var color = '#';\n\n  for (var j = 0; j < 3; j++) {\n    var value = hash >> j * 8 & 255;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n\n  return color;\n}","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/commonjs/theme/tools/colors.js"],"names":["Object","value","exports","_lodash","_interopRequireDefault","require","_lodash2","_tinycolor","obj","default","props","transparentize","theme","raw","getColor","hex","isValid","tone","color","isDark","isLight","fallback","opts","randomColorFromList","randomColorFromString","randomFromList","list","Math","index","str","i","hash","j"],"mappings":"AAAA;;AAEAA,MAAM,CAANA,cAAAA,CAAAA,OAAAA,EAAAA,YAAAA,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7CD;AAGAE,OAAO,CAAPA,IAAAA,GAAAA,IAAAA;AACAA,OAAO,CAAPA,WAAAA,GAAAA,WAAAA;AACAA,OAAO,CAAPA,OAAAA,GAAkBA,OAAO,CAAPA,MAAAA,GAAiBA,OAAO,CAAPA,IAAAA,GAAeA,OAAO,CAAPA,QAAAA,GAAmBA,OAAO,CAAPA,cAAAA,GAAyB,KAA9FA,CAAAA;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAA5C,YAA4C,CAAR,CAApC;;AAEA,IAAIC,QAAQ,GAAGF,sBAAsB,CAACC,OAAO,CAA7C,gBAA6C,CAAR,CAArC;;AAEA,IAAIE,UAAU,GAAGH,sBAAsB,CAACC,OAAO,CAA/C,YAA+C,CAAR,CAAvC;;AAEA,SAAA,sBAAA,CAAA,GAAA,EAAqC;EAAE,OAAOG,GAAG,IAAIA,GAAG,CAAVA,UAAAA,GAAAA,GAAAA,GAA8B;IAAEC,WAASD;EAAX,CAArC;AAAwD;;AAE/F,SAAA,IAAA,CAAA,KAAA,EAAA,IAAA,EAA2B;EACzB,OAAOE,UAAAA,KAAK;IAAA,OAAIA,KAAK,CAALA,SAAAA,KAAAA,MAAAA,GAAAA,IAAAA,GAAhB,KAAY;EAAA,CAAZ;AACD;;AAED,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAA,KAAA,EAAA,OAAA;EAAA,OAAoBC,UAAAA,KAAK,EAAI;IAClD,IAAMC,GAAG,GAAGC,QAAQ,CAAA,KAAA,EAApB,KAAoB,CAApB;IACA,OAAO,CAAC,GAAGP,UAAJ,WAAA,EAAA,GAAA,EAAA,QAAA,CAAA,OAAA,EAAP,WAAO,EAAP;EAFF,CAAuB;AAAA,CAAvB;;AAKAL,OAAO,CAAPA,cAAAA,GAAAA,cAAAA;;AAEA,IAAMY,QAAQ,GAAG,SAAXA,QAAW,CAAA,KAAA,EAAA,KAAA,EAAA,QAAA,EAA4B;EAC3C,IAAMC,GAAG,GAAG,CAAC,GAAGZ,OAAJ,WAAA,EAAA,KAAA,EAA4B,UAAA,MAAA,CAA5B,KAA4B,CAA5B,EAAZ,KAAY,CAAZ;EACA,IAAMa,OAAO,GAAG,CAAC,GAAGT,UAAJ,WAAA,EAAA,GAAA,EAAhB,OAAgB,EAAhB;EACA,OAAOS,OAAO,GAAA,GAAA,GAAd,QAAA;AAHF,CAAA;;AAMAd,OAAO,CAAPA,QAAAA,GAAAA,QAAAA;;AAEA,IAAMe,IAAI,GAAGC,SAAPD,IAAOC,CAAAA,KAAK;EAAA,OAAIN,UAAAA,KAAK,EAAI;IAC7B,IAAMG,GAAG,GAAGD,QAAQ,CAAA,KAAA,EAApB,KAAoB,CAApB;IACA,IAAMK,MAAM,GAAG,CAAC,GAAGZ,UAAJ,WAAA,EAAA,GAAA,EAAf,MAAe,EAAf;IACA,OAAOY,MAAM,GAAA,MAAA,GAAb,OAAA;EAHF,CAAkB;AAAA,CAAlB;;AAMAjB,OAAO,CAAPA,IAAAA,GAAAA,IAAAA;;AAEA,IAAMiB,MAAM,GAAGD,SAATC,MAASD,CAAAA,KAAK;EAAA,OAAIN,UAAAA,KAAK;IAAA,OAAIK,IAAI,CAAJA,KAAI,CAAJA,CAAAA,KAAAA,MAAjC,MAA6B;EAAA,CAAT;AAAA,CAApB;;AAEAf,OAAO,CAAPA,MAAAA,GAAAA,MAAAA;;AAEA,IAAMkB,OAAO,GAAGF,SAAVE,OAAUF,CAAAA,KAAK;EAAA,OAAIN,UAAAA,KAAK;IAAA,OAAIK,IAAI,CAAJA,KAAI,CAAJA,CAAAA,KAAAA,MAAlC,OAA8B;EAAA,CAAT;AAAA,CAArB;;AAEAf,OAAO,CAAPA,OAAAA,GAAAA,OAAAA;;AAEA,SAAA,WAAA,CAAA,IAAA,EAA2B;EACzB,IAAMmB,QAAQ,GAAGd,UAAAA,WAAAA,CAAAA,MAAAA,GAAjB,WAAiBA,EAAjB;;EAEA,IAAI,CAAA,IAAA,IAAS,CAAC,GAAGD,QAAJ,WAAA,EAAb,IAAa,CAAb,EAA0C;IACxC,OAAA,QAAA;EACD;;EAED,IAAIgB,IAAI,CAAJA,MAAAA,IAAeA,IAAI,CAAvB,MAAA,EAAgC;IAC9B,OAAOC,mBAAmB,CAACD,IAAI,CAAL,MAAA,EAAcA,IAAI,CAA5C,MAA0B,CAA1B;EACD;;EAED,IAAIA,IAAI,CAAJA,MAAAA,IAAe,CAACA,IAAI,CAAxB,MAAA,EAAiC;IAC/B,OAAOE,qBAAqB,CAACF,IAAI,CAAjC,MAA4B,CAA5B;EACD;;EAED,IAAIA,IAAI,CAAJA,MAAAA,IAAe,CAACA,IAAI,CAAxB,MAAA,EAAiC;IAC/B,OAAOG,cAAc,CAACH,IAAI,CAA1B,MAAqB,CAArB;EACD;;EAED,OAAA,QAAA;AACD;;AAED,SAAA,cAAA,CAAA,IAAA,EAA8B;EAC5B,OAAOI,IAAI,CAACC,IAAI,CAAJA,KAAAA,CAAWA,IAAI,CAAJA,MAAAA,KAAgBD,IAAI,CAA3C,MAAYC,CAAD,CAAX;AACD;;AAED,SAAA,mBAAA,CAAA,GAAA,EAAA,IAAA,EAAwC;EACtC,IAAIC,KAAK,GAAT,CAAA;EACA,IAAIC,GAAG,CAAHA,MAAAA,KAAJ,CAAA,EAAsB,OAAOH,IAAI,CAAX,CAAW,CAAX;;EAEtB,KAAK,IAAII,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGD,GAAG,CAAvB,MAAA,EAAgCC,CAAhC,EAAA,EAAqC;IACnCF,KAAK,GAAGC,GAAG,CAAHA,UAAAA,CAAAA,CAAAA,KAAqB,CAACD,KAAK,IAAN,CAAA,IAA7BA,KAAQC,CAARD;IACAA,KAAK,GAAGA,KAAK,GAAbA,KAAAA;EACD;;EAEDA,KAAK,GAAG,CAACA,KAAK,GAAGF,IAAI,CAAZE,MAAAA,GAAsBF,IAAI,CAA3B,MAAA,IAAsCA,IAAI,CAAlDE,MAAAA;EACA,OAAOF,IAAI,CAAX,KAAW,CAAX;AACD;;AAED,SAAA,qBAAA,CAAA,GAAA,EAAoC;EAClC,IAAIK,IAAI,GAAR,CAAA;EACA,IAAIF,GAAG,CAAHA,MAAAA,KAAJ,CAAA,EAAsB,OAAOE,IAAI,CAAX,QAAOA,EAAP;;EAEtB,KAAK,IAAID,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGD,GAAG,CAAvB,MAAA,EAAgCC,CAAhC,EAAA,EAAqC;IACnCC,IAAI,GAAGF,GAAG,CAAHA,UAAAA,CAAAA,CAAAA,KAAqB,CAACE,IAAI,IAAL,CAAA,IAA5BA,IAAOF,CAAPE;IACAA,IAAI,GAAGA,IAAI,GAAXA,IAAAA;EACD;;EAED,IAAIb,KAAK,GAAT,GAAA;;EAEA,KAAK,IAAIc,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAjB,CAAA,EAAuBA,CAAvB,EAAA,EAA4B;IAC1B,IAAM/B,KAAK,GAAG8B,IAAI,IAAIC,CAAC,GAATD,CAAAA,GAAd,GAAA;IACAb,KAAK,IAAI,CAAC,OAAOjB,KAAK,CAALA,QAAAA,CAAR,EAAQA,CAAR,EAAA,MAAA,CAAmC,CAA5CiB,CAAS,CAATA;EACD;;EAED,OAAA,KAAA;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mode = mode;\nexports.randomColor = randomColor;\nexports.isLight = exports.isDark = exports.tone = exports.getColor = exports.transparentize = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\n\nvar _lodash2 = _interopRequireDefault(require(\"lodash.isempty\"));\n\nvar _tinycolor = _interopRequireDefault(require(\"tinycolor2\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction mode(light, dark) {\n  return props => props.colorMode === 'dark' ? dark : light;\n}\n\nconst transparentize = (color, opacity) => theme => {\n  const raw = getColor(theme, color);\n  return (0, _tinycolor.default)(raw).setAlpha(opacity).toRgbString();\n};\n\nexports.transparentize = transparentize;\n\nconst getColor = (theme, color, fallback) => {\n  const hex = (0, _lodash.default)(theme, \"colors.\".concat(color), color);\n  const isValid = (0, _tinycolor.default)(hex).isValid();\n  return isValid ? hex : fallback;\n};\n\nexports.getColor = getColor;\n\nconst tone = color => theme => {\n  const hex = getColor(theme, color);\n  const isDark = (0, _tinycolor.default)(hex).isDark();\n  return isDark ? 'dark' : 'light';\n};\n\nexports.tone = tone;\n\nconst isDark = color => theme => tone(color)(theme) === 'dark';\n\nexports.isDark = isDark;\n\nconst isLight = color => theme => tone(color)(theme) === 'light';\n\nexports.isLight = isLight;\n\nfunction randomColor(opts) {\n  const fallback = _tinycolor.default.random().toHexString();\n\n  if (!opts || (0, _lodash2.default)(opts)) {\n    return fallback;\n  }\n\n  if (opts.string && opts.colors) {\n    return randomColorFromList(opts.string, opts.colors);\n  }\n\n  if (opts.string && !opts.colors) {\n    return randomColorFromString(opts.string);\n  }\n\n  if (opts.colors && !opts.string) {\n    return randomFromList(opts.colors);\n  }\n\n  return fallback;\n}\n\nfunction randomFromList(list) {\n  return list[Math.floor(Math.random() * list.length)];\n}\n\nfunction randomColorFromList(str, list) {\n  let index = 0;\n  if (str.length === 0) return list[0];\n\n  for (let i = 0; i < str.length; i++) {\n    index = str.charCodeAt(i) + ((index << 5) - index);\n    index = index & index;\n  }\n\n  index = (index % list.length + list.length) % list.length;\n  return list[index];\n}\n\nfunction randomColorFromString(str) {\n  let hash = 0;\n  if (str.length === 0) return hash.toString();\n\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n\n  let color = '#';\n\n  for (let j = 0; j < 3; j++) {\n    const value = hash >> j * 8 & 255;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n\n  return color;\n}\n//# sourceMappingURL=colors.js.map"]},"metadata":{},"sourceType":"script"}