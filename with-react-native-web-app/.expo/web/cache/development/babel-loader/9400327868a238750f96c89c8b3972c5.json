{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _bezier2 = _interopRequireDefault(require(\"./bezier\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar _ease;\n/**\n * The `Easing` module implements common easing functions. This module is used\n * by [Animate.timing()](docs/animate.html#timing) to convey physically\n * believable motion in animations.\n *\n * You can find a visualization of some common easing functions at\n * http://easings.net/\n *\n * ### Predefined animations\n *\n * The `Easing` module provides several predefined animations through the\n * following methods:\n *\n * - [`back`](docs/easing.html#back) provides a simple animation where the\n *   object goes slightly back before moving forward\n * - [`bounce`](docs/easing.html#bounce) provides a bouncing animation\n * - [`ease`](docs/easing.html#ease) provides a simple inertial animation\n * - [`elastic`](docs/easing.html#elastic) provides a simple spring interaction\n *\n * ### Standard functions\n *\n * Three standard easing functions are provided:\n *\n * - [`linear`](docs/easing.html#linear)\n * - [`quad`](docs/easing.html#quad)\n * - [`cubic`](docs/easing.html#cubic)\n *\n * The [`poly`](docs/easing.html#poly) function can be used to implement\n * quartic, quintic, and other higher power functions.\n *\n * ### Additional functions\n *\n * Additional mathematical functions are provided by the following methods:\n *\n * - [`bezier`](docs/easing.html#bezier) provides a cubic bezier curve\n * - [`circle`](docs/easing.html#circle) provides a circular function\n * - [`sin`](docs/easing.html#sin) provides a sinusoidal function\n * - [`exp`](docs/easing.html#exp) provides an exponential function\n *\n * The following helpers are used to modify other easing functions.\n *\n * - [`in`](docs/easing.html#in) runs an easing function forwards\n * - [`inOut`](docs/easing.html#inout) makes any easing function symmetrical\n * - [`out`](docs/easing.html#out) runs an easing function backwards\n */\n\n\nvar Easing = /*#__PURE__*/function () {\n  function Easing() {}\n  /**\n   * A stepping function, returns 1 for any positive value of `n`.\n   */\n\n\n  Easing.step0 = function step0(n) {\n    return n > 0 ? 1 : 0;\n  }\n  /**\n   * A stepping function, returns 1 if `n` is greater than or equal to 1.\n   */\n  ;\n\n  Easing.step1 = function step1(n) {\n    return n >= 1 ? 1 : 0;\n  }\n  /**\n   * A linear function, `f(t) = t`. Position correlates to elapsed time one to\n   * one.\n   *\n   * http://cubic-bezier.com/#0,0,1,1\n   */\n  ;\n\n  Easing.linear = function linear(t) {\n    return t;\n  }\n  /**\n   * A simple inertial interaction, similar to an object slowly accelerating to\n   * speed.\n   *\n   * http://cubic-bezier.com/#.42,0,1,1\n   */\n  ;\n\n  Easing.ease = function ease(t) {\n    if (!_ease) {\n      _ease = Easing.bezier(0.42, 0, 1, 1);\n    }\n\n    return _ease(t);\n  }\n  /**\n   * A quadratic function, `f(t) = t * t`. Position equals the square of elapsed\n   * time.\n   *\n   * http://easings.net/#easeInQuad\n   */\n  ;\n\n  Easing.quad = function quad(t) {\n    return t * t;\n  }\n  /**\n   * A cubic function, `f(t) = t * t * t`. Position equals the cube of elapsed\n   * time.\n   *\n   * http://easings.net/#easeInCubic\n   */\n  ;\n\n  Easing.cubic = function cubic(t) {\n    return t * t * t;\n  }\n  /**\n   * A power function. Position is equal to the Nth power of elapsed time.\n   *\n   * n = 4: http://easings.net/#easeInQuart\n   * n = 5: http://easings.net/#easeInQuint\n   */\n  ;\n\n  Easing.poly = function poly(n) {\n    return function (t) {\n      return Math.pow(t, n);\n    };\n  }\n  /**\n   * A sinusoidal function.\n   *\n   * http://easings.net/#easeInSine\n   */\n  ;\n\n  Easing.sin = function sin(t) {\n    return 1 - Math.cos(t * Math.PI / 2);\n  }\n  /**\n   * A circular function.\n   *\n   * http://easings.net/#easeInCirc\n   */\n  ;\n\n  Easing.circle = function circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  /**\n   * An exponential function.\n   *\n   * http://easings.net/#easeInExpo\n   */\n  ;\n\n  Easing.exp = function exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  /**\n   * A simple elastic interaction, similar to a spring oscillating back and\n   * forth.\n   *\n   * Default bounciness is 1, which overshoots a little bit once. 0 bounciness\n   * doesn't overshoot at all, and bounciness of N > 1 will overshoot about N\n   * times.\n   *\n   * http://easings.net/#easeInElastic\n   */\n  ;\n\n  Easing.elastic = function elastic(bounciness) {\n    if (bounciness === void 0) {\n      bounciness = 1;\n    }\n\n    var p = bounciness * Math.PI;\n    return function (t) {\n      return 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);\n    };\n  }\n  /**\n   * Use with `Animated.parallel()` to create a simple effect where the object\n   * animates back slightly as the animation starts.\n   *\n   * Wolfram Plot:\n   *\n   * - http://tiny.cc/back_default (s = 1.70158, default)\n   */\n  ;\n\n  Easing.back = function back(s) {\n    if (s === void 0) {\n      s = 1.70158;\n    }\n\n    return function (t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  /**\n   * Provides a simple bouncing effect.\n   *\n   * http://easings.net/#easeInBounce\n   */\n  ;\n\n  Easing.bounce = function bounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      var _t = t - 1.5 / 2.75;\n\n      return 7.5625 * _t * _t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      var _t2 = t - 2.25 / 2.75;\n\n      return 7.5625 * _t2 * _t2 + 0.9375;\n    }\n\n    var t2 = t - 2.625 / 2.75;\n    return 7.5625 * t2 * t2 + 0.984375;\n  }\n  /**\n   * Provides a cubic bezier curve, equivalent to CSS Transitions'\n   * `transition-timing-function`.\n   *\n   * A useful tool to visualize cubic bezier curves can be found at\n   * http://cubic-bezier.com/\n   */\n  ;\n\n  Easing.bezier = function bezier(x1, y1, x2, y2) {\n    return (0, _bezier2[\"default\"])(x1, y1, x2, y2);\n  }\n  /**\n   * Runs an easing function forwards.\n   */\n  ;\n\n  Easing[\"in\"] = function _in(easing) {\n    return easing;\n  }\n  /**\n   * Runs an easing function backwards.\n   */\n  ;\n\n  Easing.out = function out(easing) {\n    return function (t) {\n      return 1 - easing(1 - t);\n    };\n  }\n  /**\n   * Makes any easing function symmetrical. The easing function will run\n   * forwards for half of the duration, then backwards for the rest of the\n   * duration.\n   */\n  ;\n\n  Easing.inOut = function inOut(easing) {\n    return function (t) {\n      if (t < 0.5) {\n        return easing(t * 2) / 2;\n      }\n\n      return 1 - easing((1 - t) * 2) / 2;\n    };\n  };\n\n  return Easing;\n}();\n\nvar _default = Easing;\nexports[\"default\"] = _default;\nmodule.exports = exports[\"default\"];\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/cjs/vendor/react-native/Animated/Easing.js"],"names":["exports","_bezier2","_interopRequireDefault","require","obj","Easing","n","_ease","t","Math","bounciness","p","s","_t","_t2","t2","easing","_default","module"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _bezier2 = _interopRequireDefault(require(\"./bezier\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _ease;\n/**\n * The `Easing` module implements common easing functions. This module is used\n * by [Animate.timing()](docs/animate.html#timing) to convey physically\n * believable motion in animations.\n *\n * You can find a visualization of some common easing functions at\n * http://easings.net/\n *\n * ### Predefined animations\n *\n * The `Easing` module provides several predefined animations through the\n * following methods:\n *\n * - [`back`](docs/easing.html#back) provides a simple animation where the\n *   object goes slightly back before moving forward\n * - [`bounce`](docs/easing.html#bounce) provides a bouncing animation\n * - [`ease`](docs/easing.html#ease) provides a simple inertial animation\n * - [`elastic`](docs/easing.html#elastic) provides a simple spring interaction\n *\n * ### Standard functions\n *\n * Three standard easing functions are provided:\n *\n * - [`linear`](docs/easing.html#linear)\n * - [`quad`](docs/easing.html#quad)\n * - [`cubic`](docs/easing.html#cubic)\n *\n * The [`poly`](docs/easing.html#poly) function can be used to implement\n * quartic, quintic, and other higher power functions.\n *\n * ### Additional functions\n *\n * Additional mathematical functions are provided by the following methods:\n *\n * - [`bezier`](docs/easing.html#bezier) provides a cubic bezier curve\n * - [`circle`](docs/easing.html#circle) provides a circular function\n * - [`sin`](docs/easing.html#sin) provides a sinusoidal function\n * - [`exp`](docs/easing.html#exp) provides an exponential function\n *\n * The following helpers are used to modify other easing functions.\n *\n * - [`in`](docs/easing.html#in) runs an easing function forwards\n * - [`inOut`](docs/easing.html#inout) makes any easing function symmetrical\n * - [`out`](docs/easing.html#out) runs an easing function backwards\n */\n\n\nvar Easing =\n/*#__PURE__*/\nfunction () {\n  function Easing() {}\n\n  /**\n   * A stepping function, returns 1 for any positive value of `n`.\n   */\n  Easing.step0 = function step0(n) {\n    return n > 0 ? 1 : 0;\n  }\n  /**\n   * A stepping function, returns 1 if `n` is greater than or equal to 1.\n   */\n  ;\n\n  Easing.step1 = function step1(n) {\n    return n >= 1 ? 1 : 0;\n  }\n  /**\n   * A linear function, `f(t) = t`. Position correlates to elapsed time one to\n   * one.\n   *\n   * http://cubic-bezier.com/#0,0,1,1\n   */\n  ;\n\n  Easing.linear = function linear(t) {\n    return t;\n  }\n  /**\n   * A simple inertial interaction, similar to an object slowly accelerating to\n   * speed.\n   *\n   * http://cubic-bezier.com/#.42,0,1,1\n   */\n  ;\n\n  Easing.ease = function ease(t) {\n    if (!_ease) {\n      _ease = Easing.bezier(0.42, 0, 1, 1);\n    }\n\n    return _ease(t);\n  }\n  /**\n   * A quadratic function, `f(t) = t * t`. Position equals the square of elapsed\n   * time.\n   *\n   * http://easings.net/#easeInQuad\n   */\n  ;\n\n  Easing.quad = function quad(t) {\n    return t * t;\n  }\n  /**\n   * A cubic function, `f(t) = t * t * t`. Position equals the cube of elapsed\n   * time.\n   *\n   * http://easings.net/#easeInCubic\n   */\n  ;\n\n  Easing.cubic = function cubic(t) {\n    return t * t * t;\n  }\n  /**\n   * A power function. Position is equal to the Nth power of elapsed time.\n   *\n   * n = 4: http://easings.net/#easeInQuart\n   * n = 5: http://easings.net/#easeInQuint\n   */\n  ;\n\n  Easing.poly = function poly(n) {\n    return function (t) {\n      return Math.pow(t, n);\n    };\n  }\n  /**\n   * A sinusoidal function.\n   *\n   * http://easings.net/#easeInSine\n   */\n  ;\n\n  Easing.sin = function sin(t) {\n    return 1 - Math.cos(t * Math.PI / 2);\n  }\n  /**\n   * A circular function.\n   *\n   * http://easings.net/#easeInCirc\n   */\n  ;\n\n  Easing.circle = function circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  /**\n   * An exponential function.\n   *\n   * http://easings.net/#easeInExpo\n   */\n  ;\n\n  Easing.exp = function exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  /**\n   * A simple elastic interaction, similar to a spring oscillating back and\n   * forth.\n   *\n   * Default bounciness is 1, which overshoots a little bit once. 0 bounciness\n   * doesn't overshoot at all, and bounciness of N > 1 will overshoot about N\n   * times.\n   *\n   * http://easings.net/#easeInElastic\n   */\n  ;\n\n  Easing.elastic = function elastic(bounciness) {\n    if (bounciness === void 0) {\n      bounciness = 1;\n    }\n\n    var p = bounciness * Math.PI;\n    return function (t) {\n      return 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);\n    };\n  }\n  /**\n   * Use with `Animated.parallel()` to create a simple effect where the object\n   * animates back slightly as the animation starts.\n   *\n   * Wolfram Plot:\n   *\n   * - http://tiny.cc/back_default (s = 1.70158, default)\n   */\n  ;\n\n  Easing.back = function back(s) {\n    if (s === void 0) {\n      s = 1.70158;\n    }\n\n    return function (t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  /**\n   * Provides a simple bouncing effect.\n   *\n   * http://easings.net/#easeInBounce\n   */\n  ;\n\n  Easing.bounce = function bounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      var _t = t - 1.5 / 2.75;\n\n      return 7.5625 * _t * _t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      var _t2 = t - 2.25 / 2.75;\n\n      return 7.5625 * _t2 * _t2 + 0.9375;\n    }\n\n    var t2 = t - 2.625 / 2.75;\n    return 7.5625 * t2 * t2 + 0.984375;\n  }\n  /**\n   * Provides a cubic bezier curve, equivalent to CSS Transitions'\n   * `transition-timing-function`.\n   *\n   * A useful tool to visualize cubic bezier curves can be found at\n   * http://cubic-bezier.com/\n   */\n  ;\n\n  Easing.bezier = function bezier(x1, y1, x2, y2) {\n    return (0, _bezier2.default)(x1, y1, x2, y2);\n  }\n  /**\n   * Runs an easing function forwards.\n   */\n  ;\n\n  Easing.in = function _in(easing) {\n    return easing;\n  }\n  /**\n   * Runs an easing function backwards.\n   */\n  ;\n\n  Easing.out = function out(easing) {\n    return function (t) {\n      return 1 - easing(1 - t);\n    };\n  }\n  /**\n   * Makes any easing function symmetrical. The easing function will run\n   * forwards for half of the duration, then backwards for the rest of the\n   * duration.\n   */\n  ;\n\n  Easing.inOut = function inOut(easing) {\n    return function (t) {\n      if (t < 0.5) {\n        return easing(t * 2) / 2;\n      }\n\n      return 1 - easing((1 - t) * 2) / 2;\n    };\n  };\n\n  return Easing;\n}();\n\nvar _default = Easing;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"module"}