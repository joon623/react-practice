{"ast":null,"code":"import get from 'lodash.get';\nimport isEmpty from 'lodash.isempty';\nimport Color from 'tinycolor2';\nexport function mode(light, dark) {\n  return function (props) {\n    return props.colorMode === 'dark' ? dark : light;\n  };\n}\nexport var transparentize = function transparentize(color, opacity) {\n  return function (theme) {\n    var raw = getColor(theme, color);\n    return Color(raw).setAlpha(opacity).toRgbString();\n  };\n};\nexport var getColor = function getColor(theme, color, fallback) {\n  var hex = get(theme, \"colors.\".concat(color), color);\n  var isValid = Color(hex).isValid();\n  return isValid ? hex : fallback;\n};\nexport var tone = function tone(color) {\n  return function (theme) {\n    var hex = getColor(theme, color);\n    var isDark = Color(hex).isDark();\n    return isDark ? 'dark' : 'light';\n  };\n};\nexport var isDark = function isDark(color) {\n  return function (theme) {\n    return tone(color)(theme) === 'dark';\n  };\n};\nexport var isLight = function isLight(color) {\n  return function (theme) {\n    return tone(color)(theme) === 'light';\n  };\n};\nexport function randomColor(opts) {\n  var fallback = Color.random().toHexString();\n\n  if (!opts || isEmpty(opts)) {\n    return fallback;\n  }\n\n  if (opts.string && opts.colors) {\n    return randomColorFromList(opts.string, opts.colors);\n  }\n\n  if (opts.string && !opts.colors) {\n    return randomColorFromString(opts.string);\n  }\n\n  if (opts.colors && !opts.string) {\n    return randomFromList(opts.colors);\n  }\n\n  return fallback;\n}\n\nfunction randomFromList(list) {\n  return list[Math.floor(Math.random() * list.length)];\n}\n\nfunction randomColorFromList(str, list) {\n  var index = 0;\n  if (str.length === 0) return list[0];\n\n  for (var i = 0; i < str.length; i++) {\n    index = str.charCodeAt(i) + ((index << 5) - index);\n    index = index & index;\n  }\n\n  index = (index % list.length + list.length) % list.length;\n  return list[index];\n}\n\nfunction randomColorFromString(str) {\n  var hash = 0;\n  if (str.length === 0) return hash.toString();\n\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n\n  var color = '#';\n\n  for (var j = 0; j < 3; j++) {\n    var value = hash >> j * 8 & 255;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n\n  return color;\n}\n\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/module/theme/v33x-theme/tools/colors.js"],"names":["props","transparentize","raw","getColor","Color","hex","get","isValid","tone","isDark","isLight","fallback","isEmpty","opts","randomColorFromList","randomColorFromString","randomFromList","list","Math","index","str","i","hash","color","j","value"],"mappings":"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","sourcesContent":["import get from 'lodash.get';\nimport isEmpty from 'lodash.isempty';\nimport Color from 'tinycolor2';\nexport function mode(light, dark) {\n  return props => props.colorMode === 'dark' ? dark : light;\n}\nexport const transparentize = (color, opacity) => theme => {\n  const raw = getColor(theme, color);\n  return Color(raw).setAlpha(opacity).toRgbString();\n};\nexport const getColor = (theme, color, fallback) => {\n  const hex = get(theme, \"colors.\".concat(color), color);\n  const isValid = Color(hex).isValid();\n  return isValid ? hex : fallback;\n};\nexport const tone = color => theme => {\n  const hex = getColor(theme, color);\n  const isDark = Color(hex).isDark();\n  return isDark ? 'dark' : 'light';\n};\nexport const isDark = color => theme => tone(color)(theme) === 'dark';\nexport const isLight = color => theme => tone(color)(theme) === 'light';\nexport function randomColor(opts) {\n  const fallback = Color.random().toHexString();\n\n  if (!opts || isEmpty(opts)) {\n    return fallback;\n  }\n\n  if (opts.string && opts.colors) {\n    return randomColorFromList(opts.string, opts.colors);\n  }\n\n  if (opts.string && !opts.colors) {\n    return randomColorFromString(opts.string);\n  }\n\n  if (opts.colors && !opts.string) {\n    return randomFromList(opts.colors);\n  }\n\n  return fallback;\n}\n\nfunction randomFromList(list) {\n  return list[Math.floor(Math.random() * list.length)];\n}\n\nfunction randomColorFromList(str, list) {\n  let index = 0;\n  if (str.length === 0) return list[0];\n\n  for (let i = 0; i < str.length; i++) {\n    index = str.charCodeAt(i) + ((index << 5) - index);\n    index = index & index;\n  }\n\n  index = (index % list.length + list.length) % list.length;\n  return list[index];\n}\n\nfunction randomColorFromString(str) {\n  let hash = 0;\n  if (str.length === 0) return hash.toString();\n\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n\n  let color = '#';\n\n  for (let j = 0; j < 3; j++) {\n    const value = hash >> j * 8 & 255;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n\n  return color;\n}\n//# sourceMappingURL=colors.js.map"]},"metadata":{},"sourceType":"module"}