{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/slicedToArray\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Overlay = Overlay;\n\nvar _overlays = require(\"@react-native-aria/overlays\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/cjs/index\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _ExitAnimationContext = require(\"./ExitAnimationContext\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n\nfunction Overlay(_ref) {\n  var children = _ref.children,\n      isOpen = _ref.isOpen,\n      _ref$useRNModalOnAndr = _ref.useRNModalOnAndroid,\n      useRNModalOnAndroid = _ref$useRNModalOnAndr === void 0 ? false : _ref$useRNModalOnAndr,\n      _ref$isKeyboardDismis = _ref.isKeyboardDismissable,\n      isKeyboardDismissable = _ref$isKeyboardDismis === void 0 ? true : _ref$isKeyboardDismis,\n      _ref$animationPreset = _ref.animationPreset,\n      animationPreset = _ref$animationPreset === void 0 ? 'fade' : _ref$animationPreset,\n      onRequestClose = _ref.onRequestClose,\n      style = _ref.style,\n      unmountOnExit = _ref.unmountOnExit;\n\n  var _react$default$useSta = _react[\"default\"].useState(!isOpen),\n      _react$default$useSta2 = _slicedToArray(_react$default$useSta, 2),\n      exited = _react$default$useSta2[0],\n      setExited = _react$default$useSta2[1];\n\n  (0, _hooks.useKeyboardDismissable)({\n    enabled: isOpen && isKeyboardDismissable,\n    callback: onRequestClose ? onRequestClose : function () {}\n  });\n\n  var styleObj = _objectSpread({}, style);\n\n  if (animationPreset === 'slide') {\n    styleObj.overflow = 'hidden';\n    styleObj.display = 'flex';\n  } else {\n    styleObj.display = exited && !isOpen ? 'none' : 'flex';\n  }\n\n  if (unmountOnExit && !isOpen && exited) {\n    return null;\n  }\n\n  if (_reactNative.Platform.OS === 'android' && useRNModalOnAndroid) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_ExitAnimationContext.ExitAnimationContext.Provider, {\n      value: {\n        exited: exited,\n        setExited: setExited\n      }\n    }, /*#__PURE__*/_react[\"default\"].createElement(_reactNative.Modal, {\n      transparent: true,\n      visible: isOpen,\n      onRequestClose: onRequestClose,\n      animationType: animationPreset\n    }, children));\n  }\n\n  if (unmountOnExit && !isOpen && exited) {\n    return null;\n  }\n\n  return (\n    /*#__PURE__*/\n    //@ts-ignore\n    _react[\"default\"].createElement(_overlays.OverlayContainer, {\n      style: _objectSpread({}, styleObj)\n    }, /*#__PURE__*/_react[\"default\"].createElement(_ExitAnimationContext.ExitAnimationContext.Provider, {\n      value: {\n        exited: exited,\n        setExited: setExited\n      }\n    }, children))\n  );\n}","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/commonjs/components/primitives/Overlay/Overlay.js"],"names":["Object","value","exports","_overlays","require","_react","_interopRequireDefault","_hooks","_ExitAnimationContext","obj","default","useRNModalOnAndroid","isKeyboardDismissable","animationPreset","unmountOnExit","enabled","isOpen","callback","onRequestClose","styleObj","exited","_reactNative","setExited","transparent","visible","animationType","style"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Overlay = Overlay;\n\nvar _overlays = require(\"@react-native-aria/overlays\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _ExitAnimationContext = require(\"./ExitAnimationContext\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nfunction Overlay({\n  children,\n  isOpen,\n  useRNModalOnAndroid = false,\n  isKeyboardDismissable = true,\n  //@ts-ignore\n  animationPreset = 'fade',\n  onRequestClose,\n  style,\n  unmountOnExit\n}) {\n  const [exited, setExited] = _react.default.useState(!isOpen);\n\n  (0, _hooks.useKeyboardDismissable)({\n    enabled: isOpen && isKeyboardDismissable,\n    callback: onRequestClose ? onRequestClose : () => {}\n  });\n  const styleObj = { ...style\n  };\n\n  if (animationPreset === 'slide') {\n    styleObj.overflow = 'hidden';\n    styleObj.display = 'flex';\n  } else {\n    styleObj.display = exited && !isOpen ? 'none' : 'flex';\n  }\n\n  if (unmountOnExit && !isOpen && exited) {\n    return null;\n  }\n\n  if (_reactNative.Platform.OS === 'android' && useRNModalOnAndroid) {\n    return /*#__PURE__*/_react.default.createElement(_ExitAnimationContext.ExitAnimationContext.Provider, {\n      value: {\n        exited,\n        setExited\n      }\n    }, /*#__PURE__*/_react.default.createElement(_reactNative.Modal, {\n      transparent: true,\n      visible: isOpen,\n      onRequestClose: onRequestClose,\n      animationType: animationPreset\n    }, children));\n  }\n\n  if (unmountOnExit && !isOpen && exited) {\n    return null;\n  }\n\n  return (\n    /*#__PURE__*/\n    //@ts-ignore\n    _react.default.createElement(_overlays.OverlayContainer, {\n      style: { ...styleObj\n      }\n    }, /*#__PURE__*/_react.default.createElement(_ExitAnimationContext.ExitAnimationContext.Provider, {\n      value: {\n        exited,\n        setExited\n      }\n    }, children))\n  );\n}\n//# sourceMappingURL=Overlay.js.map"]},"metadata":{},"sourceType":"script"}