{"ast":null,"code":"import _defineProperty from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport omitBy from 'lodash.omitby';\nimport isNil from 'lodash.isnil';\nimport pick from 'lodash.pick';\nimport omit from 'lodash.omit';\nimport get from 'lodash.get';\nimport Platform from \"react-native-web/dist/cjs/exports/Platform\";\nexport var stylingProps = {\n  margin: ['margin', 'm', 'marginTop', 'mt', 'marginRight', 'mr', 'marginBottom', 'mb', 'marginLeft', 'ml', 'marginX', 'mx', 'marginY', 'my'],\n  padding: ['padding', 'p', 'paddingTop', 'pt', 'paddingRight', 'pr', 'paddingBottom', 'pb', 'paddingLeft', 'pl', 'paddingX', 'px', 'paddingY', 'py'],\n  border: ['border', 'borderWidth', 'borderStyle', 'borderColor', 'borderRadius', 'borderTop', 'borderTopWidth', 'borderTopStyle', 'borderTopColor', 'borderTopLeftRadius', 'borderTopRightRadius', 'borderRight', 'borderRightWidth', 'borderRightStyle', 'borderRightColor', 'borderBottom', 'borderBottomWidth', 'borderBottomStyle', 'borderBottomColor', 'borderBottomLeftRadius', 'borderBottomRightRadius', 'borderLeft', 'borderLeftWidth', 'borderLeftStyle', 'borderLeftColor', 'borderX', 'borderY'],\n  layout: ['width', 'w', 'height', 'h', 'display', 'minWidth', 'minW', 'minH', 'minHeight', 'maxWidth', 'maxW', 'maxHeight', 'maxH', 'size', 'verticalAlign', 'overflow', 'overflowX', 'overflowY'],\n  flexbox: ['alignItems', 'alignContent', 'justifyItems', 'justifyContent', 'flexWrap', 'flexDirection', 'flex', 'flexGrow', 'flexShrink', 'flexBasis', 'justifySelf', 'alignSelf', 'order'],\n  position: ['position', 'zIndex', 'top', 'right', 'bottom', 'left'],\n  background: ['bg', 'backgroundColor', 'bgColor']\n};\nexport function omitUndefined(obj) {\n  return omitBy(obj, isNil);\n}\nexport function getRandomString(length) {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n} // Inefficient way for pick, but retains order of props.\n\nfunction orderedPick(obj, values) {\n  var ret = {};\n  Object.keys(obj).forEach(function (key) {\n    if (values.includes(key)) {\n      ret[key] = obj[key];\n    }\n  });\n  return ret;\n}\n\nexport function orderedExtractInObject(parent, values) {\n  return [omitUndefined(orderedPick(parent, values)), omitUndefined(omit(parent, values))];\n}\n/**\n *\n * @param parent The object from which data needs to extracted\n * @param values Keys which needs to be extracted\n * @returns [extractedProps, remainingProps]\n */\n\nexport function extractInObject(parent, values) {\n  return [omitUndefined(pick(parent, values)), omitUndefined(omit(parent, values))];\n}\nexport function getColorFormColorScheme(props) {\n  var theme = props.theme,\n      colorScheme = props.colorScheme,\n      isDisabled = props.isDisabled;\n  var simpleColorScheme = colorScheme.split('.')[0];\n  if (isDisabled) return 'gray.300';else if (simpleColorScheme in theme.colors) {\n    return theme.colors[simpleColorScheme][0] === '#' ? simpleColorScheme : theme.colors[simpleColorScheme][400] || theme.colors[simpleColorScheme][200];\n  } else return 'primary.200';\n} // TODO: This function can be removed.\n\nexport function getColorScheme(props, customColorScheme) {\n  var theme = props.theme,\n      colorScheme = props.colorScheme;\n  colorScheme = customColorScheme || colorScheme;\n  if (!(colorScheme in theme.colors)) return 'primary';else {\n    if (typeof theme.colors[colorScheme] === 'object') return colorScheme;\n  }\n}\nexport var inValidBreakpointProps = ['style', 'children', 'shadowOffset'];\nexport function hasValidBreakpointFormat(breaks, themeBreakpoints, property) {\n  if (property && inValidBreakpointProps.indexOf(property) !== -1) {\n    return false;\n  } else if (Array.isArray(breaks)) {\n    return breaks.length ? true : false;\n  } else if (typeof breaks === 'object' && breaks !== null) {\n    var keys = Object.keys(breaks);\n    var themeBreakPointKeys = Object.keys(themeBreakpoints);\n\n    for (var i = 0; i < keys.length; i++) {\n      if (themeBreakPointKeys.indexOf(keys[i]) === -1) {\n        return false;\n      }\n    }\n\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function findLastValidBreakpoint(values, themeBreakpoints, currentBreakpoint) {\n  var _valArray$currentBrea;\n\n  var valArray = Array.isArray(values) ? values : Object.keys(themeBreakpoints).map(function (bPoint) {\n    return values[bPoint];\n  });\n  return (_valArray$currentBrea = valArray[currentBreakpoint]) !== null && _valArray$currentBrea !== void 0 ? _valArray$currentBrea : valArray.slice(0, currentBreakpoint + 1).filter(function (v) {\n    return !isNil(v);\n  }).pop();\n}\nexport function getClosestBreakpoint(values, point) {\n  var dimValues = Object.values(values);\n  var index = -1;\n  var breakpointsObj = {};\n\n  for (var i = 0; i < dimValues.length; i++) {\n    breakpointsObj[dimValues[i]] = i;\n  }\n\n  var breakpoints = Object.keys(breakpointsObj);\n\n  for (var _i = 0; _i < breakpoints.length; _i++) {\n    if (parseInt(breakpoints[_i]) === point) {\n      index = breakpointsObj[breakpoints[_i]];\n      break;\n    } else if (parseInt(breakpoints[_i]) > point && _i !== 0) {\n      index = breakpointsObj[breakpoints[_i - 1]];\n      break;\n    } // If windowWidth is greater than last available breakpoint clamp it to last index\n    else if (parseInt(breakpoints[_i]) < point && _i === dimValues.length - 1) {\n      index = breakpointsObj[breakpoints[_i]];\n      break;\n    }\n  }\n\n  return index;\n}\nexport var baseFontSize = 16;\nexport var convertAbsoluteToRem = function convertAbsoluteToRem(px) {\n  return \"\".concat(px / baseFontSize, \"rem\");\n};\nexport var convertRemToAbsolute = function convertRemToAbsolute(rem) {\n  return rem * baseFontSize;\n};\nexport var convertToDp = function convertToDp(value) {\n  var numberRegex = /^\\d+$/;\n\n  if (typeof value === 'number') {\n    return value;\n  } else {\n    var isAbsolute = numberRegex.test(value);\n    var isPx = !isAbsolute && value.endsWith('px');\n    var isRem = !isAbsolute && value.endsWith('rem');\n    var isEm = !isAbsolute && value.endsWith('em');\n    var finalDpValue = 0;\n\n    if (isAbsolute || isPx) {\n      finalDpValue = parseFloat(value);\n    } else if (isEm) {\n      finalDpValue = convertRemToAbsolute(parseFloat(value));\n    } else if (isRem) {\n      finalDpValue = convertRemToAbsolute(parseFloat(value));\n    }\n\n    return finalDpValue;\n  }\n};\n/**\n *\n * @param theme\n * @description\n  - Converts space/sizes/lineHeights/letterSpacings/fontSizes to `rem` on web if the token value specified is an absolute number.\n  - Converts space/sizes/lineHeights/letterSpacings/fontSizes to absolute number on native if the token value specified is in `px` or `rem`\n*/\n\nexport var platformSpecificSpaceUnits = function platformSpecificSpaceUnits(theme) {\n  var scales = ['space', 'sizes', 'fontSizes'];\n\n  var newTheme = _objectSpread({}, theme);\n\n  var isWeb = Platform.OS === 'web';\n  scales.forEach(function (key) {\n    var scale = get(theme, key, {});\n\n    var newScale = _objectSpread({}, scale);\n\n    for (var scaleKey in scale) {\n      var val = scale[scaleKey];\n\n      if (typeof val !== 'object') {\n        var isAbsolute = typeof val === 'number';\n        var isPx = !isAbsolute && val.endsWith('px');\n        var isRem = !isAbsolute && val.endsWith('rem'); // If platform is web, we need to convert absolute unit to rem. e.g. 16 to 1rem\n\n        if (isWeb) {\n          if (isAbsolute) {\n            newScale[scaleKey] = convertAbsoluteToRem(val);\n          }\n        } // If platform is not web, we need to convert px unit to absolute and rem unit to absolute. e.g. 16px to 16. 1rem to 16.\n        else {\n          if (isRem) {\n            newScale[scaleKey] = convertRemToAbsolute(parseFloat(val));\n          } else if (isPx) {\n            newScale[scaleKey] = parseFloat(val);\n          }\n        }\n      }\n    } //@ts-ignore\n\n\n    newTheme[key] = newScale;\n  });\n  return newTheme;\n};\nexport function isResponsiveAnyProp(props, theme) {\n  if (props) {\n    var keys = Object.keys(props);\n\n    for (var i = 0; i < keys.length; i++) {\n      if (hasValidBreakpointFormat(props[keys[i]], theme.breakpoints, keys[i])) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/theme/v33x-theme/tools/utils.ts"],"names":["stylingProps","margin","padding","border","layout","flexbox","position","background","omitBy","result","characters","charactersLength","i","Math","ret","Object","values","obj","omitUndefined","orderedPick","omit","pick","theme","colorScheme","isDisabled","props","simpleColorScheme","customColorScheme","inValidBreakpointProps","property","Array","breaks","keys","themeBreakPointKeys","valArray","currentBreakpoint","isNil","dimValues","index","breakpointsObj","breakpoints","parseInt","baseFontSize","convertAbsoluteToRem","px","convertRemToAbsolute","rem","convertToDp","numberRegex","isAbsolute","isPx","value","isRem","isEm","finalDpValue","parseFloat","platformSpecificSpaceUnits","scales","newTheme","isWeb","Platform","scale","get","newScale","val","hasValidBreakpointFormat"],"mappings":"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","sourcesContent":["import omitBy from 'lodash.omitby';\nimport isNil from 'lodash.isnil';\nimport pick from 'lodash.pick';\nimport omit from 'lodash.omit';\nimport get from 'lodash.get';\nimport type { IV33xTheme } from '../index';\nimport { Platform } from 'react-native';\n\nexport const stylingProps = {\n  margin: [\n    'margin',\n    'm',\n    'marginTop',\n    'mt',\n    'marginRight',\n    'mr',\n    'marginBottom',\n    'mb',\n    'marginLeft',\n    'ml',\n    'marginX',\n    'mx',\n    'marginY',\n    'my',\n  ],\n  padding: [\n    'padding',\n    'p',\n    'paddingTop',\n    'pt',\n    'paddingRight',\n    'pr',\n    'paddingBottom',\n    'pb',\n    'paddingLeft',\n    'pl',\n    'paddingX',\n    'px',\n    'paddingY',\n    'py',\n  ],\n  border: [\n    'border',\n    'borderWidth',\n    'borderStyle',\n    'borderColor',\n    'borderRadius',\n    'borderTop',\n    'borderTopWidth',\n    'borderTopStyle',\n    'borderTopColor',\n    'borderTopLeftRadius',\n    'borderTopRightRadius',\n    'borderRight',\n    'borderRightWidth',\n    'borderRightStyle',\n    'borderRightColor',\n    'borderBottom',\n    'borderBottomWidth',\n    'borderBottomStyle',\n    'borderBottomColor',\n    'borderBottomLeftRadius',\n    'borderBottomRightRadius',\n    'borderLeft',\n    'borderLeftWidth',\n    'borderLeftStyle',\n    'borderLeftColor',\n    'borderX',\n    'borderY',\n  ],\n  layout: [\n    'width',\n    'w',\n    'height',\n    'h',\n    'display',\n    'minWidth',\n    'minW',\n    'minH',\n    'minHeight',\n    'maxWidth',\n    'maxW',\n    'maxHeight',\n    'maxH',\n    'size',\n    'verticalAlign',\n    'overflow',\n    'overflowX',\n    'overflowY',\n  ],\n  flexbox: [\n    'alignItems',\n    'alignContent',\n    'justifyItems',\n    'justifyContent',\n    'flexWrap',\n    'flexDirection',\n    'flex',\n    'flexGrow',\n    'flexShrink',\n    'flexBasis',\n    'justifySelf',\n    'alignSelf',\n    'order',\n  ],\n  position: ['position', 'zIndex', 'top', 'right', 'bottom', 'left'],\n  background: ['bg', 'backgroundColor', 'bgColor'],\n};\nexport type Dict = Record<string, any>;\nexport function omitUndefined(obj: any) {\n  return omitBy(obj, isNil);\n}\nexport function getRandomString(length: number) {\n  var result = '';\n  var characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n// Inefficient way for pick, but retains order of props.\nfunction orderedPick(obj: any, values: any) {\n  const ret: any = {};\n  Object.keys(obj).forEach((key: string) => {\n    if (values.includes(key)) {\n      ret[key] = obj[key];\n    }\n  });\n  return ret;\n}\nexport function orderedExtractInObject(parent: any, values: Array<string>) {\n  return [\n    omitUndefined(orderedPick(parent, values)),\n    omitUndefined(omit(parent, values)),\n  ];\n}\n/**\n *\n * @param parent The object from which data needs to extracted\n * @param values Keys which needs to be extracted\n * @returns [extractedProps, remainingProps]\n */\nexport function extractInObject(parent: any, values: Array<string>) {\n  return [\n    omitUndefined(pick(parent, values)),\n    omitUndefined(omit(parent, values)),\n  ];\n}\nexport function getColorFormColorScheme(props: Record<string, any>) {\n  const { theme, colorScheme, isDisabled } = props;\n  const simpleColorScheme = colorScheme.split('.')[0];\n  if (isDisabled) return 'gray.300';\n  else if (simpleColorScheme in theme.colors) {\n    return theme.colors[simpleColorScheme][0] === '#'\n      ? simpleColorScheme\n      : theme.colors[simpleColorScheme][400] ||\n          theme.colors[simpleColorScheme][200];\n  } else return 'primary.200';\n}\n\n// TODO: This function can be removed.\nexport function getColorScheme(\n  props: Record<string, any>,\n  customColorScheme?: string\n) {\n  let { theme, colorScheme } = props;\n  colorScheme = customColorScheme || colorScheme;\n  if (!(colorScheme in theme.colors)) return 'primary';\n  else {\n    if (typeof theme.colors[colorScheme] === 'object') return colorScheme;\n  }\n}\nexport const inValidBreakpointProps = ['style', 'children', 'shadowOffset'];\nexport function hasValidBreakpointFormat(\n  breaks: any,\n  themeBreakpoints?: any,\n  property?: string\n) {\n  if (property && inValidBreakpointProps.indexOf(property) !== -1) {\n    return false;\n  } else if (Array.isArray(breaks)) {\n    return breaks.length ? true : false;\n  } else if (typeof breaks === 'object' && breaks !== null) {\n    const keys = Object.keys(breaks);\n    const themeBreakPointKeys = Object.keys(themeBreakpoints);\n    for (let i = 0; i < keys.length; i++) {\n      if (themeBreakPointKeys.indexOf(keys[i]) === -1) {\n        return false;\n      }\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function findLastValidBreakpoint(\n  values: any,\n  themeBreakpoints: any,\n  currentBreakpoint: number\n) {\n  const valArray = Array.isArray(values)\n    ? values\n    : Object.keys(themeBreakpoints).map((bPoint: string) => values[bPoint]);\n  return (\n    valArray[currentBreakpoint] ??\n    valArray\n      .slice(0, currentBreakpoint + 1)\n      .filter((v: any) => !isNil(v))\n      .pop()\n  );\n}\nexport function getClosestBreakpoint(\n  values: Record<string, any>,\n  point: number\n) {\n  const dimValues = Object.values(values);\n  let index = -1;\n  let breakpointsObj: any = {};\n  for (let i = 0; i < dimValues.length; i++) {\n    breakpointsObj[dimValues[i]] = i;\n  }\n  const breakpoints = Object.keys(breakpointsObj);\n  for (let i = 0; i < breakpoints.length; i++) {\n    if (parseInt(breakpoints[i]) === point) {\n      index = breakpointsObj[breakpoints[i]];\n      break;\n    } else if (parseInt(breakpoints[i]) > point && i !== 0) {\n      index = breakpointsObj[breakpoints[i - 1]];\n      break;\n    }\n    // If windowWidth is greater than last available breakpoint clamp it to last index\n    else if (parseInt(breakpoints[i]) < point && i === dimValues.length - 1) {\n      index = breakpointsObj[breakpoints[i]];\n      break;\n    }\n  }\n  return index;\n}\n\nexport const baseFontSize = 16;\n\nexport const convertAbsoluteToRem = (px: number) => {\n  return `${px / baseFontSize}rem`;\n};\n\nexport const convertRemToAbsolute = (rem: number) => {\n  return rem * baseFontSize;\n};\n\nexport const convertToDp = (value: number | string): number => {\n  const numberRegex = /^\\d+$/;\n\n  if (typeof value === 'number') {\n    return value;\n  } else {\n    const isAbsolute = numberRegex.test(value);\n    const isPx = !isAbsolute && value.endsWith('px');\n    const isRem = !isAbsolute && value.endsWith('rem');\n    const isEm = !isAbsolute && value.endsWith('em');\n\n    let finalDpValue = 0;\n\n    if (isAbsolute || isPx) {\n      finalDpValue = parseFloat(value);\n    } else if (isEm) {\n      finalDpValue = convertRemToAbsolute(parseFloat(value));\n    } else if (isRem) {\n      finalDpValue = convertRemToAbsolute(parseFloat(value));\n    }\n\n    return finalDpValue;\n  }\n};\n\n/**\n *\n * @param theme\n * @description\n  - Converts space/sizes/lineHeights/letterSpacings/fontSizes to `rem` on web if the token value specified is an absolute number.\n  - Converts space/sizes/lineHeights/letterSpacings/fontSizes to absolute number on native if the token value specified is in `px` or `rem`\n*/\nexport const platformSpecificSpaceUnits = (theme: IV33xTheme) => {\n  const scales = ['space', 'sizes', 'fontSizes'];\n\n  const newTheme = { ...theme };\n  const isWeb = Platform.OS === 'web';\n  scales.forEach((key) => {\n    const scale = get(theme, key, {});\n    const newScale = { ...scale };\n    for (const scaleKey in scale) {\n      const val = scale[scaleKey];\n      if (typeof val !== 'object') {\n        const isAbsolute = typeof val === 'number';\n        const isPx = !isAbsolute && val.endsWith('px');\n        const isRem = !isAbsolute && val.endsWith('rem');\n\n        // If platform is web, we need to convert absolute unit to rem. e.g. 16 to 1rem\n        if (isWeb) {\n          if (isAbsolute) {\n            newScale[scaleKey] = convertAbsoluteToRem(val);\n          }\n        }\n        // If platform is not web, we need to convert px unit to absolute and rem unit to absolute. e.g. 16px to 16. 1rem to 16.\n        else {\n          if (isRem) {\n            newScale[scaleKey] = convertRemToAbsolute(parseFloat(val));\n          } else if (isPx) {\n            newScale[scaleKey] = parseFloat(val);\n          }\n        }\n      }\n    }\n    //@ts-ignore\n    newTheme[key] = newScale;\n  });\n\n  return newTheme;\n};\nexport function isResponsiveAnyProp(props: Record<string, any>, theme: any) {\n  if (props) {\n    const keys = Object.keys(props);\n    for (let i = 0; i < keys.length; i++) {\n      if (\n        hasValidBreakpointFormat(props[keys[i]], theme.breakpoints, keys[i])\n      ) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}