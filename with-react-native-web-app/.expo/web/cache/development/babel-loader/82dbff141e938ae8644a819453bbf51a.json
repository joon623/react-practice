{"ast":null,"code":"import _defineProperty from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nvar _excluded = [\"children\"],\n    _excluded2 = [\"defaultValue\", \"keepWithinRange\", \"value\", \"min\", \"max\", \"onChange\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport { useThemeProps } from '../../../hooks';\nimport { useFormControlContext } from '../FormControl';\nimport { NumberInputContext } from './Context';\nimport Box from '../../primitives/Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nvar NumberInput = function NumberInput(_ref, ref) {\n  _s();\n\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useThemeProps = useThemeProps('NumberInput', props),\n      defaultValue = _useThemeProps.defaultValue,\n      keepWithinRange = _useThemeProps.keepWithinRange,\n      value = _useThemeProps.value,\n      min = _useThemeProps.min,\n      max = _useThemeProps.max,\n      onChange = _useThemeProps.onChange,\n      newProps = _objectWithoutProperties(_useThemeProps, _excluded2);\n\n  var formControlContext = useFormControlContext();\n\n  var _React$useState = React.useState(parseInt(value || defaultValue, 10)),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      numberInputValue = _React$useState2[0],\n      setNumberInputValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      numberInputStepper = _React$useState4[0],\n      setNumberInputStepper = _React$useState4[1];\n\n  var handleChange = function handleChange(newValue) {\n    var temp = newValue;\n    setNumberInputValue(temp);\n\n    if (keepWithinRange) {\n      if (newValue < min) setNumberInputValue(min);else if (newValue > max) setNumberInputValue(max);\n    } //NOTE: only calling onChange on stepper click or blur event of input.\n\n\n    onChange && onChange(temp);\n  };\n\n  var handleChangeWithoutCheck = function handleChangeWithoutCheck(newValue) {\n    var temp = newValue;\n    setNumberInputValue(temp);\n  };\n\n  React.useEffect(function () {\n    if (value !== undefined && value != numberInputValue) setNumberInputValue(value);\n  }, [value, numberInputValue, setNumberInputValue]); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Box, {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(NumberInputContext.Provider, {\n    value: _objectSpread(_objectSpread(_objectSpread({}, formControlContext), newProps), {}, {\n      min: min,\n      max: max,\n      handleChange: handleChange,\n      handleChangeWithoutCheck: handleChangeWithoutCheck,\n      numberInputValue: numberInputValue,\n      numberInputStepper: numberInputStepper,\n      setNumberInputStepper: setNumberInputStepper,\n      isControlled: value !== undefined\n    })\n  }, children));\n};\n\n_s(NumberInput, \"ETlYEvetwc5K9CgorXFXTkrrc/k=\", false, function () {\n  return [useThemeProps, useFormControlContext, useHasResponsiveProps];\n});\n\n_c = NumberInput;\nexport default /*#__PURE__*/_c3 = /*#__PURE__*/React.memo( /*#__PURE__*/_c2 = /*#__PURE__*/React.forwardRef(NumberInput));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"NumberInput\");\n$RefreshReg$(_c2, \"%default%$React.memo\");\n$RefreshReg$(_c3, \"%default%\");\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/module/components/composites/NumberInput/NumberInput.js"],"names":["NumberInput","children","props","defaultValue","keepWithinRange","value","min","max","onChange","newProps","useThemeProps","formControlContext","useFormControlContext","numberInputValue","setNumberInputValue","React","parseInt","numberInputStepper","setNumberInputStepper","handleChange","temp","newValue","handleChangeWithoutCheck","useHasResponsiveProps","ref","NumberInputContext","isControlled","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useThemeProps } from '../../../hooks';\nimport { useFormControlContext } from '../FormControl';\nimport { NumberInputContext } from './Context';\nimport Box from '../../primitives/Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst NumberInput = ({\n  children,\n  ...props\n}, ref) => {\n  const {\n    defaultValue,\n    keepWithinRange,\n    value,\n    min,\n    max,\n    onChange,\n    ...newProps\n  } = useThemeProps('NumberInput', props);\n  const formControlContext = useFormControlContext();\n  const [numberInputValue, setNumberInputValue] = React.useState(parseInt(value || defaultValue, 10));\n  const [numberInputStepper, setNumberInputStepper] = React.useState(null);\n\n  const handleChange = newValue => {\n    const temp = newValue;\n    setNumberInputValue(temp);\n\n    if (keepWithinRange) {\n      if (newValue < min) setNumberInputValue(min);else if (newValue > max) setNumberInputValue(max);\n    } //NOTE: only calling onChange on stepper click or blur event of input.\n\n\n    onChange && onChange(temp);\n  };\n\n  const handleChangeWithoutCheck = newValue => {\n    const temp = newValue;\n    setNumberInputValue(temp);\n  };\n\n  React.useEffect(() => {\n    if (value !== undefined && value != numberInputValue) setNumberInputValue(value);\n  }, [value, numberInputValue, setNumberInputValue]); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Box, {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(NumberInputContext.Provider, {\n    value: { ...formControlContext,\n      ...newProps,\n      min,\n      max,\n      handleChange,\n      handleChangeWithoutCheck,\n      numberInputValue,\n      numberInputStepper,\n      setNumberInputStepper,\n      isControlled: value !== undefined\n    }\n  }, children));\n};\n\nexport default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(NumberInput));\n//# sourceMappingURL=NumberInput.js.map"]},"metadata":{},"sourceType":"module"}