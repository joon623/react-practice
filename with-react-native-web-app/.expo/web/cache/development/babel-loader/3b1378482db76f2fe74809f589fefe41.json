{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.Input = void 0;\n\nvar _tools = require(\"../tools\");\n\nvar _reactNative = require(\"react-native-web/dist/cjs/index\");\n\nfunction getSelectionColor(props) {\n  if (_reactNative.Platform.OS === 'ios') {\n    return (0, _tools.mode)('coolGray.800', 'warmGray.50')(props);\n  } else if (_reactNative.Platform.OS === 'android') {\n    return (0, _tools.mode)('coolGray.800', 'warmGray.50')(props);\n  }\n}\n\nvar baseStyle = function baseStyle(props) {\n  // const { primary } = props.theme.colors;\n  // Todo: Resolve boxShadow Color or Provide some alternatiove prop for user to change focusRing color\n  // // Todo: Update to support similar focusRing on iOS , Android and Web\n  // const focusRing =\n  //   Platform.OS === 'web'\n  //     ? {\n  //         boxShadow:\n  //           props.variant !== 'underlined'\n  //             ? `${primary[400]} 0px 0px 0px 1px`\n  //             : `${primary[400]} 0px 1px 0px 0px`,\n  //         zIndex: 1,\n  //       }\n  //     : {\n  //         // boxShadow: `${useToken('colors', ['primary.400'])} 0px 0px 0px 1px`,\n  //       };\n  return {\n    selectionColor: getSelectionColor(props),\n    fontFamily: 'body',\n    p: '2',\n    borderRadius: 'sm',\n    overflow: 'hidden',\n    color: (0, _tools.mode)('coolGray.800', 'warmGray.50')(props),\n    placeholderTextColor: 'muted.400',\n    borderColor: (0, _tools.mode)('muted.200', 'gray.500')(props),\n    _disabled: {\n      opacity: '80',\n      bg: (0, _tools.mode)('muted.100', 'muted.700')(props),\n      _web: {\n        disabled: true,\n        cursor: 'not-allowed'\n      }\n    },\n    _invalid: {\n      borderColor: (0, _tools.mode)('danger.600', 'danger.300')(props)\n    },\n    _focus: {\n      borderColor: (0, _tools.mode)('primary.400', 'primary.500')(props)\n    },\n    _web: {\n      outlineWidth: '0',\n      overflow: 'auto',\n      lineHeight: 'lg',\n      // Todo: Move to _web inside size so that sm and xs don't have this much height\n      outline: 'none',\n      cursor: 'auto'\n    },\n    _stack: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      // justifyContent: 'space-between',\n      overflow: 'hidden'\n    },\n    _input: {\n      bg: 'transparent',\n      flex: 1\n    }\n  };\n};\n\nfunction roundedStyle(props) {\n  return {\n    borderRadius: '25',\n    borderWidth: '1',\n    _hover: {\n      bg: (0, _tools.mode)('gray.100', 'gray.700')(props)\n    }\n  };\n}\n\nfunction outlineStyle(props) {\n  return {\n    borderWidth: '1',\n    _hover: {\n      bg: (0, _tools.mode)('gray.100', 'gray.700')(props)\n    }\n  };\n}\n\nfunction filledStyle(props) {\n  return {\n    bg: props.bg || (0, _tools.mode)('muted.200', 'muted.600')(props),\n    borderWidth: '1',\n    borderColor: 'transparent',\n    _hover: {\n      bg: (0, _tools.mode)('muted.300', 'muted.700')(props)\n    }\n  };\n}\n\nfunction unstyledStyle() {\n  return {\n    borderWidth: '0'\n  };\n}\n\nfunction underlinedStyle() {\n  return {\n    borderRadius: '0',\n    borderTopWidth: '0',\n    borderLeftWidth: '0',\n    borderRightWidth: '0',\n    borderBottomWidth: '1'\n  };\n}\n\nvar variants = {\n  outline: outlineStyle,\n  underlined: underlinedStyle,\n  rounded: roundedStyle,\n  filled: filledStyle,\n  unstyled: unstyledStyle\n};\nvar sizes = {\n  '2xl': {\n    fontSize: 'xl'\n  },\n  'xl': {\n    fontSize: 'lg'\n  },\n  'lg': {\n    fontSize: 'md'\n  },\n  'md': {\n    fontSize: 'sm'\n  },\n  'sm': {\n    fontSize: 'xs'\n  },\n  'xs': {\n    fontSize: '2xs'\n  }\n};\nvar defaultProps = {\n  size: 'sm',\n  variant: 'outline'\n}; // Input\n\nvar Input = {\n  baseStyle: baseStyle,\n  defaultProps: defaultProps,\n  variants: variants,\n  sizes: sizes\n};\nexports.Input = Input;\nvar _default = {};\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/commonjs/theme/v33x-theme/components/input.js"],"names":["Object","value","exports","_tools","require","_reactNative","baseStyle","props","selectionColor","getSelectionColor","fontFamily","p","borderRadius","overflow","color","placeholderTextColor","borderColor","_disabled","opacity","bg","_web","disabled","cursor","_invalid","_focus","outlineWidth","lineHeight","outline","_stack","flexDirection","alignItems","_input","flex","borderWidth","_hover","borderTopWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","variants","underlined","rounded","filled","unstyled","unstyledStyle","sizes","fontSize","defaultProps","size","variant","Input","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Input = void 0;\n\nvar _tools = require(\"../tools\");\n\nvar _reactNative = require(\"react-native\");\n\nfunction getSelectionColor(props) {\n  if (_reactNative.Platform.OS === 'ios') {\n    return (0, _tools.mode)('coolGray.800', 'warmGray.50')(props);\n  } else if (_reactNative.Platform.OS === 'android') {\n    return (0, _tools.mode)('coolGray.800', 'warmGray.50')(props);\n  }\n}\n\nconst baseStyle = props => {\n  // const { primary } = props.theme.colors;\n  // Todo: Resolve boxShadow Color or Provide some alternatiove prop for user to change focusRing color\n  // // Todo: Update to support similar focusRing on iOS , Android and Web\n  // const focusRing =\n  //   Platform.OS === 'web'\n  //     ? {\n  //         boxShadow:\n  //           props.variant !== 'underlined'\n  //             ? `${primary[400]} 0px 0px 0px 1px`\n  //             : `${primary[400]} 0px 1px 0px 0px`,\n  //         zIndex: 1,\n  //       }\n  //     : {\n  //         // boxShadow: `${useToken('colors', ['primary.400'])} 0px 0px 0px 1px`,\n  //       };\n  return {\n    selectionColor: getSelectionColor(props),\n    fontFamily: 'body',\n    p: '2',\n    borderRadius: 'sm',\n    overflow: 'hidden',\n    color: (0, _tools.mode)('coolGray.800', 'warmGray.50')(props),\n    placeholderTextColor: 'muted.400',\n    borderColor: (0, _tools.mode)('muted.200', 'gray.500')(props),\n    _disabled: {\n      opacity: '80',\n      bg: (0, _tools.mode)('muted.100', 'muted.700')(props),\n      _web: {\n        disabled: true,\n        cursor: 'not-allowed'\n      }\n    },\n    _invalid: {\n      borderColor: (0, _tools.mode)('danger.600', 'danger.300')(props)\n    },\n    _focus: {\n      borderColor: (0, _tools.mode)('primary.400', 'primary.500')(props)\n    },\n    _web: {\n      outlineWidth: '0',\n      overflow: 'auto',\n      lineHeight: 'lg',\n      // Todo: Move to _web inside size so that sm and xs don't have this much height\n      outline: 'none',\n      cursor: 'auto'\n    },\n    _stack: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      // justifyContent: 'space-between',\n      overflow: 'hidden'\n    },\n    _input: {\n      bg: 'transparent',\n      flex: 1\n    }\n  };\n};\n\nfunction roundedStyle(props) {\n  return {\n    borderRadius: '25',\n    borderWidth: '1',\n    _hover: {\n      bg: (0, _tools.mode)('gray.100', 'gray.700')(props)\n    }\n  };\n}\n\nfunction outlineStyle(props) {\n  return {\n    borderWidth: '1',\n    _hover: {\n      bg: (0, _tools.mode)('gray.100', 'gray.700')(props)\n    }\n  };\n}\n\nfunction filledStyle(props) {\n  return {\n    bg: props.bg || (0, _tools.mode)('muted.200', 'muted.600')(props),\n    borderWidth: '1',\n    borderColor: 'transparent',\n    _hover: {\n      bg: (0, _tools.mode)('muted.300', 'muted.700')(props)\n    }\n  };\n}\n\nfunction unstyledStyle() {\n  return {\n    borderWidth: '0'\n  };\n}\n\nfunction underlinedStyle() {\n  return {\n    borderRadius: '0',\n    borderTopWidth: '0',\n    borderLeftWidth: '0',\n    borderRightWidth: '0',\n    borderBottomWidth: '1'\n  };\n}\n\nconst variants = {\n  outline: outlineStyle,\n  underlined: underlinedStyle,\n  rounded: roundedStyle,\n  filled: filledStyle,\n  unstyled: unstyledStyle\n};\nconst sizes = {\n  '2xl': {\n    fontSize: 'xl'\n  },\n  'xl': {\n    fontSize: 'lg'\n  },\n  'lg': {\n    fontSize: 'md'\n  },\n  'md': {\n    fontSize: 'sm'\n  },\n  'sm': {\n    fontSize: 'xs'\n  },\n  'xs': {\n    fontSize: '2xs'\n  }\n};\nconst defaultProps = {\n  size: 'sm',\n  variant: 'outline'\n}; // Input\n\nconst Input = {\n  baseStyle,\n  defaultProps,\n  variants,\n  sizes\n};\nexports.Input = Input;\nvar _default = {};\nexports.default = _default;\n//# sourceMappingURL=input.js.map"]},"metadata":{},"sourceType":"script"}