{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _react = require(\"react\");\n\nvar _createElement = _interopRequireDefault(require(\"../createElement\"));\n\nvar _css = _interopRequireDefault(require(\"../StyleSheet/css\"));\n\nvar _pick = _interopRequireDefault(require(\"../../modules/pick\"));\n\nvar _useElementLayout = _interopRequireDefault(require(\"../../hooks/useElementLayout\"));\n\nvar _useLayoutEffect = _interopRequireDefault(require(\"../../hooks/useLayoutEffect\"));\n\nvar _useMergeRefs = _interopRequireDefault(require(\"../../modules/useMergeRefs\"));\n\nvar _usePlatformMethods = _interopRequireDefault(require(\"../../hooks/usePlatformMethods\"));\n\nvar _useResponderEvents = _interopRequireDefault(require(\"../../hooks/useResponderEvents\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"../StyleSheet\"));\n\nvar _TextInputState = _interopRequireDefault(require(\"../../modules/TextInputState\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * Determines whether a 'selection' prop differs from a node's existing\n * selection state.\n */\n\n\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  var selectionEnd = node.selectionEnd,\n      selectionStart = node.selectionStart;\n  var start = selection.start,\n      end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\n/**\n * Certain input types do no support 'selectSelectionRange' and will throw an\n * error.\n */\n\n\nvar setSelection = function setSelection(node, selection) {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n        end = selection.end;\n\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\n\nvar forwardPropsList = {\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  accessibilityValue: true,\n  accessible: true,\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  children: true,\n  classList: true,\n  defaultValue: true,\n  dir: true,\n  disabled: true,\n  importantForAccessibility: true,\n  maxLength: true,\n  nativeID: true,\n  onBlur: true,\n  onChange: true,\n  onClick: true,\n  onClickCapture: true,\n  onContextMenu: true,\n  onFocus: true,\n  onScroll: true,\n  onTouchCancel: true,\n  onTouchCancelCapture: true,\n  onTouchEnd: true,\n  onTouchEndCapture: true,\n  onTouchMove: true,\n  onTouchMoveCapture: true,\n  onTouchStart: true,\n  onTouchStartCapture: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  ref: true,\n  rows: true,\n  spellCheck: true,\n  style: true,\n  value: true,\n  testID: true,\n  type: true,\n  // unstable\n  dataSet: true,\n  onMouseDown: true,\n  onMouseEnter: true,\n  onMouseLeave: true,\n  onMouseMove: true,\n  onMouseOver: true,\n  onMouseOut: true,\n  onMouseUp: true\n};\n\nvar pickProps = function pickProps(props) {\n  return (0, _pick[\"default\"])(props, forwardPropsList);\n}; // If an Input Method Editor is processing key input, the 'keyCode' is 229.\n// https://www.w3.org/TR/uievents/#determine-keydown-keyup-keyCode\n\n\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\n\nvar TextInput = (0, _react.forwardRef)(function (props, forwardedRef) {\n  var _props$autoCapitalize = props.autoCapitalize,\n      autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n      autoComplete = props.autoComplete,\n      autoCompleteType = props.autoCompleteType,\n      _props$autoCorrect = props.autoCorrect,\n      autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n      blurOnSubmit = props.blurOnSubmit,\n      clearTextOnFocus = props.clearTextOnFocus,\n      dir = props.dir,\n      _props$editable = props.editable,\n      editable = _props$editable === void 0 ? true : _props$editable,\n      _props$keyboardType = props.keyboardType,\n      keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      _props$numberOfLines = props.numberOfLines,\n      numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onChangeText = props.onChangeText,\n      onContentSizeChange = props.onContentSizeChange,\n      onFocus = props.onFocus,\n      onKeyPress = props.onKeyPress,\n      onLayout = props.onLayout,\n      onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n      onResponderEnd = props.onResponderEnd,\n      onResponderGrant = props.onResponderGrant,\n      onResponderMove = props.onResponderMove,\n      onResponderReject = props.onResponderReject,\n      onResponderRelease = props.onResponderRelease,\n      onResponderStart = props.onResponderStart,\n      onResponderTerminate = props.onResponderTerminate,\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\n      onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n      onSelectionChange = props.onSelectionChange,\n      onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n      onSubmitEditing = props.onSubmitEditing,\n      placeholderTextColor = props.placeholderTextColor,\n      returnKeyType = props.returnKeyType,\n      _props$secureTextEntr = props.secureTextEntry,\n      secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n      selection = props.selection,\n      selectTextOnFocus = props.selectTextOnFocus,\n      spellCheck = props.spellCheck;\n  var type;\n  var inputMode;\n\n  switch (keyboardType) {\n    case 'email-address':\n      type = 'email';\n      break;\n\n    case 'number-pad':\n    case 'numeric':\n      inputMode = 'numeric';\n      break;\n\n    case 'decimal-pad':\n      inputMode = 'decimal';\n      break;\n\n    case 'phone-pad':\n      type = 'tel';\n      break;\n\n    case 'search':\n    case 'web-search':\n      type = 'search';\n      break;\n\n    case 'url':\n      type = 'url';\n      break;\n\n    default:\n      type = 'text';\n  }\n\n  if (secureTextEntry) {\n    type = 'password';\n  }\n\n  var dimensions = (0, _react.useRef)({\n    height: null,\n    width: null\n  });\n  var hostRef = (0, _react.useRef)(null);\n  var handleContentSizeChange = (0, _react.useCallback)(function () {\n    var node = hostRef.current;\n\n    if (multiline && onContentSizeChange && node != null) {\n      var newHeight = node.scrollHeight;\n      var newWidth = node.scrollWidth;\n\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [hostRef, multiline, onContentSizeChange]);\n  var imperativeRef = (0, _react.useMemo)(function () {\n    return function (hostNode) {\n      // TextInput needs to add more methods to the hostNode in addition to those\n      // added by `usePlatformMethods`. This is temporarily until an API like\n      // `TextInput.clear(hostRef)` is added to React Native.\n      if (hostNode != null) {\n        hostNode.clear = function () {\n          if (hostNode != null) {\n            hostNode.value = '';\n          }\n        };\n\n        hostNode.isFocused = function () {\n          return hostNode != null && _TextInputState[\"default\"].currentlyFocusedField() === hostNode;\n        };\n\n        handleContentSizeChange();\n      }\n    };\n  }, [handleContentSizeChange]);\n\n  function handleBlur(e) {\n    _TextInputState[\"default\"]._currentlyFocusedNode = null;\n\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n\n  function handleChange(e) {\n    var text = e.target.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange();\n\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n\n  function handleFocus(e) {\n    var node = hostRef.current;\n\n    if (node != null) {\n      _TextInputState[\"default\"]._currentlyFocusedNode = node;\n\n      if (onFocus) {\n        e.nativeEvent.text = e.target.value;\n        onFocus(e);\n      }\n\n      if (clearTextOnFocus) {\n        node.value = '';\n      }\n\n      if (selectTextOnFocus) {\n        node.select();\n      }\n    }\n  }\n\n  function handleKeyDown(e) {\n    // Prevent key events bubbling (see #612)\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey && // Do not call submit if composition is occuring.\n    !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        // prevent \"Enter\" from inserting a newline or submitting a form\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n\n      if (shouldBlurOnSubmit && hostRef.current != null) {\n        hostRef.current.blur();\n      }\n    }\n  }\n\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n            selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n\n  (0, _useLayoutEffect[\"default\"])(function () {\n    var node = hostRef.current;\n\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n\n    if (document.activeElement === node) {\n      _TextInputState[\"default\"]._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  var classList = [classes.textinput];\n\n  var style = _StyleSheet[\"default\"].compose(props.style, placeholderTextColor && {\n    placeholderTextColor: placeholderTextColor\n  });\n\n  (0, _useElementLayout[\"default\"])(hostRef, onLayout);\n  (0, _useResponderEvents[\"default\"])(hostRef, {\n    onMoveShouldSetResponder: onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture: onMoveShouldSetResponderCapture,\n    onResponderEnd: onResponderEnd,\n    onResponderGrant: onResponderGrant,\n    onResponderMove: onResponderMove,\n    onResponderReject: onResponderReject,\n    onResponderRelease: onResponderRelease,\n    onResponderStart: onResponderStart,\n    onResponderTerminate: onResponderTerminate,\n    onResponderTerminationRequest: onResponderTerminationRequest,\n    onScrollShouldSetResponder: onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture: onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder: onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture: onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder: onStartShouldSetResponder,\n    onStartShouldSetResponderCapture: onStartShouldSetResponderCapture\n  });\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off';\n  supportedProps.classList = classList; // 'auto' by default allows browsers to infer writing direction\n\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  supportedProps.enterkeyhint = returnKeyType;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  supportedProps.readOnly = !editable;\n  supportedProps.rows = multiline ? numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = style;\n  supportedProps.type = multiline ? undefined : type;\n  supportedProps.inputMode = inputMode;\n  var platformMethodsRef = (0, _usePlatformMethods[\"default\"])(supportedProps);\n  var setRef = (0, _useMergeRefs[\"default\"])(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  return (0, _createElement[\"default\"])(component, supportedProps);\n});\nTextInput.displayName = 'TextInput'; // $FlowFixMe\n\nTextInput.State = _TextInputState[\"default\"];\n\nvar classes = _css[\"default\"].create({\n  textinput: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  }\n});\n\nvar _default = TextInput;\nexports[\"default\"] = _default;\nmodule.exports = exports[\"default\"];\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/cjs/exports/TextInput/index.js"],"names":["exports","_react","require","_createElement","_interopRequireDefault","_css","_pick","_useElementLayout","_useLayoutEffect","_useMergeRefs","_usePlatformMethods","_useResponderEvents","_StyleSheet","_TextInputState","obj","isSelectionStale","selectionEnd","node","selectionStart","start","selection","end","setSelection","forwardPropsList","accessibilityLabel","accessibilityLiveRegion","accessibilityRole","accessibilityState","accessibilityValue","accessible","autoCapitalize","autoComplete","autoCorrect","autoFocus","children","classList","defaultValue","dir","disabled","importantForAccessibility","maxLength","nativeID","onBlur","onChange","onClick","onClickCapture","onContextMenu","onFocus","onScroll","onTouchCancel","onTouchCancelCapture","onTouchEnd","onTouchEndCapture","onTouchMove","onTouchMoveCapture","onTouchStart","onTouchStartCapture","placeholder","pointerEvents","readOnly","ref","rows","spellCheck","style","value","testID","type","dataSet","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOver","onMouseOut","onMouseUp","pickProps","nativeEvent","TextInput","_props$autoCapitalize","props","autoCompleteType","_props$autoCorrect","blurOnSubmit","clearTextOnFocus","_props$editable","editable","_props$keyboardType","keyboardType","_props$multiline","multiline","_props$numberOfLines","numberOfLines","onChangeText","onContentSizeChange","onKeyPress","onLayout","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChange","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","onSubmitEditing","placeholderTextColor","returnKeyType","_props$secureTextEntr","secureTextEntry","selectTextOnFocus","inputMode","dimensions","height","width","hostRef","handleContentSizeChange","newHeight","newWidth","contentSize","imperativeRef","hostNode","e","text","blurOnSubmitDefault","shouldBlurOnSubmit","isComposing","isEventComposing","document","component","classes","supportedProps","platformMethodsRef","setRef","textinput","MozAppearance","WebkitAppearance","backgroundColor","border","borderRadius","boxSizing","font","margin","padding","resize","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nvar _createElement = _interopRequireDefault(require(\"../createElement\"));\n\nvar _css = _interopRequireDefault(require(\"../StyleSheet/css\"));\n\nvar _pick = _interopRequireDefault(require(\"../../modules/pick\"));\n\nvar _useElementLayout = _interopRequireDefault(require(\"../../hooks/useElementLayout\"));\n\nvar _useLayoutEffect = _interopRequireDefault(require(\"../../hooks/useLayoutEffect\"));\n\nvar _useMergeRefs = _interopRequireDefault(require(\"../../modules/useMergeRefs\"));\n\nvar _usePlatformMethods = _interopRequireDefault(require(\"../../hooks/usePlatformMethods\"));\n\nvar _useResponderEvents = _interopRequireDefault(require(\"../../hooks/useResponderEvents\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"../StyleSheet\"));\n\nvar _TextInputState = _interopRequireDefault(require(\"../../modules/TextInputState\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * Determines whether a 'selection' prop differs from a node's existing\n * selection state.\n */\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  var selectionEnd = node.selectionEnd,\n      selectionStart = node.selectionStart;\n  var start = selection.start,\n      end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\n/**\n * Certain input types do no support 'selectSelectionRange' and will throw an\n * error.\n */\n\n\nvar setSelection = function setSelection(node, selection) {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n        end = selection.end;\n\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\n\nvar forwardPropsList = {\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  accessibilityValue: true,\n  accessible: true,\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  children: true,\n  classList: true,\n  defaultValue: true,\n  dir: true,\n  disabled: true,\n  importantForAccessibility: true,\n  maxLength: true,\n  nativeID: true,\n  onBlur: true,\n  onChange: true,\n  onClick: true,\n  onClickCapture: true,\n  onContextMenu: true,\n  onFocus: true,\n  onScroll: true,\n  onTouchCancel: true,\n  onTouchCancelCapture: true,\n  onTouchEnd: true,\n  onTouchEndCapture: true,\n  onTouchMove: true,\n  onTouchMoveCapture: true,\n  onTouchStart: true,\n  onTouchStartCapture: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  ref: true,\n  rows: true,\n  spellCheck: true,\n  style: true,\n  value: true,\n  testID: true,\n  type: true,\n  // unstable\n  dataSet: true,\n  onMouseDown: true,\n  onMouseEnter: true,\n  onMouseLeave: true,\n  onMouseMove: true,\n  onMouseOver: true,\n  onMouseOut: true,\n  onMouseUp: true\n};\n\nvar pickProps = function pickProps(props) {\n  return (0, _pick.default)(props, forwardPropsList);\n}; // If an Input Method Editor is processing key input, the 'keyCode' is 229.\n// https://www.w3.org/TR/uievents/#determine-keydown-keyup-keyCode\n\n\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\n\nvar TextInput = (0, _react.forwardRef)(function (props, forwardedRef) {\n  var _props$autoCapitalize = props.autoCapitalize,\n      autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n      autoComplete = props.autoComplete,\n      autoCompleteType = props.autoCompleteType,\n      _props$autoCorrect = props.autoCorrect,\n      autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n      blurOnSubmit = props.blurOnSubmit,\n      clearTextOnFocus = props.clearTextOnFocus,\n      dir = props.dir,\n      _props$editable = props.editable,\n      editable = _props$editable === void 0 ? true : _props$editable,\n      _props$keyboardType = props.keyboardType,\n      keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      _props$numberOfLines = props.numberOfLines,\n      numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onChangeText = props.onChangeText,\n      onContentSizeChange = props.onContentSizeChange,\n      onFocus = props.onFocus,\n      onKeyPress = props.onKeyPress,\n      onLayout = props.onLayout,\n      onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n      onResponderEnd = props.onResponderEnd,\n      onResponderGrant = props.onResponderGrant,\n      onResponderMove = props.onResponderMove,\n      onResponderReject = props.onResponderReject,\n      onResponderRelease = props.onResponderRelease,\n      onResponderStart = props.onResponderStart,\n      onResponderTerminate = props.onResponderTerminate,\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\n      onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n      onSelectionChange = props.onSelectionChange,\n      onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n      onSubmitEditing = props.onSubmitEditing,\n      placeholderTextColor = props.placeholderTextColor,\n      returnKeyType = props.returnKeyType,\n      _props$secureTextEntr = props.secureTextEntry,\n      secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n      selection = props.selection,\n      selectTextOnFocus = props.selectTextOnFocus,\n      spellCheck = props.spellCheck;\n  var type;\n  var inputMode;\n\n  switch (keyboardType) {\n    case 'email-address':\n      type = 'email';\n      break;\n\n    case 'number-pad':\n    case 'numeric':\n      inputMode = 'numeric';\n      break;\n\n    case 'decimal-pad':\n      inputMode = 'decimal';\n      break;\n\n    case 'phone-pad':\n      type = 'tel';\n      break;\n\n    case 'search':\n    case 'web-search':\n      type = 'search';\n      break;\n\n    case 'url':\n      type = 'url';\n      break;\n\n    default:\n      type = 'text';\n  }\n\n  if (secureTextEntry) {\n    type = 'password';\n  }\n\n  var dimensions = (0, _react.useRef)({\n    height: null,\n    width: null\n  });\n  var hostRef = (0, _react.useRef)(null);\n  var handleContentSizeChange = (0, _react.useCallback)(function () {\n    var node = hostRef.current;\n\n    if (multiline && onContentSizeChange && node != null) {\n      var newHeight = node.scrollHeight;\n      var newWidth = node.scrollWidth;\n\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [hostRef, multiline, onContentSizeChange]);\n  var imperativeRef = (0, _react.useMemo)(function () {\n    return function (hostNode) {\n      // TextInput needs to add more methods to the hostNode in addition to those\n      // added by `usePlatformMethods`. This is temporarily until an API like\n      // `TextInput.clear(hostRef)` is added to React Native.\n      if (hostNode != null) {\n        hostNode.clear = function () {\n          if (hostNode != null) {\n            hostNode.value = '';\n          }\n        };\n\n        hostNode.isFocused = function () {\n          return hostNode != null && _TextInputState.default.currentlyFocusedField() === hostNode;\n        };\n\n        handleContentSizeChange();\n      }\n    };\n  }, [handleContentSizeChange]);\n\n  function handleBlur(e) {\n    _TextInputState.default._currentlyFocusedNode = null;\n\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n\n  function handleChange(e) {\n    var text = e.target.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange();\n\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n\n  function handleFocus(e) {\n    var node = hostRef.current;\n\n    if (node != null) {\n      _TextInputState.default._currentlyFocusedNode = node;\n\n      if (onFocus) {\n        e.nativeEvent.text = e.target.value;\n        onFocus(e);\n      }\n\n      if (clearTextOnFocus) {\n        node.value = '';\n      }\n\n      if (selectTextOnFocus) {\n        node.select();\n      }\n    }\n  }\n\n  function handleKeyDown(e) {\n    // Prevent key events bubbling (see #612)\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey && // Do not call submit if composition is occuring.\n    !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        // prevent \"Enter\" from inserting a newline or submitting a form\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n\n      if (shouldBlurOnSubmit && hostRef.current != null) {\n        hostRef.current.blur();\n      }\n    }\n  }\n\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n            selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n\n  (0, _useLayoutEffect.default)(function () {\n    var node = hostRef.current;\n\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n\n    if (document.activeElement === node) {\n      _TextInputState.default._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  var classList = [classes.textinput];\n\n  var style = _StyleSheet.default.compose(props.style, placeholderTextColor && {\n    placeholderTextColor: placeholderTextColor\n  });\n\n  (0, _useElementLayout.default)(hostRef, onLayout);\n  (0, _useResponderEvents.default)(hostRef, {\n    onMoveShouldSetResponder: onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture: onMoveShouldSetResponderCapture,\n    onResponderEnd: onResponderEnd,\n    onResponderGrant: onResponderGrant,\n    onResponderMove: onResponderMove,\n    onResponderReject: onResponderReject,\n    onResponderRelease: onResponderRelease,\n    onResponderStart: onResponderStart,\n    onResponderTerminate: onResponderTerminate,\n    onResponderTerminationRequest: onResponderTerminationRequest,\n    onScrollShouldSetResponder: onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture: onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder: onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture: onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder: onStartShouldSetResponder,\n    onStartShouldSetResponderCapture: onStartShouldSetResponderCapture\n  });\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off';\n  supportedProps.classList = classList; // 'auto' by default allows browsers to infer writing direction\n\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  supportedProps.enterkeyhint = returnKeyType;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  supportedProps.readOnly = !editable;\n  supportedProps.rows = multiline ? numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = style;\n  supportedProps.type = multiline ? undefined : type;\n  supportedProps.inputMode = inputMode;\n  var platformMethodsRef = (0, _usePlatformMethods.default)(supportedProps);\n  var setRef = (0, _useMergeRefs.default)(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  return (0, _createElement.default)(component, supportedProps);\n});\nTextInput.displayName = 'TextInput'; // $FlowFixMe\n\nTextInput.State = _TextInputState.default;\n\nvar classes = _css.default.create({\n  textinput: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  }\n});\n\nvar _default = TextInput;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"module"}