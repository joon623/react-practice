{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = useElementLayout;\n\nvar _ExecutionEnvironment = require(\"fbjs/lib/ExecutionEnvironment\");\n\nvar _useLayoutEffect = _interopRequireDefault(require(\"./useLayoutEffect\"));\n\nvar _UIManager = _interopRequireDefault(require(\"../exports/UIManager\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nvar DOM_LAYOUT_HANDLER_NAME = '__reactLayoutHandler';\nvar didWarn = !_ExecutionEnvironment.canUseDOM;\nvar resizeObserver = null;\n\nfunction getResizeObserver() {\n  if (_ExecutionEnvironment.canUseDOM && typeof window.ResizeObserver !== 'undefined') {\n    if (resizeObserver == null) {\n      resizeObserver = new window.ResizeObserver(function (entries) {\n        entries.forEach(function (entry) {\n          var node = entry.target;\n          var onLayout = node[DOM_LAYOUT_HANDLER_NAME];\n\n          if (typeof onLayout === 'function') {\n            // We still need to measure the view because browsers don't yet provide\n            // border-box dimensions in the entry\n            _UIManager[\"default\"].measure(node, function (x, y, width, height, left, top) {\n              var event = {\n                // $FlowFixMe\n                nativeEvent: {\n                  layout: {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height,\n                    left: left,\n                    top: top\n                  }\n                },\n                timeStamp: Date.now()\n              };\n              Object.defineProperty(event.nativeEvent, 'target', {\n                enumerable: true,\n                get: function get() {\n                  return entry.target;\n                }\n              });\n              onLayout(event);\n            });\n          }\n        });\n      });\n    }\n  } else if (!didWarn) {\n    if (true && true) {\n      console.warn('onLayout relies on ResizeObserver which is not supported by your browser. ' + 'Please include a polyfill, e.g., https://github.com/que-etc/resize-observer-polyfill.');\n      didWarn = true;\n    }\n  }\n\n  return resizeObserver;\n}\n\nfunction useElementLayout(ref, onLayout) {\n  var observer = getResizeObserver();\n  (0, _useLayoutEffect[\"default\"])(function () {\n    var node = ref.current;\n\n    if (node != null) {\n      node[DOM_LAYOUT_HANDLER_NAME] = onLayout;\n    }\n  }, [ref, onLayout]); // Observing is done in a separate effect to avoid this effect running\n  // when 'onLayout' changes.\n\n  (0, _useLayoutEffect[\"default\"])(function () {\n    var node = ref.current;\n\n    if (node != null && observer != null) {\n      if (typeof node[DOM_LAYOUT_HANDLER_NAME] === 'function') {\n        observer.observe(node);\n      } else {\n        observer.unobserve(node);\n      }\n    }\n\n    return function () {\n      if (node != null && observer != null) {\n        observer.unobserve(node);\n      }\n    };\n  }, [ref, observer]);\n}\n\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/cjs/hooks/useElementLayout.js"],"names":["exports","_ExecutionEnvironment","require","_useLayoutEffect","_interopRequireDefault","_UIManager","obj","default","DOM_LAYOUT_HANDLER_NAME","didWarn","resizeObserver","window","entries","node","entry","onLayout","event","nativeEvent","layout","x","y","width","height","left","top","timeStamp","Date","Object","enumerable","get","console","observer","getResizeObserver","ref","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = useElementLayout;\n\nvar _ExecutionEnvironment = require(\"fbjs/lib/ExecutionEnvironment\");\n\nvar _useLayoutEffect = _interopRequireDefault(require(\"./useLayoutEffect\"));\n\nvar _UIManager = _interopRequireDefault(require(\"../exports/UIManager\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar DOM_LAYOUT_HANDLER_NAME = '__reactLayoutHandler';\nvar didWarn = !_ExecutionEnvironment.canUseDOM;\nvar resizeObserver = null;\n\nfunction getResizeObserver() {\n  if (_ExecutionEnvironment.canUseDOM && typeof window.ResizeObserver !== 'undefined') {\n    if (resizeObserver == null) {\n      resizeObserver = new window.ResizeObserver(function (entries) {\n        entries.forEach(function (entry) {\n          var node = entry.target;\n          var onLayout = node[DOM_LAYOUT_HANDLER_NAME];\n\n          if (typeof onLayout === 'function') {\n            // We still need to measure the view because browsers don't yet provide\n            // border-box dimensions in the entry\n            _UIManager.default.measure(node, function (x, y, width, height, left, top) {\n              var event = {\n                // $FlowFixMe\n                nativeEvent: {\n                  layout: {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height,\n                    left: left,\n                    top: top\n                  }\n                },\n                timeStamp: Date.now()\n              };\n              Object.defineProperty(event.nativeEvent, 'target', {\n                enumerable: true,\n                get: function get() {\n                  return entry.target;\n                }\n              });\n              onLayout(event);\n            });\n          }\n        });\n      });\n    }\n  } else if (!didWarn) {\n    if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n      console.warn('onLayout relies on ResizeObserver which is not supported by your browser. ' + 'Please include a polyfill, e.g., https://github.com/que-etc/resize-observer-polyfill.');\n      didWarn = true;\n    }\n  }\n\n  return resizeObserver;\n}\n\nfunction useElementLayout(ref, onLayout) {\n  var observer = getResizeObserver();\n  (0, _useLayoutEffect.default)(function () {\n    var node = ref.current;\n\n    if (node != null) {\n      node[DOM_LAYOUT_HANDLER_NAME] = onLayout;\n    }\n  }, [ref, onLayout]); // Observing is done in a separate effect to avoid this effect running\n  // when 'onLayout' changes.\n\n  (0, _useLayoutEffect.default)(function () {\n    var node = ref.current;\n\n    if (node != null && observer != null) {\n      if (typeof node[DOM_LAYOUT_HANDLER_NAME] === 'function') {\n        observer.observe(node);\n      } else {\n        observer.unobserve(node);\n      }\n    }\n\n    return function () {\n      if (node != null && observer != null) {\n        observer.unobserve(node);\n      }\n    };\n  }, [ref, observer]);\n}\n\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}