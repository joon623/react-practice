{"ast":null,"code":"/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport normalizeColor from 'normalize-css-color';\n\nvar processColor = function processColor(color) {\n  if (color === undefined || color === null) {\n    return color;\n  } // convert number and hex\n\n\n  var int32Color = normalizeColor(color);\n\n  if (int32Color === undefined || int32Color === null) {\n    return undefined;\n  }\n\n  int32Color = (int32Color << 24 | int32Color >>> 8) >>> 0;\n  return int32Color;\n};\n\nexport default processColor;","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/exports/processColor/index.js"],"names":["processColor","color","int32Color","normalizeColor"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAA,cAAA,MAAA,qBAAA;;AAEA,IAAIA,YAAY,GAAG,SAAA,YAAA,CAAA,KAAA,EAA6B;EAC9C,IAAIC,KAAK,KAALA,SAAAA,IAAuBA,KAAK,KAAhC,IAAA,EAA2C;IACzC,OAAA,KAAA;EAF4C,CAAA,CAG5C;;;EAGF,IAAIC,UAAU,GAAGC,cAAc,CAA/B,KAA+B,CAA/B;;EAEA,IAAID,UAAU,KAAVA,SAAAA,IAA4BA,UAAU,KAA1C,IAAA,EAAqD;IACnD,OAAA,SAAA;EACD;;EAEDA,UAAU,GAAG,CAACA,UAAU,IAAVA,EAAAA,GAAmBA,UAAU,KAA9B,CAAA,MAAbA,CAAAA;EACA,OAAA,UAAA;AAbF,CAAA;;AAgBA,eAAA,YAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport normalizeColor from 'normalize-css-color';\n\nvar processColor = function processColor(color) {\n  if (color === undefined || color === null) {\n    return color;\n  } // convert number and hex\n\n\n  var int32Color = normalizeColor(color);\n\n  if (int32Color === undefined || int32Color === null) {\n    return undefined;\n  }\n\n  int32Color = (int32Color << 24 | int32Color >>> 8) >>> 0;\n  return int32Color;\n};\n\nexport default processColor;"]},"metadata":{},"sourceType":"module"}