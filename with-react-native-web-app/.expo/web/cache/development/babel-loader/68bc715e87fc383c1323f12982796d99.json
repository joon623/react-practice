{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = usePressEvents;\n\nvar _PressResponder = _interopRequireDefault(require(\"./PressResponder\"));\n\nvar _react = require(\"react\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction usePressEvents(hostRef, config) {\n  var pressResponderRef = (0, _react.useRef)(null);\n\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new _PressResponder[\"default\"](config);\n  }\n\n  var pressResponder = pressResponderRef.current; // Re-configure to use the current node and configuration.\n\n  (0, _react.useEffect)(function () {\n    pressResponder.configure(config);\n  }, [config, pressResponder]); // Reset the `pressResponder` when cleanup needs to occur. This is\n  // a separate effect because we do not want to rest the responder when `config` changes.\n\n  (0, _react.useEffect)(function () {\n    return function () {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  (0, _react.useDebugValue)(config);\n  return pressResponder.getEventHandlers();\n}\n\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/cjs/hooks/usePressEvents/index.js"],"names":["exports","_PressResponder","_interopRequireDefault","require","_react","obj","default","pressResponderRef","pressResponder","module"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,OAAO,CAAPA,UAAAA,GAAAA,IAAAA;AACAA,OAAAA,WAAAA,GAAAA,cAAAA;;AAEA,IAAIC,eAAe,GAAGC,sBAAsB,CAACC,OAAO,CAApD,kBAAoD,CAAR,CAA5C;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAApB,OAAoB,CAApB;;AAEA,SAAA,sBAAA,CAAA,GAAA,EAAqC;EAAE,OAAOE,GAAG,IAAIA,GAAG,CAAVA,UAAAA,GAAAA,GAAAA,GAA8B;IAAEC,WAASD;EAAX,CAArC;AAAwD;;AAE/F,SAAA,cAAA,CAAA,OAAA,EAAA,MAAA,EAAyC;EACvC,IAAIE,iBAAiB,GAAG,CAAC,GAAGH,MAAM,CAAV,MAAA,EAAxB,IAAwB,CAAxB;;EAEA,IAAIG,iBAAiB,CAAjBA,OAAAA,IAAJ,IAAA,EAAuC;IACrCA,iBAAiB,CAAjBA,OAAAA,GAA4B,IAAIN,eAAJ,WAAA,CAA5BM,MAA4B,CAA5BA;EACD;;EAED,IAAIC,cAAc,GAAGD,iBAAiB,CAPC,OAOvC,CAPuC,CAOS;;EAEhD,CAAC,GAAGH,MAAM,CAAV,SAAA,EAAsB,YAAY;IAChCI,cAAc,CAAdA,SAAAA,CAAAA,MAAAA;EADF,CAAA,EAEG,CAAA,MAAA,EAXoC,cAWpC,CAFH,EATuC,CAWT;EAC9B;;EAEA,CAAC,GAAGJ,MAAM,CAAV,SAAA,EAAsB,YAAY;IAChC,OAAO,YAAY;MACjBI,cAAc,CAAdA,KAAAA;IADF,CAAA;EADF,CAAA,EAIG,CAJH,cAIG,CAJH;EAKA,CAAC,GAAGJ,MAAM,CAAV,aAAA,EAAA,MAAA;EACA,OAAOI,cAAc,CAArB,gBAAOA,EAAP;AACD;;AAEDC,MAAM,CAANA,OAAAA,GAAiBT,OAAjBS,WAAAA","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nexports.__esModule = true;\nexports.default = usePressEvents;\n\nvar _PressResponder = _interopRequireDefault(require(\"./PressResponder\"));\n\nvar _react = require(\"react\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction usePressEvents(hostRef, config) {\n  var pressResponderRef = (0, _react.useRef)(null);\n\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new _PressResponder.default(config);\n  }\n\n  var pressResponder = pressResponderRef.current; // Re-configure to use the current node and configuration.\n\n  (0, _react.useEffect)(function () {\n    pressResponder.configure(config);\n  }, [config, pressResponder]); // Reset the `pressResponder` when cleanup needs to occur. This is\n  // a separate effect because we do not want to rest the responder when `config` changes.\n\n  (0, _react.useEffect)(function () {\n    return function () {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  (0, _react.useDebugValue)(config);\n  return pressResponder.getEventHandlers();\n}\n\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}