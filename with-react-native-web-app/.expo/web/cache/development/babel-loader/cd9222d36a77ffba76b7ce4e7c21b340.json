{"ast":null,"code":"import _extends from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/components/WRIndexDateSection.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\nimport { Center, Text, useTheme } from \"native-base\";\nimport CalendarWebviewReportIcon from '../public/images/calendar_webview_report.svg';\nimport { useToggle } from \"react-use\"; // import {AdapterDayjs} from '@mui/x-date-pickers/AdapterDayjs';\n// import {LocalizationProvider} from '@mui/x-date-pickers/LocalizationProvider';\n\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport dayjs from \"dayjs\";\nimport { DATE_FORMAT_INDEX_TOP_DATE } from \"./index.helper\";\nimport TextField from '@mui/material/TextField';\n\nvar WRIndexDateSection = function WRIndexDateSection(_ref) {\n  var originDate = _ref.originDate;\n\n  var _useToggle = useToggle(false),\n      _useToggle2 = _slicedToArray(_useToggle, 2),\n      calendarOn = _useToggle2[0],\n      setCalendarOn = _useToggle2[1];\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors,\n      sizes = _useTheme.sizes;\n\n  var calendarRef = useRef(null);\n  console.log(DateTimePicker);\n\n  var _React$useState = React.useState(new Date('2014-08-18T21:11:54')),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var handleChange = function handleChange(newValue) {\n    setValue(newValue);\n  };\n\n  return __jsx(Center, {\n    flexDirection: \"row\",\n    p: \"5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(CalendarWebviewReportIcon, {\n    color: colors.white,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), __jsx(Text, {\n    color: \"white\",\n    fontWeigh: 400,\n    fontSize: sizes[4],\n    ml: \"10px\",\n    onClick: setCalendarOn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, dayjs(originDate).utc(true).format(DATE_FORMAT_INDEX_TOP_DATE)), __jsx(DateTimePicker, {\n    label: \"Date&Time picker\",\n    value: value,\n    onChange: handleChange,\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 42\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default WRIndexDateSection;","map":{"version":3,"names":["React","useRef","Center","Text","useTheme","CalendarWebviewReportIcon","useToggle","DateTimePicker","dayjs","DATE_FORMAT_INDEX_TOP_DATE","TextField","WRIndexDateSection","originDate","calendarOn","setCalendarOn","colors","sizes","calendarRef","console","log","useState","Date","value","setValue","handleChange","newValue","white","utc","format","params"],"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/components/WRIndexDateSection.tsx"],"sourcesContent":["import React, {FC, useRef} from 'react';\nimport {Center, Text, useTheme} from \"native-base\";\nimport CalendarWebviewReportIcon from '../public/images/calendar_webview_report.svg';\nimport {useToggle} from \"react-use\";\n// import {AdapterDayjs} from '@mui/x-date-pickers/AdapterDayjs';\n// import {LocalizationProvider} from '@mui/x-date-pickers/LocalizationProvider';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport dayjs from \"dayjs\";\nimport {DATE_FORMAT_INDEX_TOP_DATE} from \"./index.helper\";\nimport TextField from '@mui/material/TextField';\n\ntype WRIndexDateSectionProps = {\n    originDate: Date;\n};\n\n\nconst WRIndexDateSection: FC<WRIndexDateSectionProps> = ({originDate}) => {\n    const [calendarOn, setCalendarOn] = useToggle(false);\n    const {colors, sizes} = useTheme();\n    const calendarRef = useRef(null);\n\n\n    console.log(DateTimePicker)\n    const [value, setValue] = React.useState<Date | null>(\n        new Date('2014-08-18T21:11:54'),\n    );\n\n    const handleChange = (newValue: Date | null) => {\n        setValue(newValue);\n    };\n\n\n    return (\n        <Center flexDirection=\"row\" p=\"5\">\n            <CalendarWebviewReportIcon color={colors.white}/>\n            <Text color='white' fontWeigh={400} fontSize={sizes[4]} ml={\"10px\"}\n                  onClick={setCalendarOn}\n            >{dayjs(originDate).utc(true).format(DATE_FORMAT_INDEX_TOP_DATE)}</Text>\n            {/*<LocalizationProvider dateAdapter={AdapterDayjs}>*/}\n            <DateTimePicker\n                label=\"Date&Time picker\"\n                value={value}\n                onChange={handleChange}\n                renderInput={(params) => <TextField {...params} />}\n            />\n            {/*</LocalizationProvider>*/}\n            {/*<Text>asldkjad</Text>*/}\n            {/*{calendarOn && <RNDateTimePicker/>}*/}\n        </Center>\n    );\n};\n\nexport default WRIndexDateSection;\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAmBC,MAAnB,QAAgC,OAAhC;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,QAAtB,QAAqC,aAArC;AACA,OAAOC,yBAAP,MAAsC,8CAAtC;AACA,SAAQC,SAAR,QAAwB,WAAxB,C,CACA;AACA;;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,0BAAR,QAAyC,gBAAzC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAOA,IAAMC,kBAA+C,GAAG,SAAlDA,kBAAkD,OAAkB;EAAA,IAAhBC,UAAgB,QAAhBA,UAAgB;;EACtE,iBAAoCN,SAAS,CAAC,KAAD,CAA7C;EAAA;EAAA,IAAOO,UAAP;EAAA,IAAmBC,aAAnB;;EACA,gBAAwBV,QAAQ,EAAhC;EAAA,IAAOW,MAAP,aAAOA,MAAP;EAAA,IAAeC,KAAf,aAAeA,KAAf;;EACA,IAAMC,WAAW,GAAGhB,MAAM,CAAC,IAAD,CAA1B;EAGAiB,OAAO,CAACC,GAAR,CAAYZ,cAAZ;;EACA,sBAA0BP,KAAK,CAACoB,QAAN,CACtB,IAAIC,IAAJ,CAAS,qBAAT,CADsB,CAA1B;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAA2B;IAC5CF,QAAQ,CAACE,QAAD,CAAR;EACH,CAFD;;EAKA,OACI,MAAC,MAAD;IAAQ,aAAa,EAAC,KAAtB;IAA4B,CAAC,EAAC,GAA9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACI,MAAC,yBAAD;IAA2B,KAAK,EAAEV,MAAM,CAACW,KAAzC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,EAEI,MAAC,IAAD;IAAM,KAAK,EAAC,OAAZ;IAAoB,SAAS,EAAE,GAA/B;IAAoC,QAAQ,EAAEV,KAAK,CAAC,CAAD,CAAnD;IAAwD,EAAE,EAAE,MAA5D;IACM,OAAO,EAAEF,aADf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEEN,KAAK,CAACI,UAAD,CAAL,CAAkBe,GAAlB,CAAsB,IAAtB,EAA4BC,MAA5B,CAAmCnB,0BAAnC,CAFF,CAFJ,EAMI,MAAC,cAAD;IACI,KAAK,EAAC,kBADV;IAEI,KAAK,EAAEa,KAFX;IAGI,QAAQ,EAAEE,YAHd;IAII,WAAW,EAAE,qBAACK,MAAD;MAAA,OAAY,MAAC,SAAD,eAAeA,MAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAZ;IAAA,CAJjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EANJ,CADJ;AAkBH,CAlCD;;AAoCA,eAAelB,kBAAf"},"metadata":{},"sourceType":"module"}