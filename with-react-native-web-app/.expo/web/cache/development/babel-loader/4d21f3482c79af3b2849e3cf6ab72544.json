{"ast":null,"code":"import Dimensions from \"react-native-web/dist/cjs/exports/Dimensions\";\nimport { mode } from '../tools';\nvar sizes = {\n  xs: {\n    contentSize: {\n      width: '60%',\n      maxWidth: '280'\n    }\n  },\n  sm: {\n    contentSize: {\n      width: '65%',\n      maxWidth: '320'\n    }\n  },\n  md: {\n    contentSize: {\n      width: '75%',\n      maxWidth: '380'\n    }\n  },\n  lg: {\n    contentSize: {\n      width: '80%',\n      maxWidth: '520'\n    }\n  },\n  xl: {\n    contentSize: {\n      width: '90%',\n      maxWidth: '580'\n    }\n  },\n  full: {\n    contentSize: {\n      width: '100%'\n    }\n  }\n};\nexport var AlertDialog = {\n  baseStyle: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    _web: {\n      pointerEvents: 'box-none'\n    },\n    _backdropFade: {\n      exitDuration: 150,\n      entryDuration: 200\n    },\n    _fade: {\n      exitDuration: 100,\n      entryDuration: 200\n    },\n    _slide: {\n      duration: 200,\n      overlay: false\n    }\n  },\n  sizes: sizes,\n  defaultProps: {\n    size: 'md',\n    closeOnOverlayClick: true\n  }\n};\nexport var AlertDialogContent = {\n  baseStyle: function baseStyle(props) {\n    return {\n      bg: mode('coolGray.50', 'gray.700')(props),\n      _text: {\n        color: mode('coolGray.800', 'warmGray.50')(props)\n      },\n      shadow: 1,\n      rounded: 'lg',\n      maxHeight: \"\".concat(Dimensions.get('window').height - 150, \"px\"),\n      overflow: 'hidden'\n    };\n  }\n};\nexport var AlertDialogCloseButton = {\n  baseStyle: function baseStyle(props) {\n    return {\n      position: 'absolute',\n      right: '3',\n      top: '3',\n      zIndex: '1',\n      colorScheme: 'coolGray',\n      p: '2',\n      _icon: {\n        size: '3',\n        color: mode('coolGray.600', 'coolGray.100')(props)\n      }\n    };\n  }\n};\nexport var AlertDialogHeader = {\n  baseStyle: function baseStyle(props) {\n    return {\n      py: '4',\n      px: '3',\n      borderBottomWidth: '1',\n      borderColor: mode('coolGray.200', 'gray.600')(props),\n      _text: {\n        fontSize: 'md',\n        fontWeight: 'semibold',\n        color: mode('coolGray.800', 'warmGray.50')(props),\n        lineHeight: 'sm'\n      }\n    };\n  }\n};\nexport var AlertDialogBody = {\n  baseStyle: function baseStyle(props) {\n    return {\n      pt: '2',\n      p: '3',\n      _text: {\n        color: mode('coolGray.600', 'coolGray.300')(props)\n      }\n    };\n  }\n};\nexport var AlertDialogFooter = {\n  baseStyle: function baseStyle(props) {\n    return {\n      p: '3',\n      bg: mode('coolGray.100', 'gray.600')(props),\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      flexWrap: 'wrap'\n    };\n  }\n};\nexport var AlertDialogOverlay = {\n  baseStyle: {\n    position: 'absolute',\n    left: '0',\n    top: '0',\n    opacity: '50',\n    right: '0',\n    bottom: '0'\n  }\n};\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/module/theme/v33x-theme/components/alert-dialog.js"],"names":["sizes","xs","contentSize","width","maxWidth","sm","md","lg","xl","full","AlertDialog","baseStyle","height","justifyContent","alignItems","_web","pointerEvents","_backdropFade","exitDuration","entryDuration","_fade","_slide","duration","overlay","defaultProps","size","closeOnOverlayClick","AlertDialogContent","bg","mode","_text","color","shadow","rounded","maxHeight","Dimensions","overflow","AlertDialogCloseButton","position","right","top","zIndex","colorScheme","p","_icon","AlertDialogHeader","py","px","borderBottomWidth","borderColor","fontSize","fontWeight","lineHeight","AlertDialogBody","pt","AlertDialogFooter","flexDirection","flexWrap","AlertDialogOverlay","left","opacity","bottom"],"mappings":"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","sourcesContent":["import { Dimensions } from 'react-native';\nimport { mode } from '../tools';\nconst sizes = {\n  xs: {\n    contentSize: {\n      width: '60%',\n      maxWidth: '280'\n    }\n  },\n  sm: {\n    contentSize: {\n      width: '65%',\n      maxWidth: '320'\n    }\n  },\n  md: {\n    contentSize: {\n      width: '75%',\n      maxWidth: '380'\n    }\n  },\n  lg: {\n    contentSize: {\n      width: '80%',\n      maxWidth: '520'\n    }\n  },\n  xl: {\n    contentSize: {\n      width: '90%',\n      maxWidth: '580'\n    }\n  },\n  full: {\n    contentSize: {\n      width: '100%'\n    }\n  }\n};\nexport const AlertDialog = {\n  baseStyle: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    _web: {\n      pointerEvents: 'box-none'\n    },\n    _backdropFade: {\n      exitDuration: 150,\n      entryDuration: 200\n    },\n    _fade: {\n      exitDuration: 100,\n      entryDuration: 200\n    },\n    _slide: {\n      duration: 200,\n      overlay: false\n    }\n  },\n  sizes,\n  defaultProps: {\n    size: 'md',\n    closeOnOverlayClick: true\n  }\n};\nexport const AlertDialogContent = {\n  baseStyle: props => {\n    return {\n      bg: mode('coolGray.50', 'gray.700')(props),\n      _text: {\n        color: mode('coolGray.800', 'warmGray.50')(props)\n      },\n      shadow: 1,\n      rounded: 'lg',\n      maxHeight: \"\".concat(Dimensions.get('window').height - 150, \"px\"),\n      overflow: 'hidden'\n    };\n  }\n};\nexport const AlertDialogCloseButton = {\n  baseStyle: props => {\n    return {\n      position: 'absolute',\n      right: '3',\n      top: '3',\n      zIndex: '1',\n      colorScheme: 'coolGray',\n      p: '2',\n      _icon: {\n        size: '3',\n        color: mode('coolGray.600', 'coolGray.100')(props)\n      }\n    };\n  }\n};\nexport const AlertDialogHeader = {\n  baseStyle: props => {\n    return {\n      py: '4',\n      px: '3',\n      borderBottomWidth: '1',\n      borderColor: mode('coolGray.200', 'gray.600')(props),\n      _text: {\n        fontSize: 'md',\n        fontWeight: 'semibold',\n        color: mode('coolGray.800', 'warmGray.50')(props),\n        lineHeight: 'sm'\n      }\n    };\n  }\n};\nexport const AlertDialogBody = {\n  baseStyle: props => {\n    return {\n      pt: '2',\n      p: '3',\n      _text: {\n        color: mode('coolGray.600', 'coolGray.300')(props)\n      }\n    };\n  }\n};\nexport const AlertDialogFooter = {\n  baseStyle: props => {\n    return {\n      p: '3',\n      bg: mode('coolGray.100', 'gray.600')(props),\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      flexWrap: 'wrap'\n    };\n  }\n};\nexport const AlertDialogOverlay = {\n  baseStyle: {\n    position: 'absolute',\n    left: '0',\n    top: '0',\n    opacity: '50',\n    right: '0',\n    bottom: '0'\n  }\n};\n//# sourceMappingURL=alert-dialog.js.map"]},"metadata":{},"sourceType":"module"}