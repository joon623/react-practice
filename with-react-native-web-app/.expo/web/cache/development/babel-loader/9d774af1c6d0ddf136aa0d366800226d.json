{"ast":null,"code":"import _defineProperty from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"debug\"];\n\nvar _jsxFileName = \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/utils/styled.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport { useStyledSystemPropsResolver } from '../hooks/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var makeStyledComponent = function makeStyledComponent(Comp) {\n  var _s = $RefreshSig$();\n\n  return /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_s(function (_ref, ref) {\n    _s();\n\n    var debug = _ref.debug,\n        props = _objectWithoutProperties(_ref, _excluded);\n\n    var _useStyledSystemProps = useStyledSystemPropsResolver(props),\n        _useStyledSystemProps2 = _slicedToArray(_useStyledSystemProps, 2),\n        style = _useStyledSystemProps2[0],\n        restProps = _useStyledSystemProps2[1];\n\n    if (true && debug) {\n      /* eslint-disable-next-line */\n      console.log(\"%cstyleSystem\", 'background: #4b5563; color: #d97706; font-weight: 700; padding: 2px 8px;');\n      /* eslint-disable-next-line */\n\n      console.log('%c props: ', 'color: #4ade80; font-weight: 700;', props);\n      /* eslint-disable-next-line */\n\n      console.log('%c style: ', 'color: #22d3ee; font-weight: 700;', style);\n      /* eslint-disable-next-line */\n\n      console.log('%c restProps: ', 'color: #22d3ee; font-weight: 700;', restProps);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Comp, _objectSpread(_objectSpread({}, restProps), {}, {\n      style: style,\n      ref: ref,\n      children: props.children\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this);\n  }, \"qH7Qqpvml2LsPyVrkePpRnusuI4=\", false, function () {\n    return [useStyledSystemPropsResolver];\n  })), \"qH7Qqpvml2LsPyVrkePpRnusuI4=\", false, function () {\n    return [useStyledSystemPropsResolver];\n  });\n};\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/utils/styled.tsx"],"names":["makeStyledComponent","debug","props","style","restProps","useStyledSystemPropsResolver","console","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,4BAAA,QAAA,WAAA;;AAEA,OAAO,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAA,IAAA,EAAe;EAAA,IAAA,EAAA,GAAA,YAAA,EAAA;;EAChD,OAAA,aAAA,EAAA,EAAA,aAAO,KAAK,CAAL,UAAA,CAAA,EAAA,CAAiB,UAAA,IAAA,EAAA,GAAA,EAAwC;IAAA,EAAA;;IAAA,IAArCC,KAAqC,GAAA,IAAA,CAArCA,KAAqC;IAAA,IAA3BC,KAA2B,GAAA,wBAAA,CAAA,IAAA,EAAA,SAAA,CAAA;;IAC9D,IAAA,qBAAA,GAA2BG,4BAA4B,CAAvD,KAAuD,CAAvD;IAAA,IAAA,sBAAA,GAAA,cAAA,CAAA,qBAAA,EAAA,CAAA,CAAA;IAAA,IAAOF,KAAP,GAAA,sBAAA,CAAA,CAAA,CAAA;IAAA,IAAcC,SAAd,GAAA,sBAAA,CAAA,CAAA,CAAA;;IACA,IAAI,QAAJ,KAAA,EAAqD;MACnD;MACAE,OAAO,CAAPA,GAAAA,CAAAA,eAAAA,EAAAA,0EAAAA;MAIA;;MACAA,OAAO,CAAPA,GAAAA,CAAAA,YAAAA,EAAAA,mCAAAA,EAAAA,KAAAA;MACA;;MACAA,OAAO,CAAPA,GAAAA,CAAAA,YAAAA,EAAAA,mCAAAA,EAAAA,KAAAA;MACA;;MACAA,OAAO,CAAPA,GAAAA,CAAAA,gBAAAA,EAAAA,mCAAAA,EAAAA,SAAAA;IAKD;;IACD,OAAA,aACE,OAAA,CAAA,IAAA,EAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA;MAAqB,KAAK,EAA1B,KAAA;MAAmC,GAAG,EAAtC,GAAA;MAAA,QAAA,EACGJ,KAAK,CAACK;IADT,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;MAAA,QAAA,EAAA,YAAA;MAAA,UAAA,EAAA,EAAA;MAAA,YAAA,EAAA;IAAA,CAAA,EADF,KACE,CADF;EAnBK,CAAA,EAAA,8BAAA,EAAA,KAAA,EAAA,YAAA;IAAA,OAAA,CAAA,4BAAA,CAAA;EAAP,CAAO,CAAA,CAAP,EAAA,8BAAA,EAAA,KAAA,EAAA,YAAA;IAAA,OAAA,CAAA,4BAAA,CAAA;EAAA,CAAA,CAAA;AADK,CAAA","sourcesContent":["import React from 'react';\nimport { useStyledSystemPropsResolver } from '../hooks/';\n\nexport const makeStyledComponent = (Comp: any) => {\n  return React.forwardRef(({ debug, ...props }: any, ref: any) => {\n    const [style, restProps] = useStyledSystemPropsResolver(props);\n    if (process.env.NODE_ENV === 'development' && debug) {\n      /* eslint-disable-next-line */\n      console.log(\n        `%cstyleSystem`,\n        'background: #4b5563; color: #d97706; font-weight: 700; padding: 2px 8px;'\n      );\n      /* eslint-disable-next-line */\n      console.log('%c props: ', 'color: #4ade80; font-weight: 700;', props);\n      /* eslint-disable-next-line */\n      console.log('%c style: ', 'color: #22d3ee; font-weight: 700;', style);\n      /* eslint-disable-next-line */\n      console.log(\n        '%c restProps: ',\n        'color: #22d3ee; font-weight: 700;',\n        restProps\n      );\n    }\n    return (\n      <Comp {...restProps} style={style} ref={ref}>\n        {props.children}\n      </Comp>\n    );\n  });\n};\n"]},"metadata":{},"sourceType":"module"}