{"ast":null,"code":"import _extends2 from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/extends\";\n\nvar _s = $RefreshSig$();\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { ChevronDownIcon, ChevronUpIcon } from '../../primitives/Icon/Icons';\nimport { AccordionItemContext } from './Context';\nimport { useThemeProps } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nvar AccordionIcon = function AccordionIcon(_ref, ref) {\n  _s();\n\n  var props = _extends2({}, _ref);\n\n  var _React$useContext = React.useContext(AccordionItemContext),\n      isOpen = _React$useContext.isOpen;\n\n  var _useThemeProps = useThemeProps('AccordionIcon', props),\n      newProps = _extends2({}, _useThemeProps); //TODO: refactor for responsive prop\n\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return isOpen ? /*#__PURE__*/React.createElement(ChevronUpIcon, _extends({\n    color: \"white\"\n  }, newProps, {\n    ref: ref\n  })) : /*#__PURE__*/React.createElement(ChevronDownIcon, _extends({}, newProps, {\n    ref: ref\n  }));\n};\n\n_s(AccordionIcon, \"hx/kvt9OifE0D84GZZ8lSXdvUH4=\", false, function () {\n  return [useThemeProps, useHasResponsiveProps];\n});\n\n_c = AccordionIcon;\nexport default /*#__PURE__*/_c3 = /*#__PURE__*/React.memo( /*#__PURE__*/_c2 = /*#__PURE__*/React.forwardRef(AccordionIcon));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AccordionIcon\");\n$RefreshReg$(_c2, \"%default%$React.memo\");\n$RefreshReg$(_c3, \"%default%\");\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/module/components/composites/Accordion/AccordionIcon.js"],"names":["_extends","Object","i","arguments","source","target","AccordionIcon","props","isOpen","React","newProps","useThemeProps","useHasResponsiveProps","color","ref"],"mappings":";;;;AAAA,SAAA,QAAA,GAAoB;EAAEA,QAAQ,GAAGC,MAAM,CAANA,MAAAA,IAAiB,UAAA,MAAA,EAAkB;IAAE,KAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGC,SAAS,CAA7B,MAAA,EAAsCD,CAAtC,EAAA,EAA2C;MAAE,IAAIE,MAAM,GAAGD,SAAS,CAAtB,CAAsB,CAAtB;;MAA2B,KAAK,IAAL,GAAA,IAAA,MAAA,EAAwB;QAAE,IAAIF,MAAM,CAANA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAAJ,GAAIA,CAAJ,EAAuD;UAAEI,MAAM,CAANA,GAAM,CAANA,GAAcD,MAAM,CAApBC,GAAoB,CAApBA;QAA4B;MAAE;IAAE;;IAAC,OAAA,MAAA;EAA5OL,CAAAA;;EAA8P,OAAOA,QAAQ,CAARA,KAAAA,CAAAA,IAAAA,EAAP,SAAOA,CAAP;AAAyC;;AAE7T,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,eAAA,EAAA,aAAA,QAAA,6BAAA;AACA,SAAA,oBAAA,QAAA,WAAA;AACA,SAAA,aAAA,QAAA,gBAAA;AACA,SAAA,qBAAA,QAAA,sCAAA;;AAEA,IAAMM,aAAa,GAAG,SAAhBA,aAAgB,CAAA,IAAA,EAAA,GAAA,EACX;EAAA,EAAA;;EAAA,IADiBC,KACjB,GAAA,SAAA,CAAA,EAAA,EAAA,IAAA,CAAA;;EACT,IAAA,iBAAA,GAEIE,KAAK,CAALA,UAAAA,CAFJ,oBAEIA,CAFJ;EAAA,IACED,MADF,GAAA,iBAAA,CAAA,MAAA;;EAGA,IAAA,cAAA,GACIG,aAAa,CAAA,eAAA,EADjB,KACiB,CADjB;EAAA,IAAWD,QAAX,GAAA,SAAA,CAAA,EAAA,EAJS,cAIT,CAAA,CAJS,CAKkC;;;EAE3C,IAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EAED,OAAOJ,MAAM,GAAG,aAAa,KAAK,CAAL,aAAA,CAAA,aAAA,EAAmCR,QAAQ,CAAC;IACvEa,KAAK,EAAE;EADgE,CAAD,EAAA,QAAA,EAE3D;IACXC,GAAG,EAAEA;EADM,CAF2D,CAA3C,CAAhB,GAIP,aAAa,KAAK,CAAL,aAAA,CAAA,eAAA,EAAqCd,QAAQ,CAAA,EAAA,EAAA,QAAA,EAAe;IAC7Ec,GAAG,EAAEA;EADwE,CAAf,CAA7C,CAJnB;AAZF,CAAA;;GAAMR,a;UAMAK,a,EAEAC,qB;;;KARAN,a;AAqBN,eAAe,aAAf,GAAA,GAAA,aAA4BG,KAAK,CAALA,IAAAA,EAAY,aAAZA,GAAAA,GAAAA,aAAyBA,KAAK,CAALA,UAAAA,CAArD,aAAqDA,CAAzBA,CAA5B","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { ChevronDownIcon, ChevronUpIcon } from '../../primitives/Icon/Icons';\nimport { AccordionItemContext } from './Context';\nimport { useThemeProps } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AccordionIcon = ({ ...props\n}, ref) => {\n  const {\n    isOpen\n  } = React.useContext(AccordionItemContext);\n  const { ...newProps\n  } = useThemeProps('AccordionIcon', props); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return isOpen ? /*#__PURE__*/React.createElement(ChevronUpIcon, _extends({\n    color: \"white\"\n  }, newProps, {\n    ref: ref\n  })) : /*#__PURE__*/React.createElement(ChevronDownIcon, _extends({}, newProps, {\n    ref: ref\n  }));\n};\n\nexport default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(AccordionIcon));\n//# sourceMappingURL=AccordionIcon.js.map"]},"metadata":{},"sourceType":"module"}