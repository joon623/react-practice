{"ast":null,"code":"/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * WARNING: changes to this file in particular can cause significant changes to\n * the results of render performance benchmarks.\n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport createCSSStyleSheet from './createCSSStyleSheet';\nimport createCompileableStyle from './createCompileableStyle';\nimport createOrderedCSSStyleSheet from './createOrderedCSSStyleSheet';\nimport flattenArray from '../../modules/flattenArray';\nimport flattenStyle from './flattenStyle';\nimport I18nManager from '../I18nManager';\nimport i18nStyle from './i18nStyle';\nimport { atomic, classic, inline, stringifyValueWithProperty } from './compile';\nimport initialRules from './initialRules';\nimport modality from './modality';\nimport { STYLE_ELEMENT_ID, STYLE_GROUPS } from './constants';\nexport default function createStyleResolver() {\n  var inserted, sheet, cache;\n  var resolved = {\n    css: {},\n    ltr: {},\n    rtl: {},\n    rtlNoSwap: {}\n  };\n\n  var init = function init() {\n    inserted = {\n      css: {},\n      ltr: {},\n      rtl: {},\n      rtlNoSwap: {}\n    };\n    sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(STYLE_ELEMENT_ID));\n    cache = {};\n    modality(function (rule) {\n      return sheet.insert(rule, STYLE_GROUPS.modality);\n    });\n    initialRules.forEach(function (rule) {\n      sheet.insert(rule, STYLE_GROUPS.reset);\n    });\n  };\n\n  init();\n\n  function addToCache(className, prop, value) {\n    if (!cache[prop]) {\n      cache[prop] = {};\n    }\n\n    cache[prop][value] = className;\n  }\n\n  function getClassName(prop, value) {\n    var val = stringifyValueWithProperty(value, prop);\n    return cache[prop] && cache[prop].hasOwnProperty(val) && cache[prop][val];\n  }\n\n  function _injectRegisteredStyle(id) {\n    var doLeftAndRightSwapInRTL = I18nManager.doLeftAndRightSwapInRTL,\n        isRTL = I18nManager.isRTL;\n    var dir = isRTL ? doLeftAndRightSwapInRTL ? 'rtl' : 'rtlNoSwap' : 'ltr';\n\n    if (!inserted[dir][id]) {\n      var style = createCompileableStyle(i18nStyle(flattenStyle(id)));\n      var results = atomic(style);\n      Object.keys(results).forEach(function (key) {\n        var _results$key = results[key],\n            identifier = _results$key.identifier,\n            property = _results$key.property,\n            rules = _results$key.rules,\n            value = _results$key.value;\n        addToCache(identifier, property, value);\n        rules.forEach(function (rule) {\n          var group = STYLE_GROUPS.custom[property] || STYLE_GROUPS.atomic;\n          sheet.insert(rule, group);\n        });\n      });\n      inserted[dir][id] = true;\n    }\n  }\n  /**\n   * Resolves a React Native style object to DOM attributes\n   */\n\n\n  function resolve(style, classList) {\n    var nextClassList = [];\n    var props = {};\n\n    if (!style && !classList) {\n      return props;\n    }\n\n    if (Array.isArray(classList)) {\n      flattenArray(classList).forEach(function (identifier) {\n        if (identifier) {\n          if (inserted.css[identifier] == null && resolved.css[identifier] != null) {\n            var item = resolved.css[identifier];\n            item.rules.forEach(function (rule) {\n              sheet.insert(rule, item.group);\n            });\n            inserted.css[identifier] = true;\n          }\n\n          nextClassList.push(identifier);\n        }\n      });\n    }\n\n    if (typeof style === 'number') {\n      // fast and cachable\n      _injectRegisteredStyle(style);\n\n      var key = createCacheKey(style);\n      props = _resolveStyle(style, key);\n    } else if (!Array.isArray(style)) {\n      // resolve a plain RN style object\n      props = _resolveStyle(style);\n    } else {\n      // flatten the style array\n      // cache resolved props when all styles are registered\n      // otherwise fallback to resolving\n      var flatArray = flattenArray(style);\n      var isArrayOfNumbers = true;\n      var cacheKey = '';\n\n      for (var i = 0; i < flatArray.length; i++) {\n        var id = flatArray[i];\n\n        if (typeof id !== 'number') {\n          isArrayOfNumbers = false;\n        } else {\n          if (isArrayOfNumbers) {\n            cacheKey += id + '-';\n          }\n\n          _injectRegisteredStyle(id);\n        }\n      }\n\n      var _key = isArrayOfNumbers ? createCacheKey(cacheKey) : null;\n\n      props = _resolveStyle(flatArray, _key);\n    }\n\n    nextClassList.push.apply(nextClassList, props.classList);\n    var finalProps = {\n      className: classListToString(nextClassList),\n      classList: nextClassList\n    };\n\n    if (props.style) {\n      finalProps.style = props.style;\n    }\n\n    return finalProps;\n  }\n  /**\n   * Resolves a React Native style object\n   */\n\n\n  function _resolveStyle(style, key) {\n    var doLeftAndRightSwapInRTL = I18nManager.doLeftAndRightSwapInRTL,\n        isRTL = I18nManager.isRTL;\n    var dir = isRTL ? doLeftAndRightSwapInRTL ? 'rtl' : 'rtlNoSwap' : 'ltr'; // faster: memoized\n\n    if (key != null && resolved[dir][key] != null) {\n      return resolved[dir][key];\n    }\n\n    var flatStyle = flattenStyle(style);\n    var localizedStyle = createCompileableStyle(i18nStyle(flatStyle)); // slower: convert style object to props and cache\n\n    var props = Object.keys(localizedStyle).sort().reduce(function (props, styleProp) {\n      var value = localizedStyle[styleProp];\n\n      if (value != null) {\n        var className = getClassName(styleProp, value);\n\n        if (className) {\n          props.classList.push(className);\n        } else {\n          // Certain properties and values are not transformed by 'createReactDOMStyle' as they\n          // require more complex transforms into multiple CSS rules. Here we assume that StyleManager\n          // can bind these styles to a className, and prevent them becoming invalid inline-styles.\n          if (styleProp === 'animationKeyframes' || styleProp === 'placeholderTextColor' || styleProp === 'pointerEvents' || styleProp === 'scrollbarWidth') {\n            var _atomic;\n\n            var a = atomic((_atomic = {}, _atomic[styleProp] = value, _atomic));\n            Object.keys(a).forEach(function (key) {\n              var _a$key = a[key],\n                  identifier = _a$key.identifier,\n                  rules = _a$key.rules;\n              props.classList.push(identifier);\n              rules.forEach(function (rule) {\n                sheet.insert(rule, STYLE_GROUPS.atomic);\n              });\n            });\n          } else {\n            if (!props.style) {\n              props.style = {};\n            } // 4x slower render\n\n\n            props.style[styleProp] = value;\n          }\n        }\n      }\n\n      return props;\n    }, {\n      classList: []\n    });\n\n    if (props.style) {\n      props.style = inline(props.style);\n    }\n\n    if (key != null) {\n      resolved[dir][key] = props;\n    }\n\n    return props;\n  }\n\n  return {\n    getStyleSheet: function getStyleSheet() {\n      var textContent = sheet.getTextContent(); // Reset state on the server so critical css is always the result\n\n      if (!canUseDOM) {\n        init();\n      }\n\n      return {\n        id: STYLE_ELEMENT_ID,\n        textContent: textContent\n      };\n    },\n    createCSS: function createCSS(rules, group) {\n      var result = {};\n      Object.keys(rules).forEach(function (name) {\n        var style = rules[name];\n        var compiled = classic(style, name);\n        Object.keys(compiled).forEach(function (key) {\n          var _compiled$key = compiled[key],\n              identifier = _compiled$key.identifier,\n              rules = _compiled$key.rules;\n          resolved.css[identifier] = {\n            group: group || STYLE_GROUPS.classic,\n            rules: rules\n          };\n          result[name] = identifier;\n        });\n      });\n      return result;\n    },\n    resolve: resolve,\n    sheet: sheet\n  };\n}\n/**\n * Misc helpers\n */\n\nvar createCacheKey = function createCacheKey(id) {\n  var prefix = 'rn';\n  return prefix + \"-\" + id;\n};\n\nvar classListToString = function classListToString(list) {\n  return list.join(' ').trim();\n};","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/exports/StyleSheet/createStyleResolver.js"],"names":["resolved","css","ltr","rtl","rtlNoSwap","init","inserted","sheet","createOrderedCSSStyleSheet","createCSSStyleSheet","cache","modality","STYLE_GROUPS","initialRules","val","stringifyValueWithProperty","doLeftAndRightSwapInRTL","I18nManager","isRTL","dir","style","createCompileableStyle","i18nStyle","flattenStyle","results","atomic","Object","_results$key","identifier","property","rules","value","addToCache","group","nextClassList","props","Array","flattenArray","item","_injectRegisteredStyle","key","createCacheKey","_resolveStyle","flatArray","isArrayOfNumbers","cacheKey","i","id","_key","finalProps","className","classListToString","classList","flatStyle","localizedStyle","getClassName","styleProp","a","_atomic","_a$key","inline","getStyleSheet","textContent","createCSS","result","compiled","classic","_compiled$key","resolve","prefix","list"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * WARNING: changes to this file in particular can cause significant changes to\n * the results of render performance benchmarks.\n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport createCSSStyleSheet from './createCSSStyleSheet';\nimport createCompileableStyle from './createCompileableStyle';\nimport createOrderedCSSStyleSheet from './createOrderedCSSStyleSheet';\nimport flattenArray from '../../modules/flattenArray';\nimport flattenStyle from './flattenStyle';\nimport I18nManager from '../I18nManager';\nimport i18nStyle from './i18nStyle';\nimport { atomic, classic, inline, stringifyValueWithProperty } from './compile';\nimport initialRules from './initialRules';\nimport modality from './modality';\nimport { STYLE_ELEMENT_ID, STYLE_GROUPS } from './constants';\nexport default function createStyleResolver() {\n  var inserted, sheet, cache;\n  var resolved = {\n    css: {},\n    ltr: {},\n    rtl: {},\n    rtlNoSwap: {}\n  };\n\n  var init = function init() {\n    inserted = {\n      css: {},\n      ltr: {},\n      rtl: {},\n      rtlNoSwap: {}\n    };\n    sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(STYLE_ELEMENT_ID));\n    cache = {};\n    modality(function (rule) {\n      return sheet.insert(rule, STYLE_GROUPS.modality);\n    });\n    initialRules.forEach(function (rule) {\n      sheet.insert(rule, STYLE_GROUPS.reset);\n    });\n  };\n\n  init();\n\n  function addToCache(className, prop, value) {\n    if (!cache[prop]) {\n      cache[prop] = {};\n    }\n\n    cache[prop][value] = className;\n  }\n\n  function getClassName(prop, value) {\n    var val = stringifyValueWithProperty(value, prop);\n    return cache[prop] && cache[prop].hasOwnProperty(val) && cache[prop][val];\n  }\n\n  function _injectRegisteredStyle(id) {\n    var doLeftAndRightSwapInRTL = I18nManager.doLeftAndRightSwapInRTL,\n        isRTL = I18nManager.isRTL;\n    var dir = isRTL ? doLeftAndRightSwapInRTL ? 'rtl' : 'rtlNoSwap' : 'ltr';\n\n    if (!inserted[dir][id]) {\n      var style = createCompileableStyle(i18nStyle(flattenStyle(id)));\n      var results = atomic(style);\n      Object.keys(results).forEach(function (key) {\n        var _results$key = results[key],\n            identifier = _results$key.identifier,\n            property = _results$key.property,\n            rules = _results$key.rules,\n            value = _results$key.value;\n        addToCache(identifier, property, value);\n        rules.forEach(function (rule) {\n          var group = STYLE_GROUPS.custom[property] || STYLE_GROUPS.atomic;\n          sheet.insert(rule, group);\n        });\n      });\n      inserted[dir][id] = true;\n    }\n  }\n  /**\n   * Resolves a React Native style object to DOM attributes\n   */\n\n\n  function resolve(style, classList) {\n    var nextClassList = [];\n    var props = {};\n\n    if (!style && !classList) {\n      return props;\n    }\n\n    if (Array.isArray(classList)) {\n      flattenArray(classList).forEach(function (identifier) {\n        if (identifier) {\n          if (inserted.css[identifier] == null && resolved.css[identifier] != null) {\n            var item = resolved.css[identifier];\n            item.rules.forEach(function (rule) {\n              sheet.insert(rule, item.group);\n            });\n            inserted.css[identifier] = true;\n          }\n\n          nextClassList.push(identifier);\n        }\n      });\n    }\n\n    if (typeof style === 'number') {\n      // fast and cachable\n      _injectRegisteredStyle(style);\n\n      var key = createCacheKey(style);\n      props = _resolveStyle(style, key);\n    } else if (!Array.isArray(style)) {\n      // resolve a plain RN style object\n      props = _resolveStyle(style);\n    } else {\n      // flatten the style array\n      // cache resolved props when all styles are registered\n      // otherwise fallback to resolving\n      var flatArray = flattenArray(style);\n      var isArrayOfNumbers = true;\n      var cacheKey = '';\n\n      for (var i = 0; i < flatArray.length; i++) {\n        var id = flatArray[i];\n\n        if (typeof id !== 'number') {\n          isArrayOfNumbers = false;\n        } else {\n          if (isArrayOfNumbers) {\n            cacheKey += id + '-';\n          }\n\n          _injectRegisteredStyle(id);\n        }\n      }\n\n      var _key = isArrayOfNumbers ? createCacheKey(cacheKey) : null;\n\n      props = _resolveStyle(flatArray, _key);\n    }\n\n    nextClassList.push.apply(nextClassList, props.classList);\n    var finalProps = {\n      className: classListToString(nextClassList),\n      classList: nextClassList\n    };\n\n    if (props.style) {\n      finalProps.style = props.style;\n    }\n\n    return finalProps;\n  }\n  /**\n   * Resolves a React Native style object\n   */\n\n\n  function _resolveStyle(style, key) {\n    var doLeftAndRightSwapInRTL = I18nManager.doLeftAndRightSwapInRTL,\n        isRTL = I18nManager.isRTL;\n    var dir = isRTL ? doLeftAndRightSwapInRTL ? 'rtl' : 'rtlNoSwap' : 'ltr'; // faster: memoized\n\n    if (key != null && resolved[dir][key] != null) {\n      return resolved[dir][key];\n    }\n\n    var flatStyle = flattenStyle(style);\n    var localizedStyle = createCompileableStyle(i18nStyle(flatStyle)); // slower: convert style object to props and cache\n\n    var props = Object.keys(localizedStyle).sort().reduce(function (props, styleProp) {\n      var value = localizedStyle[styleProp];\n\n      if (value != null) {\n        var className = getClassName(styleProp, value);\n\n        if (className) {\n          props.classList.push(className);\n        } else {\n          // Certain properties and values are not transformed by 'createReactDOMStyle' as they\n          // require more complex transforms into multiple CSS rules. Here we assume that StyleManager\n          // can bind these styles to a className, and prevent them becoming invalid inline-styles.\n          if (styleProp === 'animationKeyframes' || styleProp === 'placeholderTextColor' || styleProp === 'pointerEvents' || styleProp === 'scrollbarWidth') {\n            var _atomic;\n\n            var a = atomic((_atomic = {}, _atomic[styleProp] = value, _atomic));\n            Object.keys(a).forEach(function (key) {\n              var _a$key = a[key],\n                  identifier = _a$key.identifier,\n                  rules = _a$key.rules;\n              props.classList.push(identifier);\n              rules.forEach(function (rule) {\n                sheet.insert(rule, STYLE_GROUPS.atomic);\n              });\n            });\n          } else {\n            if (!props.style) {\n              props.style = {};\n            } // 4x slower render\n\n\n            props.style[styleProp] = value;\n          }\n        }\n      }\n\n      return props;\n    }, {\n      classList: []\n    });\n\n    if (props.style) {\n      props.style = inline(props.style);\n    }\n\n    if (key != null) {\n      resolved[dir][key] = props;\n    }\n\n    return props;\n  }\n\n  return {\n    getStyleSheet: function getStyleSheet() {\n      var textContent = sheet.getTextContent(); // Reset state on the server so critical css is always the result\n\n      if (!canUseDOM) {\n        init();\n      }\n\n      return {\n        id: STYLE_ELEMENT_ID,\n        textContent: textContent\n      };\n    },\n    createCSS: function createCSS(rules, group) {\n      var result = {};\n      Object.keys(rules).forEach(function (name) {\n        var style = rules[name];\n        var compiled = classic(style, name);\n        Object.keys(compiled).forEach(function (key) {\n          var _compiled$key = compiled[key],\n              identifier = _compiled$key.identifier,\n              rules = _compiled$key.rules;\n          resolved.css[identifier] = {\n            group: group || STYLE_GROUPS.classic,\n            rules: rules\n          };\n          result[name] = identifier;\n        });\n      });\n      return result;\n    },\n    resolve: resolve,\n    sheet: sheet\n  };\n}\n/**\n * Misc helpers\n */\n\nvar createCacheKey = function createCacheKey(id) {\n  var prefix = 'rn';\n  return prefix + \"-\" + id;\n};\n\nvar classListToString = function classListToString(list) {\n  return list.join(' ').trim();\n};"]},"metadata":{},"sourceType":"module"}