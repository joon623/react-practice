{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _EventEmitter2 = _interopRequireDefault(require(\"../emitter/EventEmitter\"));\n\nvar _EventSubscriptionVendor = _interopRequireDefault(require(\"../emitter/EventSubscriptionVendor\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar __DEV__ = true;\n\nfunction checkNativeEventModule(eventType) {\n  if (eventType) {\n    if (eventType.lastIndexOf('statusBar', 0) === 0) {\n      throw new Error('`' + eventType + '` event should be registered via the StatusBarIOS module');\n    }\n\n    if (eventType.lastIndexOf('keyboard', 0) === 0) {\n      throw new Error('`' + eventType + '` event should be registered via the Keyboard module');\n    }\n\n    if (eventType === 'appStateDidChange' || eventType === 'memoryWarning') {\n      throw new Error('`' + eventType + '` event should be registered via the AppState module');\n    }\n  }\n}\n/**\n * Deprecated - subclass NativeEventEmitter to create granular event modules instead of\n * adding all event listeners directly to RCTDeviceEventEmitter.\n */\n\n\nvar RCTDeviceEventEmitter = /*#__PURE__*/function (_EventEmitter) {\n  _inheritsLoose(RCTDeviceEventEmitter, _EventEmitter);\n\n  function RCTDeviceEventEmitter() {\n    var _this;\n\n    var sharedSubscriber = new _EventSubscriptionVendor[\"default\"]();\n    _this = _EventEmitter.call(this, sharedSubscriber) || this;\n    _this.sharedSubscriber = sharedSubscriber;\n    return _this;\n  }\n\n  var _proto = RCTDeviceEventEmitter.prototype;\n\n  _proto.addListener = function addListener(eventType, listener, context) {\n    if (__DEV__) {\n      checkNativeEventModule(eventType);\n    }\n\n    return _EventEmitter.prototype.addListener.call(this, eventType, listener, context);\n  };\n\n  _proto.removeAllListeners = function removeAllListeners(eventType) {\n    if (__DEV__) {\n      checkNativeEventModule(eventType);\n    }\n\n    _EventEmitter.prototype.removeAllListeners.call(this, eventType);\n  };\n\n  _proto.removeSubscription = function removeSubscription(subscription) {\n    if (subscription.emitter !== this) {\n      subscription.emitter.removeSubscription(subscription);\n    } else {\n      _EventEmitter.prototype.removeSubscription.call(this, subscription);\n    }\n  };\n\n  return RCTDeviceEventEmitter;\n}(_EventEmitter2[\"default\"]);\n\nvar _default = new RCTDeviceEventEmitter();\n\nexports[\"default\"] = _default;\nmodule.exports = exports[\"default\"];\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/cjs/vendor/react-native/NativeEventEmitter/RCTDeviceEventEmitter.js"],"names":["exports","_EventEmitter2","_interopRequireDefault","require","_EventSubscriptionVendor","obj","subClass","Object","superClass","__DEV__","eventType","RCTDeviceEventEmitter","_inheritsLoose","sharedSubscriber","_this","_EventEmitter","_proto","checkNativeEventModule","subscription","_default","module"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,OAAO,CAAPA,UAAAA,GAAAA,IAAAA;AACAA,OAAO,CAAPA,SAAO,CAAPA,GAAkB,KAAlBA,CAAAA;;AAEA,IAAIC,cAAc,GAAGC,sBAAsB,CAACC,OAAO,CAAnD,yBAAmD,CAAR,CAA3C;;AAEA,IAAIC,wBAAwB,GAAGF,sBAAsB,CAACC,OAAO,CAA7D,oCAA6D,CAAR,CAArD;;AAEA,SAAA,sBAAA,CAAA,GAAA,EAAqC;EAAE,OAAOE,GAAG,IAAIA,GAAG,CAAVA,UAAAA,GAAAA,GAAAA,GAA8B;IAAE,WAASA;EAAX,CAArC;AAAwD;;AAE/F,SAAA,cAAA,CAAA,QAAA,EAAA,UAAA,EAA8C;EAAEC,QAAQ,CAARA,SAAAA,GAAqBC,MAAM,CAANA,MAAAA,CAAcC,UAAU,CAA7CF,SAAqBC,CAArBD;EAA0DA,QAAQ,CAARA,SAAAA,CAAAA,WAAAA,GAAAA,QAAAA;EAA2CA,QAAQ,CAARA,SAAAA,GAAAA,UAAAA;AAAkC;;AAEvL,IAAIG,OAAO,GAAX,IAAA;;AAEA,SAAA,sBAAA,CAAA,SAAA,EAA2C;EACzC,IAAA,SAAA,EAAe;IACb,IAAIC,SAAS,CAATA,WAAAA,CAAAA,WAAAA,EAAAA,CAAAA,MAAJ,CAAA,EAAiD;MAC/C,MAAM,IAAA,KAAA,CAAU,MAAA,SAAA,GAAhB,0DAAM,CAAN;IACD;;IAED,IAAIA,SAAS,CAATA,WAAAA,CAAAA,UAAAA,EAAAA,CAAAA,MAAJ,CAAA,EAAgD;MAC9C,MAAM,IAAA,KAAA,CAAU,MAAA,SAAA,GAAhB,sDAAM,CAAN;IACD;;IAED,IAAIA,SAAS,KAATA,mBAAAA,IAAqCA,SAAS,KAAlD,eAAA,EAAwE;MACtE,MAAM,IAAA,KAAA,CAAU,MAAA,SAAA,GAAhB,sDAAM,CAAN;IACD;EACF;AACF;AACD;AACA;AACA;AACA;;;AAGA,IAAIC,qBAAqB,GACzB,aACA,UAAA,aAAA,EAAyB;EACvBC,cAAc,CAAA,qBAAA,EAAdA,aAAc,CAAdA;;EAEA,SAAA,qBAAA,GAAiC;IAC/B,IAAA,KAAA;;IAEA,IAAIC,gBAAgB,GAAG,IAAIT,wBAAwB,CAAnD,SAAmD,CAA5B,EAAvB;IACAU,KAAK,GAAGC,aAAa,CAAbA,IAAAA,CAAAA,IAAAA,EAAAA,gBAAAA,KAARD,IAAAA;IACAA,KAAK,CAALA,gBAAAA,GAAAA,gBAAAA;IACA,OAAA,KAAA;EACD;;EAED,IAAIE,MAAM,GAAGL,qBAAqB,CAAlC,SAAA;;EAEAK,MAAM,CAANA,WAAAA,GAAqB,SAAA,WAAA,CAAA,SAAA,EAAA,QAAA,EAAA,OAAA,EAAmD;IACtE,IAAA,OAAA,EAAa;MACXC,sBAAsB,CAAtBA,SAAsB,CAAtBA;IACD;;IAED,OAAOF,aAAa,CAAbA,SAAAA,CAAAA,WAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,SAAAA,EAAAA,QAAAA,EAAP,OAAOA,CAAP;EALFC,CAAAA;;EAQAA,MAAM,CAANA,kBAAAA,GAA4B,SAAA,kBAAA,CAAA,SAAA,EAAuC;IACjE,IAAA,OAAA,EAAa;MACXC,sBAAsB,CAAtBA,SAAsB,CAAtBA;IACD;;IAEDF,aAAa,CAAbA,SAAAA,CAAAA,kBAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,SAAAA;EALFC,CAAAA;;EAQAA,MAAM,CAANA,kBAAAA,GAA4B,SAAA,kBAAA,CAAA,YAAA,EAA0C;IACpE,IAAIE,YAAY,CAAZA,OAAAA,KAAJ,IAAA,EAAmC;MACjCA,YAAY,CAAZA,OAAAA,CAAAA,kBAAAA,CAAAA,YAAAA;IADF,CAAA,MAEO;MACLH,aAAa,CAAbA,SAAAA,CAAAA,kBAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,YAAAA;IACD;EALHC,CAAAA;;EAQA,OAAA,qBAAA;AAtCF,CAAA,CAuCEf,cAAc,CAzChB,SAyCgB,CAvChB,CAFA;;AA2CA,IAAIkB,QAAQ,GAAG,IAAf,qBAAe,EAAf;;AAEAnB,OAAO,CAAPA,SAAO,CAAPA,GAAAA,QAAAA;AACAoB,MAAM,CAANA,OAAAA,GAAiBpB,OAAO,CAAxBoB,SAAwB,CAAxBA","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _EventEmitter2 = _interopRequireDefault(require(\"../emitter/EventEmitter\"));\n\nvar _EventSubscriptionVendor = _interopRequireDefault(require(\"../emitter/EventSubscriptionVendor\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nfunction checkNativeEventModule(eventType) {\n  if (eventType) {\n    if (eventType.lastIndexOf('statusBar', 0) === 0) {\n      throw new Error('`' + eventType + '` event should be registered via the StatusBarIOS module');\n    }\n\n    if (eventType.lastIndexOf('keyboard', 0) === 0) {\n      throw new Error('`' + eventType + '` event should be registered via the Keyboard module');\n    }\n\n    if (eventType === 'appStateDidChange' || eventType === 'memoryWarning') {\n      throw new Error('`' + eventType + '` event should be registered via the AppState module');\n    }\n  }\n}\n/**\n * Deprecated - subclass NativeEventEmitter to create granular event modules instead of\n * adding all event listeners directly to RCTDeviceEventEmitter.\n */\n\n\nvar RCTDeviceEventEmitter =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inheritsLoose(RCTDeviceEventEmitter, _EventEmitter);\n\n  function RCTDeviceEventEmitter() {\n    var _this;\n\n    var sharedSubscriber = new _EventSubscriptionVendor.default();\n    _this = _EventEmitter.call(this, sharedSubscriber) || this;\n    _this.sharedSubscriber = sharedSubscriber;\n    return _this;\n  }\n\n  var _proto = RCTDeviceEventEmitter.prototype;\n\n  _proto.addListener = function addListener(eventType, listener, context) {\n    if (__DEV__) {\n      checkNativeEventModule(eventType);\n    }\n\n    return _EventEmitter.prototype.addListener.call(this, eventType, listener, context);\n  };\n\n  _proto.removeAllListeners = function removeAllListeners(eventType) {\n    if (__DEV__) {\n      checkNativeEventModule(eventType);\n    }\n\n    _EventEmitter.prototype.removeAllListeners.call(this, eventType);\n  };\n\n  _proto.removeSubscription = function removeSubscription(subscription) {\n    if (subscription.emitter !== this) {\n      subscription.emitter.removeSubscription(subscription);\n    } else {\n      _EventEmitter.prototype.removeSubscription.call(this, subscription);\n    }\n  };\n\n  return RCTDeviceEventEmitter;\n}(_EventEmitter2.default);\n\nvar _default = new RCTDeviceEventEmitter();\n\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"module"}