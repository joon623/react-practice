{"ast":null,"code":"import { mode, getColorScheme } from '../tools';\nvar baseStyle = {\n  px: '2',\n  py: '0.5',\n  alignItems: 'center',\n  _text: {\n    fontSize: 'xs',\n    fontWeight: 'medium'\n  }\n};\n\nfunction variantSolid(props) {\n  var colorScheme = getColorScheme(props);\n  return {\n    bg: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".300\"))(props),\n    _text: {\n      color: mode(\"coolGray.100\", \"coolGray.800\")(props)\n    },\n    borderWidth: '1',\n    borderColor: 'transparent',\n    borderRadius: '2'\n  };\n}\n\nfunction variantSubtle(props) {\n  var colorScheme = getColorScheme(props);\n  return {\n    bg: mode(\"\".concat(colorScheme, \".200\"), \"\".concat(colorScheme, \".700\"))(props),\n    _text: {\n      color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".200\"))(props)\n    },\n    borderWidth: '1',\n    borderRadius: '2',\n    borderColor: 'transparent'\n  };\n}\n\nfunction variantOutline(props) {\n  var colorScheme = getColorScheme(props);\n  return {\n    borderColor: mode(\"\".concat(colorScheme, \".500\"), \"\".concat(colorScheme, \".400\"))(props),\n    _text: {\n      color: mode(\"\".concat(colorScheme, \".500\"), \"\".concat(colorScheme, \".400\"))(props)\n    },\n    borderRadius: '2',\n    borderWidth: '1'\n  };\n}\n\nvar variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline\n};\nvar defaultProps = {\n  variant: 'subtle',\n  colorScheme: 'coolGray'\n};\nexport default {\n  baseStyle: baseStyle,\n  variants: variants,\n  defaultProps: defaultProps\n};\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/theme/v33x-theme/components/badge.ts"],"names":["baseStyle","px","py","alignItems","_text","fontSize","fontWeight","colorScheme","getColorScheme","bg","mode","color","borderWidth","borderColor","borderRadius","variants","solid","subtle","outline","variantOutline","defaultProps","variant"],"mappings":"AAAA,SAAA,IAAA,EAAA,cAAA,QAAA,UAAA;AAEA,IAAMA,SAAS,GAAG;EAChBC,EAAE,EADc,GAAA;EAEhBC,EAAE,EAFc,KAAA;EAGhBC,UAAU,EAHM,QAAA;EAIhBC,KAAK,EAAE;IAAEC,QAAQ,EAAV,IAAA;IAAkBC,UAAU,EAAE;EAA9B;AAJS,CAAlB;;AAOA,SAAA,YAAA,CAAA,KAAA,EAAkD;EAChD,IAAMC,WAAW,GAAGC,cAAc,CAAlC,KAAkC,CAAlC;EACA,OAAO;IACLC,EAAE,EAAEC,IAAI,CAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAJA,MAAI,CAAA,CAAJA,CADC,KACDA,CADC;IAELN,KAAK,EAAE;MAAEO,KAAK,EAAED,IAAI,CAAA,cAAA,EAAJA,cAAI,CAAJA,CAAAA,KAAAA;IAAT,CAFF;IAGLE,WAAW,EAHN,GAAA;IAILC,WAAW,EAJN,aAAA;IAKLC,YAAY,EAAE;EALT,CAAP;AAOD;;AAED,SAAA,aAAA,CAAA,KAAA,EAAmD;EACjD,IAAMP,WAAW,GAAGC,cAAc,CAAlC,KAAkC,CAAlC;EACA,OAAO;IACLC,EAAE,EAAEC,IAAI,CAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAJA,MAAI,CAAA,CAAJA,CADC,KACDA,CADC;IAELN,KAAK,EAAE;MAAEO,KAAK,EAAED,IAAI,CAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAJA,MAAI,CAAA,CAAJA,CAAAA,KAAAA;IAAT,CAFF;IAGLE,WAAW,EAHN,GAAA;IAILE,YAAY,EAJP,GAAA;IAKLD,WAAW,EAAE;EALR,CAAP;AAOD;;AAED,SAAA,cAAA,CAAA,KAAA,EAAoD;EAClD,IAAMN,WAAW,GAAGC,cAAc,CAAlC,KAAkC,CAAlC;EACA,OAAO;IACLK,WAAW,EAAEH,IAAI,CAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAJA,MAAI,CAAA,CAAJA,CADR,KACQA,CADR;IAELN,KAAK,EAAE;MAAEO,KAAK,EAAED,IAAI,CAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAJA,MAAI,CAAA,CAAJA,CAAAA,KAAAA;IAAT,CAFF;IAGLI,YAAY,EAHP,GAAA;IAILF,WAAW,EAAE;EAJR,CAAP;AAMD;;AAED,IAAMG,QAAQ,GAAG;EACfC,KAAK,EADU,YAAA;EAEfC,MAAM,EAFS,aAAA;EAGfC,OAAO,EAAEC;AAHM,CAAjB;AAMA,IAAMC,YAAY,GAAG;EACnBC,OAAO,EADY,QAAA;EAEnBd,WAAW,EAAE;AAFM,CAArB;AAKA,eAAe;EACbP,SAAS,EADI,SAAA;EAEbe,QAAQ,EAFK,QAAA;EAGbK,YAAY,EAAZA;AAHa,CAAf","sourcesContent":["import { mode, getColorScheme } from '../tools';\n\nconst baseStyle = {\n  px: '2',\n  py: '0.5',\n  alignItems: 'center',\n  _text: { fontSize: 'xs', fontWeight: 'medium' },\n};\n\nfunction variantSolid(props: Record<string, any>) {\n  const colorScheme = getColorScheme(props);\n  return {\n    bg: mode(`${colorScheme}.600`, `${colorScheme}.300`)(props),\n    _text: { color: mode(`coolGray.100`, `coolGray.800`)(props) },\n    borderWidth: '1',\n    borderColor: 'transparent',\n    borderRadius: '2',\n  };\n}\n\nfunction variantSubtle(props: Record<string, any>) {\n  const colorScheme = getColorScheme(props);\n  return {\n    bg: mode(`${colorScheme}.200`, `${colorScheme}.700`)(props),\n    _text: { color: mode(`${colorScheme}.600`, `${colorScheme}.200`)(props) },\n    borderWidth: '1',\n    borderRadius: '2',\n    borderColor: 'transparent',\n  };\n}\n\nfunction variantOutline(props: Record<string, any>) {\n  const colorScheme = getColorScheme(props);\n  return {\n    borderColor: mode(`${colorScheme}.500`, `${colorScheme}.400`)(props),\n    _text: { color: mode(`${colorScheme}.500`, `${colorScheme}.400`)(props) },\n    borderRadius: '2',\n    borderWidth: '1',\n  };\n}\n\nconst variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline,\n};\n\nconst defaultProps = {\n  variant: 'subtle',\n  colorScheme: 'coolGray',\n};\n\nexport default {\n  baseStyle,\n  variants,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"module"}