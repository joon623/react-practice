{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDimensionsWithEnable = exports.getResponsiveStylesImpl = void 0;\n\nvar _reactNative = require(\"react-native-web/dist/cjs/index\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar getResponsiveStylesImpl = function getResponsiveStylesImpl(width) {\n  return function (queries) {\n    if (typeof width === 'number') {\n      var styles = queries.initial ? [_reactNative.StyleSheet.create({\n        initial: _reactNative.StyleSheet.flatten(queries.initial)\n      }).initial] : [];\n\n      if (queries.query) {\n        queries.query.forEach(function (queryRule) {\n          if (queryRule.style) {\n            var flattenQueryStyle = _reactNative.StyleSheet.flatten(queryRule.style);\n\n            if (typeof queryRule.maxWidth === 'number' && typeof queryRule.minWidth === 'number') {\n              if (width >= queryRule.minWidth && width <= queryRule.maxWidth) {\n                styles.push(_reactNative.StyleSheet.create({\n                  rangeStyle: flattenQueryStyle\n                }).rangeStyle);\n              }\n            } else if (typeof queryRule.minWidth === 'number') {\n              if (width >= queryRule.minWidth) {\n                styles.push(_reactNative.StyleSheet.create({\n                  minWidthStyle: flattenQueryStyle\n                }).minWidthStyle);\n              }\n            } else if (typeof queryRule.maxWidth === 'number') {\n              if (width <= queryRule.maxWidth) {\n                styles.push(_reactNative.StyleSheet.create({\n                  maxWidthStyle: flattenQueryStyle\n                }).maxWidthStyle);\n              }\n            }\n          }\n        });\n        return {\n          styles: styles\n        };\n      }\n    }\n\n    return {};\n  };\n}; // The below implementation is taken from React Native's source and added a flag to conditionally attach/remove listeners\n\n\nexports.getResponsiveStylesImpl = getResponsiveStylesImpl;\n\nvar useDimensionsWithEnable = function useDimensionsWithEnable(_ref) {\n  var enable = _ref.enable;\n\n  var _react$default$useSta = _react[\"default\"].useState(function () {\n    return _reactNative.Dimensions.get('window');\n  }),\n      _react$default$useSta2 = _slicedToArray(_react$default$useSta, 2),\n      dimensions = _react$default$useSta2[0],\n      setDimensions = _react$default$useSta2[1];\n\n  _react[\"default\"].useEffect(function () {\n    if (enable) {\n      var handleChange = function handleChange(_ref2) {\n        var window = _ref2.window;\n\n        if (dimensions.width !== window.width || dimensions.height !== window.height || dimensions.scale !== window.scale || dimensions.fontScale !== window.fontScale) {\n          setDimensions(window);\n        }\n      };\n\n      _reactNative.Dimensions.addEventListener('change', handleChange); // We might have missed an update between calling `get` in render and\n      // `addEventListener` in this handler, so we set it here. If there was\n      // no change, React will filter out this update as a no-op.\n\n\n      handleChange({\n        window: _reactNative.Dimensions.get('window')\n      });\n      return function () {\n        _reactNative.Dimensions.removeEventListener('change', handleChange);\n      };\n    }\n\n    return function () {};\n  }, [dimensions, enable]);\n\n  return dimensions;\n};\n\nexports.useDimensionsWithEnable = useDimensionsWithEnable;","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/commonjs/utils/useResponsiveQuery/common.js"],"names":["Object","value","exports","_react","_interopRequireDefault","require","obj","default","getResponsiveStylesImpl","width","queries","styles","initial","_reactNative","queryRule","flattenQueryStyle","rangeStyle","minWidthStyle","maxWidthStyle","useDimensionsWithEnable","enable","window","dimensions","setDimensions","handleChange"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDimensionsWithEnable = exports.getResponsiveStylesImpl = void 0;\n\nvar _reactNative = require(\"react-native\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getResponsiveStylesImpl = width => queries => {\n  if (typeof width === 'number') {\n    let styles = queries.initial ? [_reactNative.StyleSheet.create({\n      initial: _reactNative.StyleSheet.flatten(queries.initial)\n    }).initial] : [];\n\n    if (queries.query) {\n      queries.query.forEach(queryRule => {\n        if (queryRule.style) {\n          const flattenQueryStyle = _reactNative.StyleSheet.flatten(queryRule.style);\n\n          if (typeof queryRule.maxWidth === 'number' && typeof queryRule.minWidth === 'number') {\n            if (width >= queryRule.minWidth && width <= queryRule.maxWidth) {\n              styles.push(_reactNative.StyleSheet.create({\n                rangeStyle: flattenQueryStyle\n              }).rangeStyle);\n            }\n          } else if (typeof queryRule.minWidth === 'number') {\n            if (width >= queryRule.minWidth) {\n              styles.push(_reactNative.StyleSheet.create({\n                minWidthStyle: flattenQueryStyle\n              }).minWidthStyle);\n            }\n          } else if (typeof queryRule.maxWidth === 'number') {\n            if (width <= queryRule.maxWidth) {\n              styles.push(_reactNative.StyleSheet.create({\n                maxWidthStyle: flattenQueryStyle\n              }).maxWidthStyle);\n            }\n          }\n        }\n      });\n      return {\n        styles\n      };\n    }\n  }\n\n  return {};\n}; // The below implementation is taken from React Native's source and added a flag to conditionally attach/remove listeners\n\n\nexports.getResponsiveStylesImpl = getResponsiveStylesImpl;\n\nconst useDimensionsWithEnable = ({\n  enable\n}) => {\n  const [dimensions, setDimensions] = _react.default.useState(() => _reactNative.Dimensions.get('window'));\n\n  _react.default.useEffect(() => {\n    if (enable) {\n      function handleChange({\n        window\n      }) {\n        if (dimensions.width !== window.width || dimensions.height !== window.height || dimensions.scale !== window.scale || dimensions.fontScale !== window.fontScale) {\n          setDimensions(window);\n        }\n      }\n\n      _reactNative.Dimensions.addEventListener('change', handleChange); // We might have missed an update between calling `get` in render and\n      // `addEventListener` in this handler, so we set it here. If there was\n      // no change, React will filter out this update as a no-op.\n\n\n      handleChange({\n        window: _reactNative.Dimensions.get('window')\n      });\n      return () => {\n        _reactNative.Dimensions.removeEventListener('change', handleChange);\n      };\n    }\n\n    return () => {};\n  }, [dimensions, enable]);\n\n  return dimensions;\n};\n\nexports.useDimensionsWithEnable = useDimensionsWithEnable;\n//# sourceMappingURL=common.js.map"]},"metadata":{},"sourceType":"script"}