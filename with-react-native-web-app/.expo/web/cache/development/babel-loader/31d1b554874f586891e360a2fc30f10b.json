{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { mode } from '../tools';\n\nfunction baseStyle(props) {\n  var orientation = props.orientation,\n      thickness = props.thickness;\n  var orientationProps = orientation === 'vertical' ? {\n    width: \"\".concat(thickness, \"px\"),\n    // handle for web : To be discussed\n    height: '100%'\n  } : {\n    width: '100%',\n    height: \"\".concat(thickness, \"px\")\n  };\n  return _objectSpread({\n    bg: mode('coolGray.200', 'gray.600')(props)\n  }, orientationProps);\n}\n\nexport default {\n  baseStyle: baseStyle,\n  defaultProps: {\n    orientation: 'horizontal',\n    thickness: '1'\n  }\n};","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/theme/v33x-theme/components/divider.ts"],"names":["thickness","orientationProps","width","height","bg","mode","baseStyle","defaultProps","orientation"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,IAAA,QAAA,UAAA;;AAEA,SAAA,SAAA,CAAA,KAAA,EAA+C;EAC7C,IAAM,WAAN,GAAA,KAAA,CAAM,WAAN;EAAA,IAAqBA,SAArB,GAAA,KAAA,CAAqBA,SAArB;EACA,IAAMC,gBAAgB,GACpB,WAAW,KAAX,UAAA,GACI;IACEC,KAAK,YADP,SACO,OADP;IAC2B;IACzBC,MAAM,EAAE;EAFV,CADJ,GAKI;IACED,KAAK,EADP,MAAA;IAEEC,MAAM,YAAKH,SAAL;EAFR,CANN;EAWA,OAAA,aAAA,CAAA;IACEI,EAAE,EAAEC,IAAI,CAAA,cAAA,EAAJA,UAAI,CAAJA,CAAAA,KAAAA;EADN,CAAA,EAAA,gBAAA,CAAA;AAID;;AAED,eAAe;EACbC,SADa,EACbA,SADa;EAEbC,YAAY,EAAE;IACZC,WAAW,EADC,YAAA;IAEZR,SAAS,EAAE;EAFC;AAFD,CAAf","sourcesContent":["import { mode } from '../tools';\n\nfunction baseStyle(props: Record<string, any>) {\n  const { orientation, thickness } = props;\n  const orientationProps =\n    orientation === 'vertical'\n      ? {\n          width: `${thickness}px`, // handle for web : To be discussed\n          height: '100%',\n        }\n      : {\n          width: '100%',\n          height: `${thickness}px`,\n        };\n\n  return {\n    bg: mode('coolGray.200', 'gray.600')(props),\n    ...orientationProps,\n  };\n}\n\nexport default {\n  baseStyle,\n  defaultProps: {\n    orientation: 'horizontal',\n    thickness: '1',\n  },\n};\n"]},"metadata":{},"sourceType":"module"}