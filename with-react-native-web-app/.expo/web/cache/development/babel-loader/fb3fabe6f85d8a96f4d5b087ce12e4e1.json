{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = usePressEvents;\n\nvar _PressResponder = _interopRequireDefault(require(\"./PressResponder\"));\n\nvar _react = require(\"react\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction usePressEvents(hostRef, config) {\n  var pressResponderRef = (0, _react.useRef)(null);\n\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new _PressResponder[\"default\"](config);\n  }\n\n  var pressResponder = pressResponderRef.current; // Re-configure to use the current node and configuration.\n\n  (0, _react.useEffect)(function () {\n    pressResponder.configure(config);\n  }, [config, pressResponder]); // Reset the `pressResponder` when cleanup needs to occur. This is\n  // a separate effect because we do not want to rest the responder when `config` changes.\n\n  (0, _react.useEffect)(function () {\n    return function () {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  (0, _react.useDebugValue)(config);\n  return pressResponder.getEventHandlers();\n}\n\nmodule.exports = exports[\"default\"];\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/cjs/hooks/usePressEvents/index.js"],"names":["exports","_PressResponder","_interopRequireDefault","require","_react","obj","pressResponderRef","pressResponder","module"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,OAAO,CAAPA,UAAAA,GAAAA,IAAAA;AACAA,OAAO,CAAPA,SAAO,CAAPA,GAAAA,cAAAA;;AAEA,IAAIC,eAAe,GAAGC,sBAAsB,CAACC,OAAO,CAApD,kBAAoD,CAAR,CAA5C;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAApB,OAAoB,CAApB;;AAEA,SAAA,sBAAA,CAAA,GAAA,EAAqC;EAAE,OAAOE,GAAG,IAAIA,GAAG,CAAVA,UAAAA,GAAAA,GAAAA,GAA8B;IAAE,WAASA;EAAX,CAArC;AAAwD;;AAE/F,SAAA,cAAA,CAAA,OAAA,EAAA,MAAA,EAAyC;EACvC,IAAIC,iBAAiB,GAAG,CAAC,GAAGF,MAAM,CAAV,MAAA,EAAxB,IAAwB,CAAxB;;EAEA,IAAIE,iBAAiB,CAAjBA,OAAAA,IAAJ,IAAA,EAAuC;IACrCA,iBAAiB,CAAjBA,OAAAA,GAA4B,IAAIL,eAAe,CAAnB,SAAmB,CAAnB,CAA5BK,MAA4B,CAA5BA;EACD;;EAED,IAAIC,cAAc,GAAGD,iBAAiB,CAPC,OAOvC,CAPuC,CAOS;;EAEhD,CAAC,GAAGF,MAAM,CAAV,SAAA,EAAsB,YAAY;IAChCG,cAAc,CAAdA,SAAAA,CAAAA,MAAAA;EADF,CAAA,EAEG,CAAA,MAAA,EAXoC,cAWpC,CAFH,EATuC,CAWT;EAC9B;;EAEA,CAAC,GAAGH,MAAM,CAAV,SAAA,EAAsB,YAAY;IAChC,OAAO,YAAY;MACjBG,cAAc,CAAdA,KAAAA;IADF,CAAA;EADF,CAAA,EAIG,CAJH,cAIG,CAJH;EAKA,CAAC,GAAGH,MAAM,CAAV,aAAA,EAAA,MAAA;EACA,OAAOG,cAAc,CAArB,gBAAOA,EAAP;AACD;;AAEDC,MAAM,CAANA,OAAAA,GAAiBR,OAAO,CAAxBQ,SAAwB,CAAxBA","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nexports.__esModule = true;\nexports.default = usePressEvents;\n\nvar _PressResponder = _interopRequireDefault(require(\"./PressResponder\"));\n\nvar _react = require(\"react\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction usePressEvents(hostRef, config) {\n  var pressResponderRef = (0, _react.useRef)(null);\n\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new _PressResponder.default(config);\n  }\n\n  var pressResponder = pressResponderRef.current; // Re-configure to use the current node and configuration.\n\n  (0, _react.useEffect)(function () {\n    pressResponder.configure(config);\n  }, [config, pressResponder]); // Reset the `pressResponder` when cleanup needs to occur. This is\n  // a separate effect because we do not want to rest the responder when `config` changes.\n\n  (0, _react.useEffect)(function () {\n    return function () {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  (0, _react.useDebugValue)(config);\n  return pressResponder.getEventHandlers();\n}\n\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"module"}