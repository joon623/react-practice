{"ast":null,"code":"import _slicedToArray from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nvar _excluded = [\"wrapperRef\", \"isDisabled\", \"isInvalid\", \"isReadOnly\", \"isFocused\", \"isHovered\"],\n    _excluded2 = [\"totalLines\", \"onFocus\", \"onBlur\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { Input } from '../Input';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils';\n\nvar TextArea = function TextArea(_ref2, ref) {\n  _s();\n\n  var wrapperRef = _ref2.wrapperRef,\n      isDisabled = _ref2.isDisabled,\n      isInvalid = _ref2.isInvalid,\n      isReadOnly = _ref2.isReadOnly,\n      isFocusedProp = _ref2.isFocused,\n      isHoveredProp = _ref2.isHovered,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  var _ref = React.useRef(null);\n\n  var _useHover = useHover({}, _ref),\n      isHovered = _useHover.isHovered;\n\n  var _React$useState = React.useState(isFocusedProp),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isFocused = _React$useState2[0],\n      setIsFocused = _React$useState2[1];\n\n  var handleFocus = function handleFocus(focusState, callback) {\n    setIsFocused(focusState);\n    callback();\n  };\n\n  var _usePropsResolution = usePropsResolution('TextArea', props, {\n    isHovered: isHoveredProp || isHovered,\n    isDisabled: isDisabled,\n    isFocused: isFocused,\n    isInvalid: isInvalid,\n    isReadOnly: isReadOnly\n  }, {\n    extendTheme: ['Input']\n  }),\n      totalLines = _usePropsResolution.totalLines,\n      _onFocus = _usePropsResolution.onFocus,\n      _onBlur = _usePropsResolution.onBlur,\n      newProps = _objectWithoutProperties(_usePropsResolution, _excluded2); //TODO: refactor for responsive prop\n\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Input, _extends({}, newProps, {\n    INTERNAL_notResolveThemeAndPseudoProps: true,\n    numberOfLines: totalLines,\n    wrapperRef: wrapperRef,\n    ref: mergeRefs([_ref, ref]),\n    onFocus: function onFocus(e) {\n      handleFocus(true, _onFocus ? function () {\n        return _onFocus(e);\n      } : function () {});\n    },\n    onBlur: function onBlur(e) {\n      handleFocus(false, _onBlur ? function () {\n        return _onBlur(e);\n      } : function () {});\n    },\n    isDisabled: isDisabled,\n    isInvalid: isInvalid,\n    isReadOnly: isReadOnly\n  }));\n};\n\n_s(TextArea, \"ZyNsi5l3TlojgEROSzmO9+bJ+9A=\", false, function () {\n  return [useHover, usePropsResolution, useHasResponsiveProps];\n});\n\n_c = TextArea;\nexport default /*#__PURE__*/_c3 = /*#__PURE__*/memo( /*#__PURE__*/_c2 = /*#__PURE__*/forwardRef(TextArea));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TextArea\");\n$RefreshReg$(_c2, \"%default%$memo\");\n$RefreshReg$(_c3, \"%default%\");\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/module/components/primitives/TextArea/index.js"],"names":["_extends","Object","i","arguments","source","target","TextArea","wrapperRef","isDisabled","isInvalid","isReadOnly","isFocused","isFocusedProp","isHovered","isHoveredProp","props","_ref","React","useHover","setIsFocused","handleFocus","callback","totalLines","onFocus","onBlur","newProps","usePropsResolution","extendTheme","useHasResponsiveProps","INTERNAL_notResolveThemeAndPseudoProps","numberOfLines","ref","mergeRefs","memo","forwardRef"],"mappings":";;;;;;;;AAAA,SAAA,QAAA,GAAoB;EAAEA,QAAQ,GAAGC,MAAM,CAANA,MAAAA,IAAiB,UAAA,MAAA,EAAkB;IAAE,KAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGC,SAAS,CAA7B,MAAA,EAAsCD,CAAtC,EAAA,EAA2C;MAAE,IAAIE,MAAM,GAAGD,SAAS,CAAtB,CAAsB,CAAtB;;MAA2B,KAAK,IAAL,GAAA,IAAA,MAAA,EAAwB;QAAE,IAAIF,MAAM,CAANA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAAJ,GAAIA,CAAJ,EAAuD;UAAEI,MAAM,CAANA,GAAM,CAANA,GAAcD,MAAM,CAApBC,GAAoB,CAApBA;QAA4B;MAAE;IAAE;;IAAC,OAAA,MAAA;EAA5OL,CAAAA;;EAA8P,OAAOA,QAAQ,CAARA,KAAAA,CAAAA,IAAAA,EAAP,SAAOA,CAAP;AAAyC;;AAE7T,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,SAAA,KAAA,QAAA,UAAA;AACA,SAAA,kBAAA,QAAA,8BAAA;AACA,SAAA,qBAAA,QAAA,sCAAA;AACA,SAAA,QAAA,QAAA,iCAAA;AACA,SAAA,SAAA,QAAA,gBAAA;;AAEA,IAAMM,QAAQ,GAAG,SAAXA,QAAW,CAAA,KAAA,EAAA,GAAA,EAQN;EAAA,EAAA;;EAAA,IAPTC,UAOS,GAAA,KAAA,CAPTA,UAOS;EAAA,IANTC,UAMS,GAAA,KAAA,CANTA,UAMS;EAAA,IALTC,SAKS,GAAA,KAAA,CALTA,SAKS;EAAA,IAJTC,UAIS,GAAA,KAAA,CAJTA,UAIS;EAAA,IAHEE,aAGF,GAAA,KAAA,CAHTD,SAGS;EAAA,IAFEG,aAEF,GAAA,KAAA,CAFTD,SAES;EAAA,IADNE,KACM,GAAA,wBAAA,CAAA,KAAA,EAAA,SAAA,CAAA;;EACT,IAAMC,IAAI,GAAGC,KAAK,CAALA,MAAAA,CAAb,IAAaA,CAAb;;EAEA,IAAA,SAAA,GAEIC,QAAQ,CAAA,EAAA,EAFZ,IAEY,CAFZ;EAAA,IACEL,SADF,GAAA,SAAA,CAAA,SAAA;;EAGA,IAAA,eAAA,GAAkCI,KAAK,CAALA,QAAAA,CAAlC,aAAkCA,CAAlC;EAAA,IAAA,gBAAA,GAAA,cAAA,CAAA,eAAA,EAAA,CAAA,CAAA;EAAA,IAAON,SAAP,GAAA,gBAAA,CAAA,CAAA,CAAA;EAAA,IAAkBQ,YAAlB,GAAA,gBAAA,CAAA,CAAA,CAAA;;EAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAA,UAAA,EAAA,QAAA,EAA0B;IAC5CD,YAAY,CAAZA,UAAY,CAAZA;IACAE,QAAQ;EAFV,CAAA;;EAKA,IAAA,mBAAA,GAKIK,kBAAkB,CAAA,UAAA,EAAA,KAAA,EAAoB;IACxCb,SAAS,EAAEC,aAAa,IADgB,SAAA;IAExCN,UAAU,EAF8B,UAAA;IAGxCG,SAAS,EAH+B,SAAA;IAIxCF,SAAS,EAJ+B,SAAA;IAKxCC,UAAU,EAAVA;EALwC,CAApB,EAMnB;IACDiB,WAAW,EAAE,CAAA,OAAA;EADZ,CANmB,CALtB;EAAA,IACEL,UADF,GAAA,mBAAA,CAAA,UAAA;EAAA,IAEEC,QAFF,GAAA,mBAAA,CAAA,OAAA;EAAA,IAGEC,OAHF,GAAA,mBAAA,CAAA,MAAA;EAAA,IAIKC,QAJL,GAAA,wBAAA,CAAA,mBAAA,EAbS,UAaT,CAAA,CAbS,CA0BL;;;EAEJ,IAAIG,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EAED,OAAO,aAAa,KAAK,CAAL,aAAA,CAAA,KAAA,EAA2B5B,QAAQ,CAAA,EAAA,EAAA,QAAA,EAAe;IACpE6B,sCAAsC,EAD8B,IAAA;IAEpEC,aAAa,EAFuD,UAAA;IAGpEvB,UAAU,EAH0D,UAAA;IAIpEwB,GAAG,EAAEC,SAAS,CAAC,CAAA,IAAA,EAJqD,GAIrD,CAAD,CAJsD;IAKpET,OAAO,EAAE,SAAA,OAAA,CAAA,CAAA,EAAK;MACZH,WAAW,CAAA,IAAA,EAAOG,QAAO,GAAG,YAAA;QAAA,OAAMA,QAAO,CAAb,CAAa,CAAb;MAAH,CAAA,GAAsB,YAAM,CAArDH,CAAW,CAAXA;IANkE,CAAA;IAQpEI,MAAM,EAAE,SAAA,MAAA,CAAA,CAAA,EAAK;MACXJ,WAAW,CAAA,KAAA,EAAQI,OAAM,GAAG,YAAA;QAAA,OAAMA,OAAM,CAAZ,CAAY,CAAZ;MAAH,CAAA,GAAqB,YAAM,CAApDJ,CAAW,CAAXA;IATkE,CAAA;IAWpEZ,UAAU,EAX0D,UAAA;IAYpEC,SAAS,EAZ2D,SAAA;IAapEC,UAAU,EAAEA;EAbwD,CAAf,CAAnC,CAApB;AAxCF,CAAA;;GAAMJ,Q;UAaAY,Q,EAaAQ,kB,EAUAE,qB;;;KApCAtB,Q;AAyDN,eAAe,aAAf,GAAA,GAAA,aAA4B2B,IAAI,EAAE,aAAF,GAAA,GAAA,aAAeC,UAAU,CAAzD,QAAyD,CAAzB,CAAhC","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, forwardRef } from 'react';\nimport { Input } from '../Input';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils';\n\nconst TextArea = ({\n  wrapperRef,\n  isDisabled,\n  isInvalid,\n  isReadOnly,\n  isFocused: isFocusedProp,\n  isHovered: isHoveredProp,\n  ...props\n}, ref) => {\n  const _ref = React.useRef(null);\n\n  const {\n    isHovered\n  } = useHover({}, _ref);\n  const [isFocused, setIsFocused] = React.useState(isFocusedProp);\n\n  const handleFocus = (focusState, callback) => {\n    setIsFocused(focusState);\n    callback();\n  };\n\n  const {\n    totalLines,\n    onFocus,\n    onBlur,\n    ...newProps\n  } = usePropsResolution('TextArea', props, {\n    isHovered: isHoveredProp || isHovered,\n    isDisabled,\n    isFocused,\n    isInvalid,\n    isReadOnly\n  }, {\n    extendTheme: ['Input']\n  }); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Input, _extends({}, newProps, {\n    INTERNAL_notResolveThemeAndPseudoProps: true,\n    numberOfLines: totalLines,\n    wrapperRef: wrapperRef,\n    ref: mergeRefs([_ref, ref]),\n    onFocus: e => {\n      handleFocus(true, onFocus ? () => onFocus(e) : () => {});\n    },\n    onBlur: e => {\n      handleFocus(false, onBlur ? () => onBlur(e) : () => {});\n    },\n    isDisabled: isDisabled,\n    isInvalid: isInvalid,\n    isReadOnly: isReadOnly\n  }));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(TextArea));\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}