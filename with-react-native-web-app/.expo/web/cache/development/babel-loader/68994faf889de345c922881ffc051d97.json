{"ast":null,"code":"/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport ReactNativePropRegistry from './ReactNativePropRegistry';\nimport invariant from 'fbjs/lib/invariant';\n\nfunction getStyle(style) {\n  if (typeof style === 'number') {\n    return ReactNativePropRegistry.getByID(style);\n  }\n\n  return style;\n}\n\nfunction flattenStyle(style) {\n  if (!style) {\n    return undefined;\n  }\n\n  if (true) {\n    invariant(style !== true, 'style may be false but not true');\n  }\n\n  if (!Array.isArray(style)) {\n    return getStyle(style);\n  }\n\n  var result = {};\n\n  for (var i = 0, styleLength = style.length; i < styleLength; ++i) {\n    var computedStyle = flattenStyle(style[i]);\n\n    if (computedStyle) {\n      for (var key in computedStyle) {\n        var value = computedStyle[key];\n        result[key] = value;\n      }\n    }\n  }\n\n  return result;\n}\n\nexport default flattenStyle;","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/exports/StyleSheet/flattenStyle.js"],"names":["ReactNativePropRegistry","invariant","style","Array","getStyle","result","i","styleLength","computedStyle","flattenStyle","value"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAA,uBAAA,MAAA,2BAAA;AACA,OAAA,SAAA,MAAA,oBAAA;;AAEA,SAAA,QAAA,CAAA,KAAA,EAAyB;EACvB,IAAI,OAAA,KAAA,KAAJ,QAAA,EAA+B;IAC7B,OAAOA,uBAAuB,CAAvBA,OAAAA,CAAP,KAAOA,CAAP;EACD;;EAED,OAAA,KAAA;AACD;;AAED,SAAA,YAAA,CAAA,KAAA,EAA6B;EAC3B,IAAI,CAAJ,KAAA,EAAY;IACV,OAAA,SAAA;EACD;;EAED,IAAA,IAAA,EAA2C;IACzCC,SAAS,CAACC,KAAK,KAAN,IAAA,EAATD,iCAAS,CAATA;EACD;;EAED,IAAI,CAACE,KAAK,CAALA,OAAAA,CAAL,KAAKA,CAAL,EAA2B;IACzB,OAAOC,QAAQ,CAAf,KAAe,CAAf;EACD;;EAED,IAAIC,MAAM,GAAV,EAAA;;EAEA,KAAK,IAAIC,CAAC,GAAL,CAAA,EAAWC,WAAW,GAAGL,KAAK,CAAnC,MAAA,EAA4CI,CAAC,GAA7C,WAAA,EAA6D,EAA7D,CAAA,EAAkE;IAChE,IAAIE,aAAa,GAAGC,YAAY,CAACP,KAAK,CAAtC,CAAsC,CAAN,CAAhC;;IAEA,IAAA,aAAA,EAAmB;MACjB,KAAK,IAAL,GAAA,IAAA,aAAA,EAA+B;QAC7B,IAAIQ,KAAK,GAAGF,aAAa,CAAzB,GAAyB,CAAzB;QACAH,MAAM,CAANA,GAAM,CAANA,GAAAA,KAAAA;MACD;IACF;EACF;;EAED,OAAA,MAAA;AACD;;AAED,eAAA,YAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport ReactNativePropRegistry from './ReactNativePropRegistry';\nimport invariant from 'fbjs/lib/invariant';\n\nfunction getStyle(style) {\n  if (typeof style === 'number') {\n    return ReactNativePropRegistry.getByID(style);\n  }\n\n  return style;\n}\n\nfunction flattenStyle(style) {\n  if (!style) {\n    return undefined;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(style !== true, 'style may be false but not true');\n  }\n\n  if (!Array.isArray(style)) {\n    return getStyle(style);\n  }\n\n  var result = {};\n\n  for (var i = 0, styleLength = style.length; i < styleLength; ++i) {\n    var computedStyle = flattenStyle(style[i]);\n\n    if (computedStyle) {\n      for (var key in computedStyle) {\n        var value = computedStyle[key];\n        result[key] = value;\n      }\n    }\n  }\n\n  return result;\n}\n\nexport default flattenStyle;"]},"metadata":{},"sourceType":"module"}