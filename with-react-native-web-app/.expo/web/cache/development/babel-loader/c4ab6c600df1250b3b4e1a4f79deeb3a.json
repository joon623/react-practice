{"ast":null,"code":"import _defineProperty from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nvar _excluded = [\"disabled\", \"isDisabled\", \"isInvalid\", \"isChecked\", \"defaultIsChecked\", \"accessibilityLabel\", \"accessibilityHint\", \"onToggle\", \"value\", \"onValueChange\", \"isHovered\"],\n    _excluded2 = [\"onTrackColor\", \"offTrackColor\", \"onThumbColor\", \"offThumbColor\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { useToggleState } from '@react-stately/toggle';\nimport RNSwitch from \"react-native-web/dist/cjs/exports/Switch\";\nimport isNil from 'lodash.isnil';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useToken } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { mergeRefs } from '../../../utils';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useFormControlContext } from '../../composites/FormControl';\nimport { combineContextAndProps } from '../../../utils';\nvar StyledNBSwitch = makeStyledComponent(RNSwitch); // TODO: Needs proper refactor\n\n_c = StyledNBSwitch;\n\nvar Switch = function Switch(_ref2, ref) {\n  _s();\n\n  var disabled = _ref2.disabled,\n      isDisabled = _ref2.isDisabled,\n      isInvalid = _ref2.isInvalid,\n      isChecked = _ref2.isChecked,\n      defaultIsChecked = _ref2.defaultIsChecked,\n      accessibilityLabel = _ref2.accessibilityLabel,\n      accessibilityHint = _ref2.accessibilityHint,\n      onToggle = _ref2.onToggle,\n      value = _ref2.value,\n      _onValueChange = _ref2.onValueChange,\n      isHoveredProp = _ref2.isHovered,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  var formControlContext = useFormControlContext();\n  var combinedProps = combineContextAndProps(formControlContext, props);\n  var state = useToggleState({\n    defaultSelected: !isNil(defaultIsChecked) ? defaultIsChecked : false\n  });\n  var checked = !isNil(isChecked) ? isChecked : state.isSelected;\n\n  var _ref = React.useRef(null);\n\n  var _useHover = useHover({}, _ref),\n      isHovered = _useHover.isHovered;\n\n  var _usePropsResolution = usePropsResolution('Switch', props, {\n    isHovered: isHoveredProp || isHovered,\n    isDisabled: disabled || isDisabled || combinedProps.isDisabled,\n    isInvalid: isInvalid || combinedProps.isInvalid,\n    isChecked: checked\n  }),\n      _onTrackColor = _usePropsResolution.onTrackColor,\n      _offTrackColor = _usePropsResolution.offTrackColor,\n      _onThumbColor = _usePropsResolution.onThumbColor,\n      _offThumbColor = _usePropsResolution.offThumbColor,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  var onTrackColor = useToken('colors', _onTrackColor);\n  var offTrackColor = useToken('colors', _offTrackColor);\n  var onThumbColor = useToken('colors', _onThumbColor);\n  var offThumbColor = useToken('colors', _offThumbColor); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(_objectSpread(_objectSpread({}, props), {}, {\n    isDisabled: isDisabled,\n    isInvalid: isInvalid,\n    isChecked: isChecked,\n    defaultIsChecked: defaultIsChecked,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityHint: accessibilityHint\n  }))) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(StyledNBSwitch, _extends({\n    accessibilityLabel: accessibilityLabel,\n    accessibilityHint: accessibilityHint,\n    trackColor: {\n      \"false\": offTrackColor,\n      \"true\": onTrackColor\n    },\n    thumbColor: checked ? onThumbColor : offThumbColor,\n    activeThumbColor: onThumbColor // react-native-web prop for active thumbColor\n    ,\n    ios_backgroundColor: offTrackColor\n  }, resolvedProps, {\n    disabled: disabled || isDisabled || combinedProps.isDisabled,\n    onValueChange: function onValueChange(val) {\n      _onValueChange && _onValueChange(val);\n      onToggle ? onToggle() : state.toggle();\n    },\n    value: value || checked,\n    ref: mergeRefs([ref, _ref])\n  }));\n};\n\n_s(Switch, \"KpJNf/iQpjXpiAzyviXcVGDLxJg=\", false, function () {\n  return [useFormControlContext, useToggleState, useHover, usePropsResolution, useToken, useToken, useToken, useToken, useHasResponsiveProps];\n});\n\n_c2 = Switch;\nexport default /*#__PURE__*/_c4 = /*#__PURE__*/memo( /*#__PURE__*/_c3 = /*#__PURE__*/forwardRef(Switch));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledNBSwitch\");\n$RefreshReg$(_c2, \"Switch\");\n$RefreshReg$(_c3, \"%default%$memo\");\n$RefreshReg$(_c4, \"%default%\");\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/module/components/primitives/Switch/index.js"],"names":["_extends","Object","i","arguments","source","target","StyledNBSwitch","makeStyledComponent","Switch","disabled","isDisabled","isInvalid","isChecked","defaultIsChecked","accessibilityLabel","accessibilityHint","onToggle","value","onValueChange","isHovered","isHoveredProp","props","formControlContext","useFormControlContext","combinedProps","combineContextAndProps","state","useToggleState","defaultSelected","isNil","checked","_ref","React","useHover","_onTrackColor","_offTrackColor","_onThumbColor","_offThumbColor","resolvedProps","usePropsResolution","onTrackColor","useToken","offTrackColor","onThumbColor","offThumbColor","useHasResponsiveProps","trackColor","thumbColor","activeThumbColor","ios_backgroundColor","ref","mergeRefs","memo","forwardRef"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, forwardRef } from 'react';\nimport { useToggleState } from '@react-stately/toggle';\nimport { Switch as RNSwitch } from 'react-native';\nimport isNil from 'lodash.isnil';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useToken } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { mergeRefs } from '../../../utils';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useFormControlContext } from '../../composites/FormControl';\nimport { combineContextAndProps } from '../../../utils';\nconst StyledNBSwitch = makeStyledComponent(RNSwitch); // TODO: Needs proper refactor\n\nconst Switch = ({\n  disabled,\n  isDisabled,\n  isInvalid,\n  isChecked,\n  defaultIsChecked,\n  accessibilityLabel,\n  accessibilityHint,\n  onToggle,\n  value,\n  onValueChange,\n  isHovered: isHoveredProp,\n  ...props\n}, ref) => {\n  const formControlContext = useFormControlContext();\n  const combinedProps = combineContextAndProps(formControlContext, props);\n  const state = useToggleState({\n    defaultSelected: !isNil(defaultIsChecked) ? defaultIsChecked : false\n  });\n  const checked = !isNil(isChecked) ? isChecked : state.isSelected;\n\n  const _ref = React.useRef(null);\n\n  const {\n    isHovered\n  } = useHover({}, _ref);\n  const {\n    onTrackColor: _onTrackColor,\n    offTrackColor: _offTrackColor,\n    onThumbColor: _onThumbColor,\n    offThumbColor: _offThumbColor,\n    ...resolvedProps\n  } = usePropsResolution('Switch', props, {\n    isHovered: isHoveredProp || isHovered,\n    isDisabled: disabled || isDisabled || combinedProps.isDisabled,\n    isInvalid: isInvalid || combinedProps.isInvalid,\n    isChecked: checked\n  });\n  const onTrackColor = useToken('colors', _onTrackColor);\n  const offTrackColor = useToken('colors', _offTrackColor);\n  const onThumbColor = useToken('colors', _onThumbColor);\n  const offThumbColor = useToken('colors', _offThumbColor); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps({ ...props,\n    isDisabled,\n    isInvalid,\n    isChecked,\n    defaultIsChecked,\n    accessibilityLabel,\n    accessibilityHint\n  })) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(StyledNBSwitch, _extends({\n    accessibilityLabel: accessibilityLabel,\n    accessibilityHint: accessibilityHint,\n    trackColor: {\n      false: offTrackColor,\n      true: onTrackColor\n    },\n    thumbColor: checked ? onThumbColor : offThumbColor,\n    activeThumbColor: onThumbColor // react-native-web prop for active thumbColor\n    ,\n    ios_backgroundColor: offTrackColor\n  }, resolvedProps, {\n    disabled: disabled || isDisabled || combinedProps.isDisabled,\n    onValueChange: val => {\n      onValueChange && onValueChange(val);\n      onToggle ? onToggle() : state.toggle();\n    },\n    value: value || checked,\n    ref: mergeRefs([ref, _ref])\n  }));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Switch));\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}