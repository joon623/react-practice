{"ast":null,"code":"var _this = this;\n\nvar _jsxFileName = \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/components/primitives/Stack/VStack.tsx\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { memo, forwardRef } from 'react';\nimport StackMain from './Stack';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar VStack = function VStack(props, ref) {\n  var resolvedProps = usePropsResolution('VStack', props); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(StackMain, _objectSpread({\n    ref: ref\n  }, resolvedProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, _this);\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(VStack));","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/components/primitives/Stack/VStack.tsx"],"names":["VStack","resolvedProps","usePropsResolution","useHasResponsiveProps","ref","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,OAAA,SAAA,MAAA,SAAA;AACA,SAAA,kBAAA,QAAA,8BAAA;AAEA,SAAA,qBAAA,QAAA,sCAAA;;;AAaA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAA,KAAA,EAAA,GAAA,EAAoC;EACjD,IAAMC,aAAa,GAAGC,kBAAkB,CAAA,QAAA,EADS,KACT,CAAxC,CADiD,CAEjD;;EACA,IAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EACD,OAAA,aAAO,OAAA,CAAA,SAAA,EAAA,aAAA,CAAA;IAAW,GAAG,EAAEC;EAAhB,CAAA,EAAA,aAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;IAAA,QAAA,EAAA,YAAA;IAAA,UAAA,EAAA,EAAA;IAAA,YAAA,EAAA;EAAA,CAAA,EAAP,KAAO,CAAP;AANF,CAAA;;AASA,eAAA,aAAeC,IAAI,EAAA,aAACC,UAAU,CAA9B,MAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport StackMain, { InterfaceStackProps } from './Stack';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { CustomProps, ResponsiveValue } from '../../types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nexport interface InterfaceVStackProps extends InterfaceStackProps {\n  /**\n   * The direction of the Stack Items.\n   * @default column\n   */\n  direction?: ResponsiveValue<\n    'column' | 'row' | 'column-reverse' | 'row-reverse'\n  >;\n}\n\nexport type IVStackProps = InterfaceVStackProps & CustomProps<'VStack'>;\n\nconst VStack = (props: IVStackProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('VStack', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <StackMain ref={ref} {...resolvedProps} />;\n};\n\nexport default memo(forwardRef(VStack));\n"]},"metadata":{},"sourceType":"module"}