{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * A Utility class for calculating viewable items based on current metrics like scroll position and\n * layout.\n *\n * An item is said to be in a \"viewable\" state when any of the following\n * is true for longer than `minimumViewTime` milliseconds (after an interaction if `waitForInteraction`\n * is true):\n *\n * - Occupying >= `viewAreaCoveragePercentThreshold` of the view area XOR fraction of the item\n *   visible in the view area >= `itemVisiblePercentThreshold`.\n * - Entirely visible on screen\n */\n\n\nvar ViewabilityHelper = /*#__PURE__*/function () {\n  /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an error\n   * found when Flow v0.63 was deployed. To see the error delete this comment\n   * and run Flow. */\n  function ViewabilityHelper(config) {\n    if (config === void 0) {\n      config = {\n        viewAreaCoveragePercentThreshold: 0\n      };\n    }\n\n    this._hasInteracted = false;\n    this._timers = new Set();\n    this._viewableIndices = [];\n    this._viewableItems = new Map();\n    this._config = config;\n  }\n  /**\n   * Cleanup, e.g. on unmount. Clears any pending timers.\n   */\n\n\n  var _proto = ViewabilityHelper.prototype;\n\n  _proto.dispose = function dispose() {\n    this._timers.forEach(clearTimeout);\n  }\n  /**\n   * Determines which items are viewable based on the current metrics and config.\n   */\n  ;\n\n  _proto.computeViewableItems = function computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange) {\n    var _this$_config = this._config,\n        itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,\n        viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;\n    var viewAreaMode = viewAreaCoveragePercentThreshold != null;\n    var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;\n    (0, _invariant[\"default\"])(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');\n    var viewableIndices = [];\n\n    if (itemCount === 0) {\n      return viewableIndices;\n    }\n\n    var firstVisible = -1;\n\n    var _ref = renderRange || {\n      first: 0,\n      last: itemCount - 1\n    },\n        first = _ref.first,\n        last = _ref.last;\n\n    if (last >= itemCount) {\n      console.warn('Invalid render range computing viewability ' + JSON.stringify({\n        renderRange: renderRange,\n        itemCount: itemCount\n      }));\n      return [];\n    }\n\n    for (var idx = first; idx <= last; idx++) {\n      var metrics = getFrameMetrics(idx);\n\n      if (!metrics) {\n        continue;\n      }\n\n      var top = metrics.offset - scrollOffset;\n      var bottom = top + metrics.length;\n\n      if (top < viewportHeight && bottom > 0) {\n        firstVisible = idx;\n\n        if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {\n          viewableIndices.push(idx);\n        }\n      } else if (firstVisible >= 0) {\n        break;\n      }\n    }\n\n    return viewableIndices;\n  }\n  /**\n   * Figures out which items are viewable and how that has changed from before and calls\n   * `onViewableItemsChanged` as appropriate.\n   */\n  ;\n\n  _proto.onUpdate = function onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange) {\n    var _this = this;\n\n    if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0)) {\n      return;\n    }\n\n    var viewableIndices = [];\n\n    if (itemCount) {\n      viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);\n    }\n\n    if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {\n      return v === viewableIndices[ii];\n    })) {\n      // We might get a lot of scroll events where visibility doesn't change and we don't want to do\n      // extra work in those cases.\n      return;\n    }\n\n    this._viewableIndices = viewableIndices;\n\n    if (this._config.minimumViewTime) {\n      var handle = setTimeout(function () {\n        _this._timers[\"delete\"](handle);\n\n        _this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n      }, this._config.minimumViewTime);\n\n      this._timers.add(handle);\n    } else {\n      this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n    }\n  }\n  /**\n   * clean-up cached _viewableIndices to evaluate changed items on next update\n   */\n  ;\n\n  _proto.resetViewableIndices = function resetViewableIndices() {\n    this._viewableIndices = [];\n  }\n  /**\n   * Records that an interaction has happened even if there has been no scroll.\n   */\n  ;\n\n  _proto.recordInteraction = function recordInteraction() {\n    this._hasInteracted = true;\n  };\n\n  _proto._onUpdateSync = function _onUpdateSync( // $FlowFixMe\n  viewableIndicesToCheck, // $FlowFixMe\n  onViewableItemsChanged, // $FlowFixMe\n  createViewToken) {\n    var _this2 = this; // Filter out indices that have gone out of view since this call was scheduled.\n\n\n    viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {\n      return _this2._viewableIndices.includes(ii);\n    });\n    var prevItems = this._viewableItems;\n    var nextItems = new Map(viewableIndicesToCheck.map(function (ii) {\n      var viewable = createViewToken(ii, true);\n      return [viewable.key, viewable];\n    }));\n    var changed = [];\n\n    for (var _iterator = nextItems, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref2 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref2 = _i.value;\n      }\n\n      var _ref4 = _ref2,\n          key = _ref4[0],\n          viewable = _ref4[1];\n\n      if (!prevItems.has(key)) {\n        changed.push(viewable);\n      }\n    }\n\n    for (var _iterator2 = prevItems, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref3 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref3 = _i2.value;\n      }\n\n      var _ref5 = _ref3,\n          _key = _ref5[0],\n          _viewable = _ref5[1];\n\n      if (!nextItems.has(_key)) {\n        changed.push(_objectSpread({}, _viewable, {\n          isViewable: false\n        }));\n      }\n    }\n\n    if (changed.length > 0) {\n      this._viewableItems = nextItems;\n      onViewableItemsChanged({\n        viewableItems: Array.from(nextItems.values()),\n        changed: changed,\n        viewabilityConfig: this._config\n      });\n    }\n  };\n\n  return ViewabilityHelper;\n}();\n\nfunction _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {\n  if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n    return true;\n  } else {\n    var pixels = _getPixelsVisible(top, bottom, viewportHeight);\n\n    var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n    return percent >= viewablePercentThreshold;\n  }\n}\n\nfunction _getPixelsVisible(top, bottom, viewportHeight) {\n  var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n  return Math.max(0, visibleHeight);\n}\n\nfunction _isEntirelyVisible(top, bottom, viewportHeight) {\n  return top >= 0 && bottom <= viewportHeight && bottom > top;\n}\n\nvar _default = ViewabilityHelper;\nexports[\"default\"] = _default;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/cjs/vendor/react-native/ViewabilityHelper/index.js"],"names":["exports","_invariant","_interopRequireDefault","require","obj","default","keys","Object","symbols","i","arguments","source","ownKeys","_defineProperty","key","value","enumerable","configurable","writable","ViewabilityHelper","config","viewAreaCoveragePercentThreshold","_proto","_this$_config","itemVisiblePercentThreshold","viewAreaMode","viewablePercentThreshold","viewableIndices","itemCount","firstVisible","_ref","renderRange","first","last","console","idx","metrics","getFrameMetrics","top","bottom","_isViewable","_this","v","handle","setTimeout","_this2","viewableIndicesToCheck","prevItems","nextItems","viewable","createViewToken","changed","_iterator","_isArray","Array","_i","Symbol","_ref2","_ref4","_iterator2","_isArray2","_i2","_ref3","_ref5","_key","_viewable","_objectSpread","isViewable","onViewableItemsChanged","viewableItems","viewabilityConfig","_config","_isEntirelyVisible","pixels","_getPixelsVisible","percent","visibleHeight","Math","_default","module"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * A Utility class for calculating viewable items based on current metrics like scroll position and\n * layout.\n *\n * An item is said to be in a \"viewable\" state when any of the following\n * is true for longer than `minimumViewTime` milliseconds (after an interaction if `waitForInteraction`\n * is true):\n *\n * - Occupying >= `viewAreaCoveragePercentThreshold` of the view area XOR fraction of the item\n *   visible in the view area >= `itemVisiblePercentThreshold`.\n * - Entirely visible on screen\n */\nvar ViewabilityHelper =\n/*#__PURE__*/\nfunction () {\n  /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an error\n   * found when Flow v0.63 was deployed. To see the error delete this comment\n   * and run Flow. */\n  function ViewabilityHelper(config) {\n    if (config === void 0) {\n      config = {\n        viewAreaCoveragePercentThreshold: 0\n      };\n    }\n\n    this._hasInteracted = false;\n    this._timers = new Set();\n    this._viewableIndices = [];\n    this._viewableItems = new Map();\n    this._config = config;\n  }\n  /**\n   * Cleanup, e.g. on unmount. Clears any pending timers.\n   */\n\n\n  var _proto = ViewabilityHelper.prototype;\n\n  _proto.dispose = function dispose() {\n    this._timers.forEach(clearTimeout);\n  }\n  /**\n   * Determines which items are viewable based on the current metrics and config.\n   */\n  ;\n\n  _proto.computeViewableItems = function computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange) {\n    var _this$_config = this._config,\n        itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,\n        viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;\n    var viewAreaMode = viewAreaCoveragePercentThreshold != null;\n    var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;\n    (0, _invariant.default)(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');\n    var viewableIndices = [];\n\n    if (itemCount === 0) {\n      return viewableIndices;\n    }\n\n    var firstVisible = -1;\n\n    var _ref = renderRange || {\n      first: 0,\n      last: itemCount - 1\n    },\n        first = _ref.first,\n        last = _ref.last;\n\n    if (last >= itemCount) {\n      console.warn('Invalid render range computing viewability ' + JSON.stringify({\n        renderRange: renderRange,\n        itemCount: itemCount\n      }));\n      return [];\n    }\n\n    for (var idx = first; idx <= last; idx++) {\n      var metrics = getFrameMetrics(idx);\n\n      if (!metrics) {\n        continue;\n      }\n\n      var top = metrics.offset - scrollOffset;\n      var bottom = top + metrics.length;\n\n      if (top < viewportHeight && bottom > 0) {\n        firstVisible = idx;\n\n        if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {\n          viewableIndices.push(idx);\n        }\n      } else if (firstVisible >= 0) {\n        break;\n      }\n    }\n\n    return viewableIndices;\n  }\n  /**\n   * Figures out which items are viewable and how that has changed from before and calls\n   * `onViewableItemsChanged` as appropriate.\n   */\n  ;\n\n  _proto.onUpdate = function onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange) {\n    var _this = this;\n\n    if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0)) {\n      return;\n    }\n\n    var viewableIndices = [];\n\n    if (itemCount) {\n      viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);\n    }\n\n    if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {\n      return v === viewableIndices[ii];\n    })) {\n      // We might get a lot of scroll events where visibility doesn't change and we don't want to do\n      // extra work in those cases.\n      return;\n    }\n\n    this._viewableIndices = viewableIndices;\n\n    if (this._config.minimumViewTime) {\n      var handle = setTimeout(function () {\n        _this._timers.delete(handle);\n\n        _this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n      }, this._config.minimumViewTime);\n\n      this._timers.add(handle);\n    } else {\n      this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n    }\n  }\n  /**\n   * clean-up cached _viewableIndices to evaluate changed items on next update\n   */\n  ;\n\n  _proto.resetViewableIndices = function resetViewableIndices() {\n    this._viewableIndices = [];\n  }\n  /**\n   * Records that an interaction has happened even if there has been no scroll.\n   */\n  ;\n\n  _proto.recordInteraction = function recordInteraction() {\n    this._hasInteracted = true;\n  };\n\n  _proto._onUpdateSync = function _onUpdateSync( // $FlowFixMe\n  viewableIndicesToCheck, // $FlowFixMe\n  onViewableItemsChanged, // $FlowFixMe\n  createViewToken) {\n    var _this2 = this;\n\n    // Filter out indices that have gone out of view since this call was scheduled.\n    viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {\n      return _this2._viewableIndices.includes(ii);\n    });\n    var prevItems = this._viewableItems;\n    var nextItems = new Map(viewableIndicesToCheck.map(function (ii) {\n      var viewable = createViewToken(ii, true);\n      return [viewable.key, viewable];\n    }));\n    var changed = [];\n\n    for (var _iterator = nextItems, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref2 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref2 = _i.value;\n      }\n\n      var _ref4 = _ref2,\n          key = _ref4[0],\n          viewable = _ref4[1];\n\n      if (!prevItems.has(key)) {\n        changed.push(viewable);\n      }\n    }\n\n    for (var _iterator2 = prevItems, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref3 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref3 = _i2.value;\n      }\n\n      var _ref5 = _ref3,\n          _key = _ref5[0],\n          _viewable = _ref5[1];\n\n      if (!nextItems.has(_key)) {\n        changed.push(_objectSpread({}, _viewable, {\n          isViewable: false\n        }));\n      }\n    }\n\n    if (changed.length > 0) {\n      this._viewableItems = nextItems;\n      onViewableItemsChanged({\n        viewableItems: Array.from(nextItems.values()),\n        changed: changed,\n        viewabilityConfig: this._config\n      });\n    }\n  };\n\n  return ViewabilityHelper;\n}();\n\nfunction _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {\n  if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n    return true;\n  } else {\n    var pixels = _getPixelsVisible(top, bottom, viewportHeight);\n\n    var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n    return percent >= viewablePercentThreshold;\n  }\n}\n\nfunction _getPixelsVisible(top, bottom, viewportHeight) {\n  var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n  return Math.max(0, visibleHeight);\n}\n\nfunction _isEntirelyVisible(top, bottom, viewportHeight) {\n  return top >= 0 && bottom <= viewportHeight && bottom > top;\n}\n\nvar _default = ViewabilityHelper;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}