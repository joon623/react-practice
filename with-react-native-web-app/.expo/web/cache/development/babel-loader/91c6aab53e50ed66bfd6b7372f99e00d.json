{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _ExecutionEnvironment = require(\"fbjs/lib/ExecutionEnvironment\");\n\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nvar DeviceInfo = {\n  Dimensions: {\n    get windowPhysicalPixels() {\n      var _Dimensions$get = _Dimensions[\"default\"].get('window'),\n          width = _Dimensions$get.width,\n          height = _Dimensions$get.height,\n          fontScale = _Dimensions$get.fontScale,\n          scale = _Dimensions$get.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    },\n\n    get screenPhysicalPixels() {\n      var _Dimensions$get2 = _Dimensions[\"default\"].get('screen'),\n          width = _Dimensions$get2.width,\n          height = _Dimensions$get2.height,\n          fontScale = _Dimensions$get2.fontScale,\n          scale = _Dimensions$get2.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    }\n\n  },\n\n  get locale() {\n    if (_ExecutionEnvironment.canUseDOM) {\n      if (window.navigator.languages) {\n        return window.navigator.languages[0];\n      } else {\n        return window.navigator.language;\n      }\n    }\n  },\n\n  get totalMemory() {\n    return _ExecutionEnvironment.canUseDOM ? window.navigator.deviceMemory : undefined;\n  },\n\n  get userAgent() {\n    return _ExecutionEnvironment.canUseDOM ? window.navigator.userAgent : '';\n  }\n\n};\nvar _default = DeviceInfo;\nexports[\"default\"] = _default;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/cjs/exports/DeviceInfo/index.js"],"names":["exports","_ExecutionEnvironment","require","_Dimensions","_interopRequireDefault","obj","default","DeviceInfo","Dimensions","_Dimensions$get","width","height","fontScale","scale","_Dimensions$get2","window","_default","module"],"mappings":"AAAA;;AAEAA,OAAO,CAAPA,UAAAA,GAAAA,IAAAA;AACAA,OAAAA,WAAAA,GAAkB,KAAlBA,CAAAA;;AAEA,IAAIC,qBAAqB,GAAGC,OAAO,CAAnC,+BAAmC,CAAnC;;AAEA,IAAIC,WAAW,GAAGC,sBAAsB,CAACF,OAAO,CAAhD,eAAgD,CAAR,CAAxC;;AAEA,SAAA,sBAAA,CAAA,GAAA,EAAqC;EAAE,OAAOG,GAAG,IAAIA,GAAG,CAAVA,UAAAA,GAAAA,GAAAA,GAA8B;IAAEC,WAASD;EAAX,CAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,UAAU,GAAG;EACfC,UAAU,EAAE;IACV,IAAA,oBAAA,GAA2B;MACzB,IAAIC,eAAe,GAAGN,WAAAA,WAAAA,CAAAA,GAAAA,CAAtB,QAAsBA,CAAtB;MAAA,IACIO,KAAK,GAAGD,eAAe,CAD3B,KAAA;MAAA,IAEIE,MAAM,GAAGF,eAAe,CAF5B,MAAA;MAAA,IAGIG,SAAS,GAAGH,eAAe,CAH/B,SAAA;MAAA,IAIII,KAAK,GAAGJ,eAAe,CAJ3B,KAAA;;MAMA,OAAO;QACLC,KAAK,EAAEA,KAAK,GADP,KAAA;QAELC,MAAM,EAAEA,MAAM,GAFT,KAAA;QAGLE,KAAK,EAHA,KAAA;QAILD,SAAS,EAAEA;MAJN,CAAP;IARQ,CAAA;;IAgBV,IAAA,oBAAA,GAA2B;MACzB,IAAIE,gBAAgB,GAAGX,WAAAA,WAAAA,CAAAA,GAAAA,CAAvB,QAAuBA,CAAvB;MAAA,IACIO,KAAK,GAAGI,gBAAgB,CAD5B,KAAA;MAAA,IAEIH,MAAM,GAAGG,gBAAgB,CAF7B,MAAA;MAAA,IAGIF,SAAS,GAAGE,gBAAgB,CAHhC,SAAA;MAAA,IAIID,KAAK,GAAGC,gBAAgB,CAJ5B,KAAA;;MAMA,OAAO;QACLJ,KAAK,EAAEA,KAAK,GADP,KAAA;QAELC,MAAM,EAAEA,MAAM,GAFT,KAAA;QAGLE,KAAK,EAHA,KAAA;QAILD,SAAS,EAAEA;MAJN,CAAP;IAMD;;EA7BS,CADG;;EAkCf,IAAA,MAAA,GAAa;IACX,IAAIX,qBAAqB,CAAzB,SAAA,EAAqC;MACnC,IAAIc,MAAM,CAANA,SAAAA,CAAJ,SAAA,EAAgC;QAC9B,OAAOA,MAAM,CAANA,SAAAA,CAAAA,SAAAA,CAAP,CAAOA,CAAP;MADF,CAAA,MAEO;QACL,OAAOA,MAAM,CAANA,SAAAA,CAAP,QAAA;MACD;IACF;EAzCY,CAAA;;EA4Cf,IAAA,WAAA,GAAkB;IAChB,OAAOd,qBAAqB,CAArBA,SAAAA,GAAkCc,MAAM,CAANA,SAAAA,CAAlCd,YAAAA,GAAP,SAAA;EA7Ca,CAAA;;EAgDf,IAAA,SAAA,GAAgB;IACd,OAAOA,qBAAqB,CAArBA,SAAAA,GAAkCc,MAAM,CAANA,SAAAA,CAAlCd,SAAAA,GAAP,EAAA;EACD;;AAlDc,CAAjB;AAqDA,IAAIe,QAAQ,GAAZ,UAAA;AACAhB,OAAAA,WAAAA,GAAAA,QAAAA;AACAiB,MAAM,CAANA,OAAAA,GAAiBjB,OAAjBiB,WAAAA","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _ExecutionEnvironment = require(\"fbjs/lib/ExecutionEnvironment\");\n\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar DeviceInfo = {\n  Dimensions: {\n    get windowPhysicalPixels() {\n      var _Dimensions$get = _Dimensions.default.get('window'),\n          width = _Dimensions$get.width,\n          height = _Dimensions$get.height,\n          fontScale = _Dimensions$get.fontScale,\n          scale = _Dimensions$get.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    },\n\n    get screenPhysicalPixels() {\n      var _Dimensions$get2 = _Dimensions.default.get('screen'),\n          width = _Dimensions$get2.width,\n          height = _Dimensions$get2.height,\n          fontScale = _Dimensions$get2.fontScale,\n          scale = _Dimensions$get2.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    }\n\n  },\n\n  get locale() {\n    if (_ExecutionEnvironment.canUseDOM) {\n      if (window.navigator.languages) {\n        return window.navigator.languages[0];\n      } else {\n        return window.navigator.language;\n      }\n    }\n  },\n\n  get totalMemory() {\n    return _ExecutionEnvironment.canUseDOM ? window.navigator.deviceMemory : undefined;\n  },\n\n  get userAgent() {\n    return _ExecutionEnvironment.canUseDOM ? window.navigator.userAgent : '';\n  }\n\n};\nvar _default = DeviceInfo;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}