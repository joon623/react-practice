{"ast":null,"code":"/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar emptyObject = {};\nvar objects = {};\nvar prefix = 'r';\nvar uniqueID = 1;\n\nvar createKey = function createKey(id) {\n  return prefix + \"-\" + id;\n};\n\nvar ReactNativePropRegistry = /*#__PURE__*/function () {\n  function ReactNativePropRegistry() {}\n\n  ReactNativePropRegistry.register = function register(object) {\n    var id = uniqueID++;\n\n    if (true) {\n      Object.freeze(object);\n    }\n\n    var key = createKey(id);\n    objects[key] = object;\n    return id;\n  };\n\n  ReactNativePropRegistry.getByID = function getByID(id) {\n    if (!id) {\n      // Used in the style={[condition && id]} pattern,\n      // we want it to be a no-op when the value is false or null\n      return emptyObject;\n    }\n\n    var key = createKey(id);\n    var object = objects[key];\n\n    if (!object) {\n      console.warn('Invalid style with id `' + id + '`. Skipping ...');\n      return emptyObject;\n    }\n\n    return object;\n  };\n\n  return ReactNativePropRegistry;\n}();\n\nexport { ReactNativePropRegistry as default };\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/exports/StyleSheet/ReactNativePropRegistry.js"],"names":["emptyObject","objects","prefix","uniqueID","createKey","ReactNativePropRegistry","id","Object","key","object","console"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,WAAW,GAAf,EAAA;AACA,IAAIC,OAAO,GAAX,EAAA;AACA,IAAIC,MAAM,GAAV,GAAA;AACA,IAAIC,QAAQ,GAAZ,CAAA;;AAEA,IAAIC,SAAS,GAAG,SAAA,SAAA,CAAA,EAAA,EAAuB;EACrC,OAAOF,MAAM,GAANA,GAAAA,GAAP,EAAA;AADF,CAAA;;AAIA,IAAIG,uBAAuB,GAC3B,aACA,YAAY;EACV,SAAA,uBAAA,GAAmC,CAAE;;EAErCA,uBAAuB,CAAvBA,QAAAA,GAAmC,SAAA,QAAA,CAAA,MAAA,EAA0B;IAC3D,IAAIC,EAAE,GAAGH,QAAT,EAAA;;IAEA,IAAA,IAAA,EAA2C;MACzCI,MAAM,CAANA,MAAAA,CAAAA,MAAAA;IACD;;IAED,IAAIC,GAAG,GAAGJ,SAAS,CAAnB,EAAmB,CAAnB;IACAH,OAAO,CAAPA,GAAO,CAAPA,GAAAA,MAAAA;IACA,OAAA,EAAA;EATFI,CAAAA;;EAYAA,uBAAuB,CAAvBA,OAAAA,GAAkC,SAAA,OAAA,CAAA,EAAA,EAAqB;IACrD,IAAI,CAAJ,EAAA,EAAS;MACP;MACA;MACA,OAAA,WAAA;IACD;;IAED,IAAIG,GAAG,GAAGJ,SAAS,CAAnB,EAAmB,CAAnB;IACA,IAAIK,MAAM,GAAGR,OAAO,CAApB,GAAoB,CAApB;;IAEA,IAAI,CAAJ,MAAA,EAAa;MACXS,OAAO,CAAPA,IAAAA,CAAa,4BAAA,EAAA,GAAbA,iBAAAA;MACA,OAAA,WAAA;IACD;;IAED,OAAA,MAAA;EAfFL,CAAAA;;EAkBA,OAAA,uBAAA;AAnCF,CAEA,EAFA;;AAsCA,SAASA,uBAAuB,IAAhC,OAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar emptyObject = {};\nvar objects = {};\nvar prefix = 'r';\nvar uniqueID = 1;\n\nvar createKey = function createKey(id) {\n  return prefix + \"-\" + id;\n};\n\nvar ReactNativePropRegistry =\n/*#__PURE__*/\nfunction () {\n  function ReactNativePropRegistry() {}\n\n  ReactNativePropRegistry.register = function register(object) {\n    var id = uniqueID++;\n\n    if (process.env.NODE_ENV !== 'production') {\n      Object.freeze(object);\n    }\n\n    var key = createKey(id);\n    objects[key] = object;\n    return id;\n  };\n\n  ReactNativePropRegistry.getByID = function getByID(id) {\n    if (!id) {\n      // Used in the style={[condition && id]} pattern,\n      // we want it to be a no-op when the value is false or null\n      return emptyObject;\n    }\n\n    var key = createKey(id);\n    var object = objects[key];\n\n    if (!object) {\n      console.warn('Invalid style with id `' + id + '`. Skipping ...');\n      return emptyObject;\n    }\n\n    return object;\n  };\n\n  return ReactNativePropRegistry;\n}();\n\nexport { ReactNativePropRegistry as default };"]},"metadata":{},"sourceType":"module"}