{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _AccessibilityUtil = _interopRequireDefault(require(\"../AccessibilityUtil\"));\n\nvar _css = _interopRequireDefault(require(\"../../exports/StyleSheet/css\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"../../exports/StyleSheet\"));\n\nvar _styleResolver = _interopRequireDefault(require(\"../../exports/StyleSheet/styleResolver\"));\n\nvar _constants = require(\"../../exports/StyleSheet/constants\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar emptyObject = {};\nvar hasOwnProperty = Object.prototype.hasOwnProperty; // Reset styles for heading, link, and list DOM elements\n\nvar classes = _css[\"default\"].create({\n  reset: {\n    backgroundColor: 'transparent',\n    color: 'inherit',\n    font: 'inherit',\n    listStyle: 'none',\n    margin: 0,\n    textAlign: 'inherit',\n    textDecoration: 'none'\n  },\n  cursor: {\n    cursor: 'pointer'\n  }\n}, _constants.STYLE_GROUPS.classicReset);\n\nvar pointerEventsStyles = _StyleSheet[\"default\"].create({\n  auto: {\n    pointerEvents: 'auto'\n  },\n  'box-none': {\n    pointerEvents: 'box-none'\n  },\n  'box-only': {\n    pointerEvents: 'box-only'\n  },\n  none: {\n    pointerEvents: 'none'\n  }\n});\n\nvar createDOMProps = function createDOMProps(component, props) {\n  if (!props) {\n    props = emptyObject;\n  }\n\n  var _props = props,\n      accessibilityLabel = _props.accessibilityLabel,\n      accessibilityLiveRegion = _props.accessibilityLiveRegion,\n      accessibilityState = _props.accessibilityState,\n      accessibilityValue = _props.accessibilityValue,\n      accessible = _props.accessible,\n      classList = _props.classList,\n      dataSet = _props.dataSet,\n      providedDisabled = _props.disabled,\n      importantForAccessibility = _props.importantForAccessibility,\n      nativeID = _props.nativeID,\n      pointerEvents = _props.pointerEvents,\n      providedStyle = _props.style,\n      testID = _props.testID,\n      accessibilityRole = _props.accessibilityRole,\n      domProps = _objectWithoutPropertiesLoose(_props, [\"accessibilityLabel\", \"accessibilityLiveRegion\", \"accessibilityState\", \"accessibilityValue\", \"accessible\", \"classList\", \"dataSet\", \"disabled\", \"importantForAccessibility\", \"nativeID\", \"pointerEvents\", \"style\", \"testID\", \"accessibilityRole\"]);\n\n  var disabled = accessibilityState != null && accessibilityState.disabled === true || providedDisabled;\n\n  var role = _AccessibilityUtil[\"default\"].propsToAriaRole(props);\n\n  var isNativeInteractiveElement = role === 'link' || component === 'a' || component === 'button' || component === 'input' || component === 'select' || component === 'textarea' || domProps.contentEditable != null; // dataSet\n\n  if (dataSet != null) {\n    for (var prop in dataSet) {\n      if (hasOwnProperty.call(dataSet, prop)) {\n        var value = dataSet[prop];\n\n        if (value != null) {\n          domProps[\"data-\" + prop] = value;\n        }\n      }\n    }\n  } // accessibilityLabel\n\n\n  if (accessibilityLabel != null) {\n    domProps['aria-label'] = accessibilityLabel;\n  } // accessibilityLiveRegion\n\n\n  if (accessibilityLiveRegion != null) {\n    domProps['aria-live'] = accessibilityLiveRegion === 'none' ? 'off' : accessibilityLiveRegion;\n  } // accessibilityRole\n\n\n  if (role != null) {\n    domProps.role = role;\n  } // accessibilityState\n\n\n  if (accessibilityState != null) {\n    for (var _prop in accessibilityState) {\n      var _value = accessibilityState[_prop];\n\n      if (_value != null) {\n        if (_prop === 'disabled' || _prop === 'hidden') {\n          if (_value === true) {\n            domProps[\"aria-\" + _prop] = _value; // also set prop directly to pick up host component behaviour\n\n            domProps[_prop] = _value;\n          }\n        } else {\n          domProps[\"aria-\" + _prop] = _value;\n        }\n      }\n    }\n  } // accessibilityValue\n\n\n  if (accessibilityValue != null) {\n    for (var _prop2 in accessibilityValue) {\n      var _value2 = accessibilityValue[_prop2];\n\n      if (_value2 != null) {\n        domProps[\"aria-value\" + _prop2] = _value2;\n      }\n    }\n  } // legacy fallbacks\n\n\n  if (importantForAccessibility === 'no-hide-descendants') {\n    domProps['aria-hidden'] = true;\n  }\n\n  if (disabled === true) {\n    domProps['aria-disabled'] = true;\n    domProps.disabled = true;\n  } // FOCUS\n  // Assume that 'link' is focusable by default (uses <a>).\n  // Assume that 'button' is not (uses <div role='button'>) but must be treated as such.\n\n\n  var focusable = !disabled && importantForAccessibility !== 'no' && importantForAccessibility !== 'no-hide-descendants';\n\n  if (isNativeInteractiveElement) {\n    if (accessible === false || !focusable) {\n      domProps.tabIndex = '-1';\n    } else {\n      domProps['data-focusable'] = true;\n    }\n  } else if (role === 'button' || role === 'menuitem' || role === 'textbox') {\n    if (accessible !== false && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  } else {\n    if (accessible === true && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  } // STYLE\n\n\n  var reactNativeStyle = _StyleSheet[\"default\"].compose(pointerEvents && pointerEventsStyles[pointerEvents], providedStyle); // Additional style resets for interactive elements\n\n\n  var needsCursor = (role === 'button' || role === 'link') && !disabled;\n  var needsReset = component === 'a' || component === 'button' || component === 'li' || component === 'ul' || role === 'heading'; // Classic CSS styles\n\n  var finalClassList = [needsReset && classes.reset, needsCursor && classes.cursor, classList]; // Resolve styles\n\n  var _styleResolver$resolv = _styleResolver[\"default\"].resolve(reactNativeStyle, finalClassList),\n      className = _styleResolver$resolv.className,\n      style = _styleResolver$resolv.style;\n\n  if (className != null && className !== '') {\n    domProps.className = className;\n  }\n\n  if (style) {\n    domProps.style = style;\n  } // OTHER\n  // Native element ID\n\n\n  if (nativeID != null) {\n    domProps.id = nativeID;\n  } // Link security\n  // https://mathiasbynens.github.io/rel-noopener/\n  // Note: using \"noreferrer\" doesn't impact referrer tracking for https\n  // transfers (i.e., from https to https).\n\n\n  if (component === 'a' && domProps.target === '_blank') {\n    domProps.rel = (domProps.rel || '') + \" noopener noreferrer\";\n  } // Automated test IDs\n\n\n  if (testID != null) {\n    domProps['data-testid'] = testID;\n  } // Keyboard accessibility\n  // Button-like roles should trigger 'onClick' if SPACE key is pressed.\n  // Button-like roles should not trigger 'onClick' if they are disabled.\n\n\n  if (domProps['data-focusable']) {\n    var onClick = domProps.onClick;\n\n    if (onClick != null) {\n      if (disabled) {\n        // Prevent click propagating if the element is disabled. See #1757\n        domProps.onClick = function (e) {\n          e.stopPropagation();\n        };\n      } else if (!isNativeInteractiveElement) {\n        // For native elements that are focusable but don't dispatch 'click' events\n        // for keyboards.\n        var onKeyDown = domProps.onKeyDown;\n\n        domProps.onKeyDown = function (e) {\n          var key = e.key,\n              repeat = e.repeat;\n          var isSpacebarKey = key === ' ' || key === 'Spacebar';\n          var isButtonRole = role === 'button' || role === 'menuitem';\n\n          if (onKeyDown != null) {\n            onKeyDown(e);\n          }\n\n          if (!repeat && key === 'Enter') {\n            onClick(e);\n          } else if (isSpacebarKey && isButtonRole) {\n            if (!repeat) {\n              onClick(e);\n            } // Prevent spacebar scrolling the window\n\n\n            e.preventDefault();\n          }\n        };\n      }\n    }\n  }\n\n  return domProps;\n};\n\nvar _default = createDOMProps;\nexports[\"default\"] = _default;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/react-native-web/dist/cjs/modules/createDOMProps/index.js"],"names":["exports","_AccessibilityUtil","_interopRequireDefault","require","_css","_StyleSheet","_styleResolver","_constants","obj","default","source","target","sourceKeys","Object","i","key","excluded","emptyObject","hasOwnProperty","classes","reset","backgroundColor","color","font","listStyle","margin","textAlign","textDecoration","cursor","pointerEventsStyles","auto","pointerEvents","none","createDOMProps","props","_props","accessibilityLabel","accessibilityLiveRegion","accessibilityState","accessibilityValue","accessible","classList","dataSet","providedDisabled","importantForAccessibility","nativeID","providedStyle","testID","accessibilityRole","domProps","_objectWithoutPropertiesLoose","disabled","role","isNativeInteractiveElement","component","value","_value","_prop","_value2","focusable","reactNativeStyle","needsCursor","needsReset","finalClassList","_styleResolver$resolv","className","style","onClick","e","onKeyDown","repeat","isSpacebarKey","isButtonRole","_default","module"],"mappings":"AAAA;;AAEAA,OAAO,CAAPA,UAAAA,GAAAA,IAAAA;AACAA,OAAAA,WAAAA,GAAkB,KAAlBA,CAAAA;;AAEA,IAAIC,kBAAkB,GAAGC,sBAAsB,CAACC,OAAO,CAAvD,sBAAuD,CAAR,CAA/C;;AAEA,IAAIC,IAAI,GAAGF,sBAAsB,CAACC,OAAO,CAAzC,8BAAyC,CAAR,CAAjC;;AAEA,IAAIE,WAAW,GAAGH,sBAAsB,CAACC,OAAO,CAAhD,0BAAgD,CAAR,CAAxC;;AAEA,IAAIG,cAAc,GAAGJ,sBAAsB,CAACC,OAAO,CAAnD,wCAAmD,CAAR,CAA3C;;AAEA,IAAII,UAAU,GAAGJ,OAAO,CAAxB,oCAAwB,CAAxB;;AAEA,SAAA,sBAAA,CAAA,GAAA,EAAqC;EAAE,OAAOK,GAAG,IAAIA,GAAG,CAAVA,UAAAA,GAAAA,GAAAA,GAA8B;IAAEC,WAASD;EAAX,CAArC;AAAwD;;AAE/F,SAAA,6BAAA,CAAA,MAAA,EAAA,QAAA,EAAyD;EAAE,IAAIE,MAAM,IAAV,IAAA,EAAoB,OAAA,EAAA;EAAW,IAAIC,MAAM,GAAV,EAAA;EAAiB,IAAIC,UAAU,GAAGC,MAAM,CAANA,IAAAA,CAAjB,MAAiBA,CAAjB;EAAsC,IAAA,GAAA,EAAA,CAAA;;EAAY,KAAKC,CAAC,GAAN,CAAA,EAAYA,CAAC,GAAGF,UAAU,CAA1B,MAAA,EAAmCE,CAAnC,EAAA,EAAwC;IAAEC,GAAG,GAAGH,UAAU,CAAhBG,CAAgB,CAAhBA;IAAqB,IAAIC,QAAQ,CAARA,OAAAA,CAAAA,GAAAA,KAAJ,CAAA,EAAgC;IAAUL,MAAM,CAANA,GAAM,CAANA,GAAcD,MAAM,CAApBC,GAAoB,CAApBA;EAA4B;;EAAC,OAAA,MAAA;AAAgB;;AAEnT,IAAIM,WAAW,GAAf,EAAA;AACA,IAAIC,cAAc,GAAGL,MAAM,CAANA,SAAAA,CAArB,cAAA,C,CAAsD;;AAEtD,IAAIM,OAAO,GAAG,IAAA,WAAA,CAAA,MAAA,CAAoB;EAChCC,KAAK,EAAE;IACLC,eAAe,EADV,aAAA;IAELC,KAAK,EAFA,SAAA;IAGLC,IAAI,EAHC,SAAA;IAILC,SAAS,EAJJ,MAAA;IAKLC,MAAM,EALD,CAAA;IAMLC,SAAS,EANJ,SAAA;IAOLC,cAAc,EAAE;EAPX,CADyB;EAUhCC,MAAM,EAAE;IACNA,MAAM,EAAE;EADF;AAVwB,CAApB,EAaXrB,UAAU,CAAVA,YAAAA,CAbH,YAAc,CAAd;;AAeA,IAAIsB,mBAAmB,GAAG,WAAA,WAAA,CAAA,MAAA,CAA2B;EACnDC,IAAI,EAAE;IACJC,aAAa,EAAE;EADX,CAD6C;EAInD,YAAY;IACVA,aAAa,EAAE;EADL,CAJuC;EAOnD,YAAY;IACVA,aAAa,EAAE;EADL,CAPuC;EAUnDC,IAAI,EAAE;IACJD,aAAa,EAAE;EADX;AAV6C,CAA3B,CAA1B;;AAeA,IAAIE,cAAc,GAAG,SAAA,cAAA,CAAA,SAAA,EAAA,KAAA,EAA0C;EAC7D,IAAI,CAAJ,KAAA,EAAY;IACVC,KAAK,GAALA,WAAAA;EACD;;EAED,IAAIC,MAAM,GAAV,KAAA;EAAA,IACIC,kBAAkB,GAAGD,MAAM,CAD/B,kBAAA;EAAA,IAEIE,uBAAuB,GAAGF,MAAM,CAFpC,uBAAA;EAAA,IAGIG,kBAAkB,GAAGH,MAAM,CAH/B,kBAAA;EAAA,IAIII,kBAAkB,GAAGJ,MAAM,CAJ/B,kBAAA;EAAA,IAKIK,UAAU,GAAGL,MAAM,CALvB,UAAA;EAAA,IAMIM,SAAS,GAAGN,MAAM,CANtB,SAAA;EAAA,IAOIO,OAAO,GAAGP,MAAM,CAPpB,OAAA;EAAA,IAQIQ,gBAAgB,GAAGR,MAAM,CAR7B,QAAA;EAAA,IASIS,yBAAyB,GAAGT,MAAM,CATtC,yBAAA;EAAA,IAUIU,QAAQ,GAAGV,MAAM,CAVrB,QAAA;EAAA,IAWIJ,aAAa,GAAGI,MAAM,CAX1B,aAAA;EAAA,IAYIW,aAAa,GAAGX,MAAM,CAZ1B,KAAA;EAAA,IAaIY,MAAM,GAAGZ,MAAM,CAbnB,MAAA;EAAA,IAcIa,iBAAiB,GAAGb,MAAM,CAd9B,iBAAA;EAAA,IAeIc,QAAQ,GAAGC,6BAA6B,CAAA,MAAA,EAAS,CAAA,oBAAA,EAAA,yBAAA,EAAA,oBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,WAAA,EAAA,SAAA,EAAA,UAAA,EAAA,2BAAA,EAAA,UAAA,EAAA,eAAA,EAAA,OAAA,EAAA,QAAA,EAfrD,mBAeqD,CAAT,CAf5C;;EAiBA,IAAIC,QAAQ,GAAGb,kBAAkB,IAAlBA,IAAAA,IAA8BA,kBAAkB,CAAlBA,QAAAA,KAA9BA,IAAAA,IAAf,gBAAA;;EAEA,IAAIc,IAAI,GAAGnD,kBAAAA,WAAAA,CAAAA,eAAAA,CAAX,KAAWA,CAAX;;EAEA,IAAIoD,0BAA0B,GAAGD,IAAI,KAAJA,MAAAA,IAAmBE,SAAS,KAA5BF,GAAAA,IAAwCE,SAAS,KAAjDF,QAAAA,IAAkEE,SAAS,KAA3EF,OAAAA,IAA2FE,SAAS,KAApGF,QAAAA,IAAqHE,SAAS,KAA9HF,UAAAA,IAAiJH,QAAQ,CAARA,eAAAA,IA1BrH,IA0B7D,CA1B6D,CA0BuJ;;EAEpN,IAAIP,OAAO,IAAX,IAAA,EAAqB;IACnB,KAAK,IAAL,IAAA,IAAA,OAAA,EAA0B;MACxB,IAAIxB,cAAc,CAAdA,IAAAA,CAAAA,OAAAA,EAAJ,IAAIA,CAAJ,EAAwC;QACtC,IAAIqC,KAAK,GAAGb,OAAO,CAAnB,IAAmB,CAAnB;;QAEA,IAAIa,KAAK,IAAT,IAAA,EAAmB;UACjBN,QAAQ,CAAC,UAATA,IAAQ,CAARA,GAAAA,KAAAA;QACD;MACF;IACF;EArC0D,CAAA,CAsC3D;;;EAGF,IAAIb,kBAAkB,IAAtB,IAAA,EAAgC;IAC9Ba,QAAQ,CAARA,YAAQ,CAARA,GAAAA,kBAAAA;EA1C2D,CAAA,CA2C3D;;;EAGF,IAAIZ,uBAAuB,IAA3B,IAAA,EAAqC;IACnCY,QAAQ,CAARA,WAAQ,CAARA,GAAwBZ,uBAAuB,KAAvBA,MAAAA,GAAAA,KAAAA,GAAxBY,uBAAAA;EA/C2D,CAAA,CAgD3D;;;EAGF,IAAIG,IAAI,IAAR,IAAA,EAAkB;IAChBH,QAAQ,CAARA,IAAAA,GAAAA,IAAAA;EApD2D,CAAA,CAqD3D;;;EAGF,IAAIX,kBAAkB,IAAtB,IAAA,EAAgC;IAC9B,KAAK,IAAL,KAAA,IAAA,kBAAA,EAAsC;MACpC,IAAIkB,MAAM,GAAGlB,kBAAkB,CAA/B,KAA+B,CAA/B;;MAEA,IAAIkB,MAAM,IAAV,IAAA,EAAoB;QAClB,IAAIC,KAAK,KAALA,UAAAA,IAAwBA,KAAK,KAAjC,QAAA,EAAgD;UAC9C,IAAID,MAAM,KAAV,IAAA,EAAqB;YACnBP,QAAQ,CAAC,UAATA,KAAQ,CAARA,GADmB,MACnBA,CADmB,CACiB;;YAEpCA,QAAQ,CAARA,KAAQ,CAARA,GAAAA,MAAAA;UACD;QALH,CAAA,MAMO;UACLA,QAAQ,CAAC,UAATA,KAAQ,CAARA,GAAAA,MAAAA;QACD;MACF;IACF;EAvE0D,CAAA,CAwE3D;;;EAGF,IAAIV,kBAAkB,IAAtB,IAAA,EAAgC;IAC9B,KAAK,IAAL,MAAA,IAAA,kBAAA,EAAuC;MACrC,IAAImB,OAAO,GAAGnB,kBAAkB,CAAhC,MAAgC,CAAhC;;MAEA,IAAImB,OAAO,IAAX,IAAA,EAAqB;QACnBT,QAAQ,CAAC,eAATA,MAAQ,CAARA,GAAAA,OAAAA;MACD;IACF;EAlF0D,CAAA,CAmF3D;;;EAGF,IAAIL,yBAAyB,KAA7B,qBAAA,EAAyD;IACvDK,QAAQ,CAARA,aAAQ,CAARA,GAAAA,IAAAA;EACD;;EAED,IAAIE,QAAQ,KAAZ,IAAA,EAAuB;IACrBF,QAAQ,CAARA,eAAQ,CAARA,GAAAA,IAAAA;IACAA,QAAQ,CAARA,QAAAA,GAAAA,IAAAA;EA5F2D,CAAA,CA6F3D;EACF;EACA;;;EAGA,IAAIU,SAAS,GAAG,CAAA,QAAA,IAAaf,yBAAyB,KAAtC,IAAA,IAAmDA,yBAAyB,KAA5F,qBAAA;;EAEA,IAAA,0BAAA,EAAgC;IAC9B,IAAIJ,UAAU,KAAVA,KAAAA,IAAwB,CAA5B,SAAA,EAAwC;MACtCS,QAAQ,CAARA,QAAAA,GAAAA,IAAAA;IADF,CAAA,MAEO;MACLA,QAAQ,CAARA,gBAAQ,CAARA,GAAAA,IAAAA;IACD;EALH,CAAA,MAMO,IAAIG,IAAI,KAAJA,QAAAA,IAAqBA,IAAI,KAAzBA,UAAAA,IAA4CA,IAAI,KAApD,SAAA,EAAoE;IACzE,IAAIZ,UAAU,KAAVA,KAAAA,IAAJ,SAAA,EAAuC;MACrCS,QAAQ,CAARA,gBAAQ,CAARA,GAAAA,IAAAA;MACAA,QAAQ,CAARA,QAAAA,GAAAA,GAAAA;IACD;EAJI,CAAA,MAKA;IACL,IAAIT,UAAU,KAAVA,IAAAA,IAAJ,SAAA,EAAsC;MACpCS,QAAQ,CAARA,gBAAQ,CAARA,GAAAA,IAAAA;MACAA,QAAQ,CAARA,QAAAA,GAAAA,GAAAA;IACD;EAnH0D,CAAA,CAoH3D;;;EAGF,IAAIW,gBAAgB,GAAGvD,WAAAA,WAAAA,CAAAA,OAAAA,CAA4B0B,aAAa,IAAIF,mBAAmB,CAAhExB,aAAgE,CAAhEA,EAvHsC,aAuHtCA,CAAvB,CAvH6D,CAuH2D;;;EAGxH,IAAIwD,WAAW,GAAG,CAACT,IAAI,KAAJA,QAAAA,IAAqBA,IAAI,KAA1B,MAAA,KAA0C,CAA5D,QAAA;EACA,IAAIU,UAAU,GAAGR,SAAS,KAATA,GAAAA,IAAqBA,SAAS,KAA9BA,QAAAA,IAA+CA,SAAS,KAAxDA,IAAAA,IAAqEA,SAAS,KAA9EA,IAAAA,IAA2FF,IAAI,KA3HnD,SA2H7D,CA3H6D,CA2HmE;;EAEhI,IAAIW,cAAc,GAAG,CAACD,UAAU,IAAI3C,OAAO,CAAtB,KAAA,EAA8B0C,WAAW,IAAI1C,OAAO,CAApD,MAAA,EA7HwC,SA6HxC,CAArB,CA7H6D,CA6HiC;;EAE9F,IAAI6C,qBAAqB,GAAG1D,cAAAA,WAAAA,CAAAA,OAAAA,CAAAA,gBAAAA,EAA5B,cAA4BA,CAA5B;EAAA,IACI2D,SAAS,GAAGD,qBAAqB,CADrC,SAAA;EAAA,IAEIE,KAAK,GAAGF,qBAAqB,CAFjC,KAAA;;EAIA,IAAIC,SAAS,IAATA,IAAAA,IAAqBA,SAAS,KAAlC,EAAA,EAA2C;IACzChB,QAAQ,CAARA,SAAAA,GAAAA,SAAAA;EACD;;EAED,IAAA,KAAA,EAAW;IACTA,QAAQ,CAARA,KAAAA,GAAAA,KAAAA;EAxI2D,CAAA,CAyI3D;EACF;;;EAGA,IAAIJ,QAAQ,IAAZ,IAAA,EAAsB;IACpBI,QAAQ,CAARA,EAAAA,GAAAA,QAAAA;EA9I2D,CAAA,CA+I3D;EACF;EACA;EACA;;;EAGA,IAAIK,SAAS,KAATA,GAAAA,IAAqBL,QAAQ,CAARA,MAAAA,KAAzB,QAAA,EAAuD;IACrDA,QAAQ,CAARA,GAAAA,GAAe,CAACA,QAAQ,CAARA,GAAAA,IAAD,EAAA,IAAfA,sBAAAA;EAtJ2D,CAAA,CAuJ3D;;;EAGF,IAAIF,MAAM,IAAV,IAAA,EAAoB;IAClBE,QAAQ,CAARA,aAAQ,CAARA,GAAAA,MAAAA;EA3J2D,CAAA,CA4J3D;EACF;EACA;;;EAGA,IAAIA,QAAQ,CAAZ,gBAAY,CAAZ,EAAgC;IAC9B,IAAIkB,OAAO,GAAGlB,QAAQ,CAAtB,OAAA;;IAEA,IAAIkB,OAAO,IAAX,IAAA,EAAqB;MACnB,IAAA,QAAA,EAAc;QACZ;QACAlB,QAAQ,CAARA,OAAAA,GAAmB,UAAA,CAAA,EAAa;UAC9BmB,CAAC,CAADA,eAAAA;QADFnB,CAAAA;MAFF,CAAA,MAKO,IAAI,CAAJ,0BAAA,EAAiC;QACtC;QACA;QACA,IAAIoB,SAAS,GAAGpB,QAAQ,CAAxB,SAAA;;QAEAA,QAAQ,CAARA,SAAAA,GAAqB,UAAA,CAAA,EAAa;UAChC,IAAIlC,GAAG,GAAGqD,CAAC,CAAX,GAAA;UAAA,IACIE,MAAM,GAAGF,CAAC,CADd,MAAA;UAEA,IAAIG,aAAa,GAAGxD,GAAG,KAAHA,GAAAA,IAAeA,GAAG,KAAtC,UAAA;UACA,IAAIyD,YAAY,GAAGpB,IAAI,KAAJA,QAAAA,IAAqBA,IAAI,KAA5C,UAAA;;UAEA,IAAIiB,SAAS,IAAb,IAAA,EAAuB;YACrBA,SAAS,CAATA,CAAS,CAATA;UACD;;UAED,IAAI,CAAA,MAAA,IAAWtD,GAAG,KAAlB,OAAA,EAAgC;YAC9BoD,OAAO,CAAPA,CAAO,CAAPA;UADF,CAAA,MAEO,IAAII,aAAa,IAAjB,YAAA,EAAmC;YACxC,IAAI,CAAJ,MAAA,EAAa;cACXJ,OAAO,CAAPA,CAAO,CAAPA;YAFsC,CAAA,CAGtC;;;YAGFC,CAAC,CAADA,cAAAA;UACD;QAnBHnB,CAAAA;MAqBD;IACF;EACF;;EAED,OAAA,QAAA;AAxMF,CAAA;;AA2MA,IAAIwB,QAAQ,GAAZ,cAAA;AACAzE,OAAAA,WAAAA,GAAAA,QAAAA;AACA0E,MAAM,CAANA,OAAAA,GAAiB1E,OAAjB0E,WAAAA","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _AccessibilityUtil = _interopRequireDefault(require(\"../AccessibilityUtil\"));\n\nvar _css = _interopRequireDefault(require(\"../../exports/StyleSheet/css\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"../../exports/StyleSheet\"));\n\nvar _styleResolver = _interopRequireDefault(require(\"../../exports/StyleSheet/styleResolver\"));\n\nvar _constants = require(\"../../exports/StyleSheet/constants\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar emptyObject = {};\nvar hasOwnProperty = Object.prototype.hasOwnProperty; // Reset styles for heading, link, and list DOM elements\n\nvar classes = _css.default.create({\n  reset: {\n    backgroundColor: 'transparent',\n    color: 'inherit',\n    font: 'inherit',\n    listStyle: 'none',\n    margin: 0,\n    textAlign: 'inherit',\n    textDecoration: 'none'\n  },\n  cursor: {\n    cursor: 'pointer'\n  }\n}, _constants.STYLE_GROUPS.classicReset);\n\nvar pointerEventsStyles = _StyleSheet.default.create({\n  auto: {\n    pointerEvents: 'auto'\n  },\n  'box-none': {\n    pointerEvents: 'box-none'\n  },\n  'box-only': {\n    pointerEvents: 'box-only'\n  },\n  none: {\n    pointerEvents: 'none'\n  }\n});\n\nvar createDOMProps = function createDOMProps(component, props) {\n  if (!props) {\n    props = emptyObject;\n  }\n\n  var _props = props,\n      accessibilityLabel = _props.accessibilityLabel,\n      accessibilityLiveRegion = _props.accessibilityLiveRegion,\n      accessibilityState = _props.accessibilityState,\n      accessibilityValue = _props.accessibilityValue,\n      accessible = _props.accessible,\n      classList = _props.classList,\n      dataSet = _props.dataSet,\n      providedDisabled = _props.disabled,\n      importantForAccessibility = _props.importantForAccessibility,\n      nativeID = _props.nativeID,\n      pointerEvents = _props.pointerEvents,\n      providedStyle = _props.style,\n      testID = _props.testID,\n      accessibilityRole = _props.accessibilityRole,\n      domProps = _objectWithoutPropertiesLoose(_props, [\"accessibilityLabel\", \"accessibilityLiveRegion\", \"accessibilityState\", \"accessibilityValue\", \"accessible\", \"classList\", \"dataSet\", \"disabled\", \"importantForAccessibility\", \"nativeID\", \"pointerEvents\", \"style\", \"testID\", \"accessibilityRole\"]);\n\n  var disabled = accessibilityState != null && accessibilityState.disabled === true || providedDisabled;\n\n  var role = _AccessibilityUtil.default.propsToAriaRole(props);\n\n  var isNativeInteractiveElement = role === 'link' || component === 'a' || component === 'button' || component === 'input' || component === 'select' || component === 'textarea' || domProps.contentEditable != null; // dataSet\n\n  if (dataSet != null) {\n    for (var prop in dataSet) {\n      if (hasOwnProperty.call(dataSet, prop)) {\n        var value = dataSet[prop];\n\n        if (value != null) {\n          domProps[\"data-\" + prop] = value;\n        }\n      }\n    }\n  } // accessibilityLabel\n\n\n  if (accessibilityLabel != null) {\n    domProps['aria-label'] = accessibilityLabel;\n  } // accessibilityLiveRegion\n\n\n  if (accessibilityLiveRegion != null) {\n    domProps['aria-live'] = accessibilityLiveRegion === 'none' ? 'off' : accessibilityLiveRegion;\n  } // accessibilityRole\n\n\n  if (role != null) {\n    domProps.role = role;\n  } // accessibilityState\n\n\n  if (accessibilityState != null) {\n    for (var _prop in accessibilityState) {\n      var _value = accessibilityState[_prop];\n\n      if (_value != null) {\n        if (_prop === 'disabled' || _prop === 'hidden') {\n          if (_value === true) {\n            domProps[\"aria-\" + _prop] = _value; // also set prop directly to pick up host component behaviour\n\n            domProps[_prop] = _value;\n          }\n        } else {\n          domProps[\"aria-\" + _prop] = _value;\n        }\n      }\n    }\n  } // accessibilityValue\n\n\n  if (accessibilityValue != null) {\n    for (var _prop2 in accessibilityValue) {\n      var _value2 = accessibilityValue[_prop2];\n\n      if (_value2 != null) {\n        domProps[\"aria-value\" + _prop2] = _value2;\n      }\n    }\n  } // legacy fallbacks\n\n\n  if (importantForAccessibility === 'no-hide-descendants') {\n    domProps['aria-hidden'] = true;\n  }\n\n  if (disabled === true) {\n    domProps['aria-disabled'] = true;\n    domProps.disabled = true;\n  } // FOCUS\n  // Assume that 'link' is focusable by default (uses <a>).\n  // Assume that 'button' is not (uses <div role='button'>) but must be treated as such.\n\n\n  var focusable = !disabled && importantForAccessibility !== 'no' && importantForAccessibility !== 'no-hide-descendants';\n\n  if (isNativeInteractiveElement) {\n    if (accessible === false || !focusable) {\n      domProps.tabIndex = '-1';\n    } else {\n      domProps['data-focusable'] = true;\n    }\n  } else if (role === 'button' || role === 'menuitem' || role === 'textbox') {\n    if (accessible !== false && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  } else {\n    if (accessible === true && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  } // STYLE\n\n\n  var reactNativeStyle = _StyleSheet.default.compose(pointerEvents && pointerEventsStyles[pointerEvents], providedStyle); // Additional style resets for interactive elements\n\n\n  var needsCursor = (role === 'button' || role === 'link') && !disabled;\n  var needsReset = component === 'a' || component === 'button' || component === 'li' || component === 'ul' || role === 'heading'; // Classic CSS styles\n\n  var finalClassList = [needsReset && classes.reset, needsCursor && classes.cursor, classList]; // Resolve styles\n\n  var _styleResolver$resolv = _styleResolver.default.resolve(reactNativeStyle, finalClassList),\n      className = _styleResolver$resolv.className,\n      style = _styleResolver$resolv.style;\n\n  if (className != null && className !== '') {\n    domProps.className = className;\n  }\n\n  if (style) {\n    domProps.style = style;\n  } // OTHER\n  // Native element ID\n\n\n  if (nativeID != null) {\n    domProps.id = nativeID;\n  } // Link security\n  // https://mathiasbynens.github.io/rel-noopener/\n  // Note: using \"noreferrer\" doesn't impact referrer tracking for https\n  // transfers (i.e., from https to https).\n\n\n  if (component === 'a' && domProps.target === '_blank') {\n    domProps.rel = (domProps.rel || '') + \" noopener noreferrer\";\n  } // Automated test IDs\n\n\n  if (testID != null) {\n    domProps['data-testid'] = testID;\n  } // Keyboard accessibility\n  // Button-like roles should trigger 'onClick' if SPACE key is pressed.\n  // Button-like roles should not trigger 'onClick' if they are disabled.\n\n\n  if (domProps['data-focusable']) {\n    var onClick = domProps.onClick;\n\n    if (onClick != null) {\n      if (disabled) {\n        // Prevent click propagating if the element is disabled. See #1757\n        domProps.onClick = function (e) {\n          e.stopPropagation();\n        };\n      } else if (!isNativeInteractiveElement) {\n        // For native elements that are focusable but don't dispatch 'click' events\n        // for keyboards.\n        var onKeyDown = domProps.onKeyDown;\n\n        domProps.onKeyDown = function (e) {\n          var key = e.key,\n              repeat = e.repeat;\n          var isSpacebarKey = key === ' ' || key === 'Spacebar';\n          var isButtonRole = role === 'button' || role === 'menuitem';\n\n          if (onKeyDown != null) {\n            onKeyDown(e);\n          }\n\n          if (!repeat && key === 'Enter') {\n            onClick(e);\n          } else if (isSpacebarKey && isButtonRole) {\n            if (!repeat) {\n              onClick(e);\n            } // Prevent spacebar scrolling the window\n\n\n            e.preventDefault();\n          }\n        };\n      }\n    }\n  }\n\n  return domProps;\n};\n\nvar _default = createDOMProps;\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}