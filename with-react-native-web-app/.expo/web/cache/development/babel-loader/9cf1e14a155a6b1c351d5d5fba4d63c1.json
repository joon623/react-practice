{"ast":null,"code":"import _slicedToArray from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nvar _excluded = [\"children\", \"isDisabled\", \"onPress\", \"textValue\"],\n    _excluded2 = [\"_text\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef, memo } from 'react';\nimport Text from '../../primitives/Text';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Pressable } from '../../primitives/Pressable';\nimport { MenuContext } from './MenuContext';\nimport { useMenuItem } from './useMenu';\nimport { mergeRefs } from '../../../utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nvar MenuItem = function MenuItem(_ref, ref) {\n  _s();\n\n  var children = _ref.children,\n      isDisabled = _ref.isDisabled,\n      _onPress = _ref.onPress,\n      textValue = _ref.textValue,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useContext = React.useContext(MenuContext),\n      closeOnSelect = _React$useContext.closeOnSelect,\n      onClose = _React$useContext.onClose;\n\n  var menuItemRef = React.useRef(null);\n  var mergedRef = mergeRefs([menuItemRef, ref]);\n\n  var _usePropsResolution = usePropsResolution('MenuItem', props, {\n    isDisabled: isDisabled\n  }, {\n    cascadePseudoProps: true\n  }),\n      _text = _usePropsResolution._text,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      textContent = _React$useState2[0],\n      setTextContent = _React$useState2[1];\n\n  React.useEffect(function () {\n    var menuItem = menuItemRef.current;\n\n    if (menuItem) {\n      var _menuItem$textContent;\n\n      setTextContent(((_menuItem$textContent = menuItem.textContent) !== null && _menuItem$textContent !== void 0 ? _menuItem$textContent : '').trim());\n    }\n  }, [children]);\n  var menuItemProps = useMenuItem({\n    textValue: textValue !== null && textValue !== void 0 ? textValue : textContent,\n    ref: menuItemRef\n  }); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Pressable, _extends({}, menuItemProps, resolvedProps, {\n    ref: mergedRef,\n    disabled: isDisabled,\n    accessibilityState: {\n      disabled: isDisabled\n    },\n    onPress: function onPress(e) {\n      if (!isDisabled) {\n        _onPress && _onPress(e);\n\n        if (closeOnSelect) {\n          onClose && onClose();\n        }\n      }\n    }\n  }), /*#__PURE__*/React.createElement(React.Fragment, null, React.Children.map(children, function (child, index) {\n    if (typeof child === 'string' || typeof child === 'number') {\n      return /*#__PURE__*/React.createElement(Text, _extends({}, _text, {\n        key: \"menu-item-\".concat(index)\n      }), child);\n    } else {\n      return child;\n    }\n  })));\n};\n\n_s(MenuItem, \"JeyPNDWCnuIxR1LN3ciGkPajWv4=\", false, function () {\n  return [usePropsResolution, useMenuItem, useHasResponsiveProps];\n});\n\n_c = MenuItem;\nexport default /*#__PURE__*/_c3 = /*#__PURE__*/memo( /*#__PURE__*/_c2 = /*#__PURE__*/forwardRef(MenuItem));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MenuItem\");\n$RefreshReg$(_c2, \"%default%$memo\");\n$RefreshReg$(_c3, \"%default%\");\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/module/components/composites/Menu/MenuItem.js"],"names":["_extends","Object","i","arguments","source","target","MenuItem","children","isDisabled","onPress","textValue","props","closeOnSelect","onClose","React","menuItemRef","mergedRef","mergeRefs","_text","resolvedProps","usePropsResolution","cascadePseudoProps","textContent","setTextContent","menuItem","_menuItem$textContent","menuItemProps","useMenuItem","ref","useHasResponsiveProps","disabled","accessibilityState","key","memo","forwardRef"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef, memo } from 'react';\nimport Text from '../../primitives/Text';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Pressable } from '../../primitives/Pressable';\nimport { MenuContext } from './MenuContext';\nimport { useMenuItem } from './useMenu';\nimport { mergeRefs } from '../../../utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst MenuItem = ({\n  children,\n  isDisabled,\n  onPress,\n  textValue,\n  ...props\n}, ref) => {\n  const {\n    closeOnSelect,\n    onClose\n  } = React.useContext(MenuContext);\n  const menuItemRef = React.useRef(null);\n  const mergedRef = mergeRefs([menuItemRef, ref]);\n  const {\n    _text,\n    ...resolvedProps\n  } = usePropsResolution('MenuItem', props, {\n    isDisabled\n  }, {\n    cascadePseudoProps: true\n  });\n  const [textContent, setTextContent] = React.useState('');\n  React.useEffect(() => {\n    const menuItem = menuItemRef.current;\n\n    if (menuItem) {\n      var _menuItem$textContent;\n\n      setTextContent(((_menuItem$textContent = menuItem.textContent) !== null && _menuItem$textContent !== void 0 ? _menuItem$textContent : '').trim());\n    }\n  }, [children]);\n  const menuItemProps = useMenuItem({\n    textValue: textValue !== null && textValue !== void 0 ? textValue : textContent,\n    ref: menuItemRef\n  }); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Pressable, _extends({}, menuItemProps, resolvedProps, {\n    ref: mergedRef,\n    disabled: isDisabled,\n    accessibilityState: {\n      disabled: isDisabled\n    },\n    onPress: e => {\n      if (!isDisabled) {\n        onPress && onPress(e);\n\n        if (closeOnSelect) {\n          onClose && onClose();\n        }\n      }\n    }\n  }), /*#__PURE__*/React.createElement(React.Fragment, null, React.Children.map(children, (child, index) => {\n    if (typeof child === 'string' || typeof child === 'number') {\n      return /*#__PURE__*/React.createElement(Text, _extends({}, _text, {\n        key: \"menu-item-\".concat(index)\n      }), child);\n    } else {\n      return child;\n    }\n  })));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(MenuItem));\n//# sourceMappingURL=MenuItem.js.map"]},"metadata":{},"sourceType":"module"}