{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { mode } from '../tools';\n\nvar baseStyle = function baseStyle(props) {\n  var primary = props.theme.colors.primary;\n  var focusRing = mode({\n    boxShadow: \"\".concat(primary[400], \" 0px 0px 0px 2px\")\n  }, {\n    boxShadow: \"\".concat(primary[500], \" 0px 0px 0px 2px\")\n  })(props);\n  return {\n    _focusVisible: {\n      _web: {\n        style: _objectSpread(_objectSpread({}, focusRing), {}, {\n          outlineWidth: 0\n        })\n      }\n    }\n  };\n};\n\nexport default {\n  baseStyle: baseStyle,\n  defaultProps: {}\n};","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/theme/components/pressable.ts"],"names":["baseStyle","props","primary","focusRing","boxShadow","_focusVisible","_web","style","outlineWidth","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,IAAA,QAAA,UAAA;;AAEA,IAAMA,SAAS,GAAIC,SAAbD,SAAaC,CAAAA,KAAD,EAAgB;EAChC,IAAQC,OAAR,GAAoBD,KAAK,CAALA,KAAAA,CAApB,MAAA,CAAQC,OAAR;EACA,IAAMC,SAAS,GAAG,IAAI,CACpB;IACEC,SAAS,YAAKF,OAAO,CAAA,GAAA,CAAZ;EADX,CADoB,EAIpB;IACEE,SAAS,YAAKF,OAAO,CAAA,GAAA,CAAZ;EADX,CAJoB,CAAJ,CAAlB,KAAkB,CAAlB;EASA,OAAO;IACLG,aAAa,EAAE;MACbC,IAAI,EAAE;QAAEC,KAAK,EAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA;UAAkBC,YAAY,EAAE;QAAhC,CAAA;MAAP;IADO;EADV,CAAP;AAXF,CAAA;;AAkBA,eAAe;EACbR,SADa,EACbA,SADa;EAEbS,YAAY,EAAE;AAFD,CAAf","sourcesContent":["import { mode } from '../tools';\n\nconst baseStyle = (props: any) => {\n  const { primary } = props.theme.colors;\n  const focusRing = mode(\n    {\n      boxShadow: `${primary[400]} 0px 0px 0px 2px`,\n    },\n    {\n      boxShadow: `${primary[500]} 0px 0px 0px 2px`,\n    }\n  )(props);\n\n  return {\n    _focusVisible: {\n      _web: { style: { ...focusRing, outlineWidth: 0 } },\n    },\n  };\n};\n\nexport default {\n  baseStyle,\n  defaultProps: {},\n};\n"]},"metadata":{},"sourceType":"module"}