{"ast":null,"code":"var _jsxFileName = \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/components/index.helper.tsx\",\n    _this = this;\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/*\n * contents data section end\n *  */\nvar renderMinuteToHourTime = function renderMinuteToHourTime(time) {\n  if (time < 60) {\n    return __jsx(React.Fragment, null, time, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }\n    }, \"\\uBD84\"), ' ');\n  } else if (time % 60 === 0) {\n    var hour = Math.floor(time / 60);\n    return __jsx(React.Fragment, null, hour, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, \"\\uC2DC\\uAC04\"));\n  } else {\n    var _hour = Math.floor(time / 60);\n\n    var minute = time % 60;\n    return __jsx(React.Fragment, null, _hour, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, \"\\uC2DC\\uAC04\"), \" \", minute, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, \"\\uBD84\"));\n  }\n};\n\nvar renderMainCardData = function renderMainCardData(title, tag, oneLineComment, sessionStartTime, sessionEndTime) {\n  return {\n    mainCard: {\n      oneLineComment: oneLineComment,\n      tag: tag,\n      timeArrange: \"\".concat(sessionStartTime.utc(true).format('D일 a h:mm'), \" ~ \").concat(sessionEndTime.utc(true).format('D일 a h:mm')),\n      title: title\n    }\n  };\n};\n\nvar renderDeepComparationData = function renderDeepComparationData(deepValue) {\n  return {\n    deepComparation: {\n      criteria: {\n        value: INITIAL_DEEP_CRITERIA\n      },\n      renderEvaluation: function renderEvaluation() {\n        return deepValue >= INITIAL_DEEP_CRITERIA ? '좋아요' : '적어요';\n      },\n      renderTitle: function renderTitle() {\n        // 깊은 잠 비율 15% 초과 일때\n        return deepValue > INITIAL_DEEP_CRITERIA ? \"\\uAE4A\\uC740 \\uC7A0\\uC758 \\uBE44\\uC728\\uC774 \".concat(deepValue - INITIAL_DEEP_CRITERIA, \"% \\uB192\\uC544\\uC694.\") : \"\\uAE4A\\uC740 \\uC7A0\\uC758 \\uBE44\\uC728\\uC774 \\uC801\\uB2F9\\uD574\\uC694.\";\n      },\n      subTitle: '* 15% 이상이면 정상입니다.',\n      unit: '%',\n      user: {\n        category: '나의 깊은 잠',\n        value: deepValue\n      }\n    }\n  };\n};\n\nvar renderRemComparationData = function renderRemComparationData(remValue) {\n  return {\n    remComparation: {\n      criteria: {\n        rem: {\n          max: REM_CRITERIA_MAX,\n          min: REM_CRITERIA_MIN\n        },\n        value: REM_CRITERIA\n      },\n      renderEvaluation: function renderEvaluation() {\n        if (remValue > REM_CRITERIA_MAX) {\n          return '많아요';\n        } else if (remValue < REM_CRITERIA_MIN) {\n          return '적어요';\n        } else {\n          return '좋아요';\n        }\n      },\n      renderTitle: function renderTitle() {\n        if (remValue > REM_CRITERIA_MAX) {\n          return \"REM\\uC758 \\uBE44\\uC728\\uC774 \".concat(remValue - REM_CRITERIA_MAX, \"% \\uB192\\uC544\\uC694.\");\n        } else if (remValue < REM_CRITERIA_MIN) {\n          return \"REM\\uC758 \\uBE44\\uC728\\uC774 \".concat(REM_CRITERIA_MIN - remValue, \"% \\uB0AE\\uC544\\uC694.\");\n        } else {\n          return 'REM의 비율이 적당해요.';\n        }\n      },\n      subTitle: '* 20~25%면 정상입니다.',\n      unit: '%',\n      user: {\n        category: '나의 REM',\n        value: remValue\n      }\n    }\n  };\n};\n\nvar renderLatencyComparationData = function renderLatencyComparationData(latencyValue) {\n  return {\n    latencyComparation: {\n      criteria: {\n        value: LATENCY_CRITERIA\n      },\n      renderEvaluation: function renderEvaluation() {\n        return latencyValue > LATENCY_CRITERIA ? '많아요' : '좋아요';\n      },\n      renderTitle: function renderTitle() {\n        return latencyValue > LATENCY_CRITERIA ? \"\\uC7A0\\uB4DC\\uB294\\uB370 \\uD3C9\\uADE0\\uBCF4\\uB2E4 \".concat(latencyValue - LATENCY_CRITERIA, \"\\uBD84 \\uB354 \\uAC78\\uB824\\uC694.\") : \"\\uC7A0\\uB4DC\\uB294 \\uB370 \\uAC78\\uB9B0 \\uC2DC\\uAC04\\uC774 \\uC801\\uB2F9\\uD574\\uC694.\";\n      },\n      subTitle: '* 눈을 감고 30분 안에 잠들면 정상입니다.',\n      unit: '분',\n      user: {\n        category: '나의 잠드는 데\\n걸린 시간',\n        value: latencyValue\n      }\n    }\n  };\n};\n\nexport { renderMinuteToHourTime };","map":{"version":3,"names":["renderMinuteToHourTime","time","hour","Math","floor","minute","renderMainCardData","title","tag","oneLineComment","sessionStartTime","sessionEndTime","mainCard","timeArrange","utc","format","renderDeepComparationData","deepValue","deepComparation","criteria","value","INITIAL_DEEP_CRITERIA","renderEvaluation","renderTitle","subTitle","unit","user","category","renderRemComparationData","remValue","remComparation","rem","max","REM_CRITERIA_MAX","min","REM_CRITERIA_MIN","REM_CRITERIA","renderLatencyComparationData","latencyValue","latencyComparation","LATENCY_CRITERIA"],"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/components/index.helper.tsx"],"sourcesContent":["/*\n * contents data section end\n *  */\nconst renderMinuteToHourTime = (time: number) => {\n    if (time < 60) {\n        return (\n            <>\n                {time}\n                <span>분</span>{' '}\n            </>\n        );\n    } else if (time % 60 === 0) {\n        const hour = Math.floor(time / 60);\n        return (\n            <>\n                {hour}\n                <span>시간</span>\n            </>\n        );\n    } else {\n        const hour = Math.floor(time / 60);\n        const minute = time % 60;\n        return (\n            <>\n                {hour}\n                <span>시간</span> {minute}\n                <span>분</span>\n            </>\n        );\n    }\n};\n\nconst renderMainCardData = (\n    title: string,\n    tag: MainCardDataTagType,\n    oneLineComment: string,\n    sessionStartTime: Dayjs,\n    sessionEndTime: Dayjs,\n) => {\n    return {\n        mainCard: {\n            oneLineComment,\n            tag,\n            timeArrange: `${sessionStartTime\n                .utc(true)\n                .format('D일 a h:mm')} ~ ${sessionEndTime\n                .utc(true)\n                .format('D일 a h:mm')}`,\n            title,\n        },\n    };\n};\n\nconst renderDeepComparationData = (deepValue: number) => {\n    return {\n        deepComparation: {\n            criteria: {\n                value: INITIAL_DEEP_CRITERIA,\n            },\n            renderEvaluation: () => {\n                return deepValue >= INITIAL_DEEP_CRITERIA ? '좋아요' : '적어요';\n            },\n            renderTitle: () => {\n                // 깊은 잠 비율 15% 초과 일때\n                return deepValue > INITIAL_DEEP_CRITERIA\n                    ? `깊은 잠의 비율이 ${deepValue - INITIAL_DEEP_CRITERIA}% 높아요.`\n                    : `깊은 잠의 비율이 적당해요.`;\n            },\n            subTitle: '* 15% 이상이면 정상입니다.',\n            unit: '%',\n            user: {category: '나의 깊은 잠', value: deepValue},\n        },\n    };\n};\n\nconst renderRemComparationData = (remValue: number) => {\n    return {\n        remComparation: {\n            criteria: {\n                rem: {\n                    max: REM_CRITERIA_MAX,\n                    min: REM_CRITERIA_MIN,\n                },\n                value: REM_CRITERIA,\n            },\n            renderEvaluation: () => {\n                if (remValue > REM_CRITERIA_MAX) {\n                    return '많아요';\n                } else if (remValue < REM_CRITERIA_MIN) {\n                    return '적어요';\n                } else {\n                    return '좋아요';\n                }\n            },\n            renderTitle: () => {\n                if (remValue > REM_CRITERIA_MAX) {\n                    return `REM의 비율이 ${remValue - REM_CRITERIA_MAX}% 높아요.`;\n                } else if (remValue < REM_CRITERIA_MIN) {\n                    return `REM의 비율이 ${REM_CRITERIA_MIN - remValue}% 낮아요.`;\n                } else {\n                    return 'REM의 비율이 적당해요.';\n                }\n            },\n            subTitle: '* 20~25%면 정상입니다.',\n            unit: '%',\n            user: {category: '나의 REM', value: remValue},\n        },\n    };\n};\n\nconst renderLatencyComparationData = (latencyValue: number) => {\n    return {\n        latencyComparation: {\n            criteria: {\n                value: LATENCY_CRITERIA,\n            },\n            renderEvaluation: () => {\n                return latencyValue > LATENCY_CRITERIA ? '많아요' : '좋아요';\n            },\n            renderTitle: () => {\n                return latencyValue > LATENCY_CRITERIA\n                    ? `잠드는데 평균보다 ${latencyValue - LATENCY_CRITERIA}분 더 걸려요.`\n                    : `잠드는 데 걸린 시간이 적당해요.`;\n            },\n            subTitle: '* 눈을 감고 30분 안에 잠들면 정상입니다.',\n            unit: '분',\n            user: {\n                category: '나의 잠드는 데\\n걸린 시간',\n                value: latencyValue,\n            },\n        },\n    };\n};\n\n\nexport {renderMinuteToHourTime}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}