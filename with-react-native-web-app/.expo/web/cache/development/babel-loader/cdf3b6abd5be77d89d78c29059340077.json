{"ast":null,"code":"import _objectWithoutProperties from \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nvar _excluded = [\"orientation\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport Platform from \"react-native-web/dist/cjs/exports/Platform\";\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport Box from './../../primitives/Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nvar Divider = function Divider(props, ref) {\n  _s();\n\n  var _usePropsResolution = usePropsResolution('Divider', props, {}, {\n    resolveResponsively: ['thickness']\n  }),\n      orientation = _usePropsResolution.orientation,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded); //TODO: refactor for responsive prop\n\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Box, _extends({}, resolvedProps, {\n    ref: ref,\n    \"aria-orientation\": orientation //@ts-ignore web only role\n    ,\n    accessibilityRole: Platform.OS === 'web' ? 'separator' : undefined\n  }));\n};\n\n_s(Divider, \"VXbcY+yqd+OOZThlWHYsG8Ao+DU=\", false, function () {\n  return [usePropsResolution, useHasResponsiveProps];\n});\n\n_c = Divider;\nexport default /*#__PURE__*/_c3 = /*#__PURE__*/memo( /*#__PURE__*/_c2 = /*#__PURE__*/forwardRef(Divider));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Divider\");\n$RefreshReg$(_c2, \"%default%$memo\");\n$RefreshReg$(_c3, \"%default%\");\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/module/components/composites/Divider/index.js"],"names":["_extends","Object","i","arguments","source","target","Divider","orientation","resolvedProps","usePropsResolution","resolveResponsively","useHasResponsiveProps","ref","accessibilityRole","Platform","undefined","memo","forwardRef"],"mappings":";;;;;;AAAA,SAAA,QAAA,GAAoB;EAAEA,QAAQ,GAAGC,MAAM,CAANA,MAAAA,IAAiB,UAAA,MAAA,EAAkB;IAAE,KAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGC,SAAS,CAA7B,MAAA,EAAsCD,CAAtC,EAAA,EAA2C;MAAE,IAAIE,MAAM,GAAGD,SAAS,CAAtB,CAAsB,CAAtB;;MAA2B,KAAK,IAAL,GAAA,IAAA,MAAA,EAAwB;QAAE,IAAIF,MAAM,CAANA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAAJ,GAAIA,CAAJ,EAAuD;UAAEI,MAAM,CAANA,GAAM,CAANA,GAAcD,MAAM,CAApBC,GAAoB,CAApBA;QAA4B;MAAE;IAAE;;IAAC,OAAA,MAAA;EAA5OL,CAAAA;;EAA8P,OAAOA,QAAQ,CAARA,KAAAA,CAAAA,IAAAA,EAAP,SAAOA,CAAP;AAAyC;;AAE7T,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;;AAEA,SAAA,kBAAA,QAAA,8BAAA;AACA,OAAA,GAAA,MAAA,wBAAA;AACA,SAAA,qBAAA,QAAA,sCAAA;;AAEA,IAAMM,OAAO,GAAG,SAAVA,OAAU,CAAA,KAAA,EAAA,GAAA,EAAgB;EAAA,EAAA;;EAC9B,IAAA,mBAAA,GAGIG,kBAAkB,CAAA,SAAA,EAAA,KAAA,EAAA,EAAA,EAAuB;IAC3CC,mBAAmB,EAAE,CAAA,WAAA;EADsB,CAAvB,CAHtB;EAAA,IACEH,WADF,GAAA,mBAAA,CAAA,WAAA;EAAA,IAEKC,aAFL,GAAA,wBAAA,CAAA,mBAAA,EAD8B,SAC9B,CAAA,CAD8B,CAM1B;;;EAEJ,IAAIG,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EAED,OAAO,aAAa,KAAK,CAAL,aAAA,CAAA,GAAA,EAAyBX,QAAQ,CAAA,EAAA,EAAA,aAAA,EAAoB;IACvEY,GAAG,EADoE,GAAA;IAEvE,oBAFuE,WAAA,CAEvC;IAFuC;IAIvEC,iBAAiB,EAAEC,QAAQ,CAARA,EAAAA,KAAAA,KAAAA,GAAAA,WAAAA,GAAsCC;EAJc,CAApB,CAAjC,CAApB;AAZF,CAAA;;GAAMT,O;UAIAG,kB,EAIAE,qB;;;KARAL,O;AAoBN,eAAe,aAAf,GAAA,GAAA,aAA4BU,IAAI,EAAE,aAAF,GAAA,GAAA,aAAeC,UAAU,CAAzD,OAAyD,CAAzB,CAAhC","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport Box from './../../primitives/Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Divider = (props, ref) => {\n  const {\n    orientation,\n    ...resolvedProps\n  } = usePropsResolution('Divider', props, {}, {\n    resolveResponsively: ['thickness']\n  }); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Box, _extends({}, resolvedProps, {\n    ref: ref,\n    \"aria-orientation\": orientation //@ts-ignore web only role\n    ,\n    accessibilityRole: Platform.OS === 'web' ? 'separator' : undefined\n  }));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Divider));\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}