{"ast":null,"code":"import { mode, getColorScheme } from '../tools';\nimport Platform from \"react-native-web/dist/cjs/exports/Platform\";\n\nvar baseStyle = function baseStyle(props) {\n  var colorScheme = getColorScheme(props); //TODO: Use of Platform can be removed\n\n  return {\n    _disabled: {\n      opacity: 0.4\n    },\n    _invalid: {\n      borderWidth: 1,\n      borderRadius: 16,\n      borderColor: 'danger.600'\n    },\n    offTrackColor: mode(Platform.OS !== 'ios' ? 'gray.400' : 'gray.200', Platform.OS !== 'ios' ? 'gray.700' : 'gray.600')(props),\n    onTrackColor: mode(Platform.OS !== 'ios' ? \"\".concat(colorScheme, \".300\") : \"\".concat(colorScheme, \".500\"), Platform.OS !== 'ios' ? \"\".concat(colorScheme, \".700\") : \"\".concat(colorScheme, \".500\"))(props),\n    onThumbColor: mode(Platform.OS !== 'ios' ? \"\".concat(colorScheme, \".600\") : 'white', Platform.OS !== 'ios' ? \"\".concat(colorScheme, \".500\") : 'white')(props),\n    offThumbColor: mode(Platform.OS !== 'ios' ? 'gray.100' : 'white', Platform.OS !== 'ios' ? 'gray.200' : 'white')(props)\n  };\n};\n\nvar sizes = {\n  sm: {\n    style: {\n      transform: [{\n        scale: 0.75\n      }]\n    }\n  },\n  md: {},\n  lg: {\n    style: {\n      transform: [{\n        scale: 1.25\n      }]\n    },\n    margin: 1\n  }\n};\nvar defaultProps = {\n  size: 'md',\n  colorScheme: 'primary'\n};\nexport default {\n  baseStyle: baseStyle,\n  sizes: sizes,\n  defaultProps: defaultProps\n};\n; // Wrapped in an IIFE to avoid polluting the global scope\n\n;\n\n(function () {\n  var _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n  // to extract CSS. For backwards compatibility, we need to check we're in a\n  // browser context before continuing.\n\n\n  if (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n  '$RefreshHelpers$' in self) {\n    // @ts-ignore __webpack_module__ is global\n    var currentExports = __webpack_module__.exports; // @ts-ignore __webpack_module__ is global\n\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n    // templating and execution.\n\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id); // A module can be accepted automatically based on its exports, e.g. when\n    // it is a Refresh Boundary.\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      // Save the previous exports on update so we can compare the boundary\n      // signatures.\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      }); // Unconditionally accept an update to this module, we'll check if it's\n      // still a Refresh Boundary later.\n      // @ts-ignore importMeta is replaced in the loader\n\n\n      import.meta.webpackHot.accept(); // This field is set when the previous version of this module was a\n      // Refresh Boundary, letting us know we need to check for invalidation or\n      // enqueue an update.\n\n      if (prevExports !== null) {\n        // A boundary can become ineligible if its exports are incompatible\n        // with the previous exports.\n        //\n        // For example, if you add/remove/change exports, we'll want to\n        // re-execute the importing modules, and force those components to\n        // re-render. Similarly, if you convert a class component to a\n        // function, we want to invalidate the boundary.\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      // Since we just executed the code for the module, it's possible that the\n      // new exports made it ineligible for being a boundary.\n      // We only care about the case when we were _previously_ a boundary,\n      // because we already accepted this update (accidental side effect).\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/lib/module/theme/v33x-theme/components/switch.js"],"names":["baseStyle","colorScheme","getColorScheme","_disabled","opacity","_invalid","borderWidth","borderRadius","borderColor","offTrackColor","mode","Platform","onTrackColor","onThumbColor","offThumbColor","sizes","sm","style","transform","scale","md","lg","margin","defaultProps","size"],"mappings":"AAAA,SAAA,IAAA,EAAA,cAAA,QAAA,UAAA;;;AAGA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAAA,KAAA,EAAS;EACzB,IAAMC,WAAW,GAAGC,cAAc,CADT,KACS,CAAlC,CADyB,CACkB;;EAE3C,OAAO;IACLC,SAAS,EAAE;MACTC,OAAO,EAAE;IADA,CADN;IAILC,QAAQ,EAAE;MACRC,WAAW,EADH,CAAA;MAERC,YAAY,EAFJ,EAAA;MAGRC,WAAW,EAAE;IAHL,CAJL;IASLC,aAAa,EAAEC,IAAI,CAACC,QAAQ,CAARA,EAAAA,KAAAA,KAAAA,GAAAA,UAAAA,GAAD,UAAA,EAAkDA,QAAQ,CAARA,EAAAA,KAAAA,KAAAA,GAAAA,UAAAA,GAAtDD,UAAI,CAAJA,CATV,KASUA,CATV;IAULE,YAAY,EAAEF,IAAI,CAACC,QAAQ,CAARA,EAAAA,KAAAA,KAAAA,GAAwB,GAAA,MAAA,CAAA,WAAA,EAAxBA,MAAwB,CAAxBA,GAAyD,GAAA,MAAA,CAAA,WAAA,EAA1D,MAA0D,CAA1D,EAA0FA,QAAQ,CAARA,EAAAA,KAAAA,KAAAA,GAAwB,GAAA,MAAA,CAAA,WAAA,EAAxBA,MAAwB,CAAxBA,GAAyD,GAAA,MAAA,CAAA,WAAA,EAAvJD,MAAuJ,CAAnJ,CAAJA,CAVT,KAUSA,CAVT;IAWLG,YAAY,EAAEH,IAAI,CAACC,QAAQ,CAARA,EAAAA,KAAAA,KAAAA,GAAwB,GAAA,MAAA,CAAA,WAAA,EAAxBA,MAAwB,CAAxBA,GAAD,OAAA,EAAmEA,QAAQ,CAARA,EAAAA,KAAAA,KAAAA,GAAwB,GAAA,MAAA,CAAA,WAAA,EAAxBA,MAAwB,CAAxBA,GAAvED,OAAI,CAAJA,CAXT,KAWSA,CAXT;IAYLI,aAAa,EAAEJ,IAAI,CAACC,QAAQ,CAARA,EAAAA,KAAAA,KAAAA,GAAAA,UAAAA,GAAD,OAAA,EAA+CA,QAAQ,CAARA,EAAAA,KAAAA,KAAAA,GAAAA,UAAAA,GAAnDD,OAAI,CAAJA,CAAAA,KAAAA;EAZV,CAAP;AAHF,CAAA;;AAmBA,IAAMK,KAAK,GAAG;EACZC,EAAE,EAAE;IACFC,KAAK,EAAE;MACLC,SAAS,EAAE,CAAC;QACVC,KAAK,EAAE;MADG,CAAD;IADN;EADL,CADQ;EAQZC,EAAE,EARU,EAAA;EASZC,EAAE,EAAE;IACFJ,KAAK,EAAE;MACLC,SAAS,EAAE,CAAC;QACVC,KAAK,EAAE;MADG,CAAD;IADN,CADL;IAMFG,MAAM,EAAE;EANN;AATQ,CAAd;AAkBA,IAAMC,YAAY,GAAG;EACnBC,IAAI,EADe,IAAA;EAEnBvB,WAAW,EAAE;AAFM,CAArB;AAIA,eAAe;EACbD,SAAS,EADI,SAAA;EAEbe,KAAK,EAFQ,KAAA;EAGbQ,YAAY,EAAZA;AAHa,CAAf","sourcesContent":["import { mode, getColorScheme } from '../tools';\nimport { Platform } from 'react-native';\n\nconst baseStyle = props => {\n  const colorScheme = getColorScheme(props); //TODO: Use of Platform can be removed\n\n  return {\n    _disabled: {\n      opacity: 0.4\n    },\n    _invalid: {\n      borderWidth: 1,\n      borderRadius: 16,\n      borderColor: 'danger.600'\n    },\n    offTrackColor: mode(Platform.OS !== 'ios' ? 'gray.400' : 'gray.200', Platform.OS !== 'ios' ? 'gray.700' : 'gray.600')(props),\n    onTrackColor: mode(Platform.OS !== 'ios' ? \"\".concat(colorScheme, \".300\") : \"\".concat(colorScheme, \".500\"), Platform.OS !== 'ios' ? \"\".concat(colorScheme, \".700\") : \"\".concat(colorScheme, \".500\"))(props),\n    onThumbColor: mode(Platform.OS !== 'ios' ? \"\".concat(colorScheme, \".600\") : 'white', Platform.OS !== 'ios' ? \"\".concat(colorScheme, \".500\") : 'white')(props),\n    offThumbColor: mode(Platform.OS !== 'ios' ? 'gray.100' : 'white', Platform.OS !== 'ios' ? 'gray.200' : 'white')(props)\n  };\n};\n\nconst sizes = {\n  sm: {\n    style: {\n      transform: [{\n        scale: 0.75\n      }]\n    }\n  },\n  md: {},\n  lg: {\n    style: {\n      transform: [{\n        scale: 1.25\n      }]\n    },\n    margin: 1\n  }\n};\nconst defaultProps = {\n  size: 'md',\n  colorScheme: 'primary'\n};\nexport default {\n  baseStyle,\n  sizes,\n  defaultProps\n};\n//# sourceMappingURL=switch.js.map"]},"metadata":{},"sourceType":"module"}