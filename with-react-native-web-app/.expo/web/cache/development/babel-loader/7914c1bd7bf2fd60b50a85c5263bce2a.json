{"ast":null,"code":"var _this = this;\n\nvar _excluded = [\"visible\", \"onTransitionComplete\"];\nvar _jsxFileName = \"/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/components/composites/Transitions/PresenceTransition.tsx\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { ExitAnimationContext } from '../../primitives/Overlay/ExitAnimationContext';\nimport { Transition } from './Transition';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar PresenceTransition = function PresenceTransition(_ref, ref) {\n  var _ref$visible = _ref.visible,\n      visible = _ref$visible === void 0 ? false : _ref$visible,\n      _onTransitionComplete = _ref.onTransitionComplete,\n      rest = _objectWithoutProperties(_ref, _excluded); // const [animationExited, setAnimationExited] = React.useState(!visible);\n\n\n  var _React$useContext = React.useContext(ExitAnimationContext),\n      setExited = _React$useContext.setExited; //TODO: refactor for responsive prop\n\n\n  if (useHasResponsiveProps(rest)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Transition, _objectSpread(_objectSpread({\n    visible: visible,\n    onTransitionComplete: function onTransitionComplete(state) {\n      if (state === 'exited') {\n        setExited(true);\n      } else {\n        setExited(false);\n      }\n\n      _onTransitionComplete && _onTransitionComplete(state);\n    }\n  }, rest), {}, {\n    ref: ref\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, _this);\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(PresenceTransition));","map":{"version":3,"sources":["/Users/jun/Desktop/dev/react-practice/with-react-native-web-app/node_modules/native-base/src/components/composites/Transitions/PresenceTransition.tsx"],"names":["PresenceTransition","visible","onTransitionComplete","rest","setExited","React","useHasResponsiveProps","state","ref","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,SAAA,oBAAA,QAAA,+CAAA;AACA,SAAA,UAAA,QAAA,cAAA;AAEA,SAAA,qBAAA,QAAA,sCAAA;;;AAEA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA,IAAA,EAAA,GAAA,EAGtB;EAFH,mBAEG,IAFH,CAAEC,OAAF;EAAA,IAAEA,OAAF,6BAAA,KAAA;EAAA,IAAmBC,qBAAnB,GAEG,IAFH,CAAmBA,oBAAnB;EAAA,IAA4CC,IAA5C,GAEG,wBAAA,CAAA,IAAA,EAAA,SAAA,CAFH,CAEG,CACH;;;EAEA,wBAAsBE,KAAK,CAALA,UAAAA,CAHnB,oBAGmBA,CAAtB;EAAA,IAAQD,SAAR,qBAAQA,SAAR,CAHG,CAIH;;;EACA,IAAIE,qBAAqB,CAAzB,IAAyB,CAAzB,EAAiC;IAC/B,OAAA,IAAA;EACD;;EAED,OAAA,aACE,OAAA,CAAA,UAAA,EAAA,aAAA,CAAA,aAAA,CAAA;IACE,OAAO,EADT,OAAA;IAEE,oBAAoB,EAAGC,8BAAAA,KAAD,EAAW;MAC/B,IAAIA,KAAK,KAAT,QAAA,EAAwB;QACtBH,SAAS,CAATA,IAAS,CAATA;MADF,CAAA,MAEO;QACLA,SAAS,CAATA,KAAS,CAATA;MACD;;MACDF,qBAAoB,IAAIA,qBAAoB,CAA5CA,KAA4C,CAA5CA;IACD;EATH,CAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA;IAWE,GAAG,EAAEM;EAXP,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;IAAA,QAAA,EAAA,YAAA;IAAA,UAAA,EAAA,EAAA;IAAA,YAAA,EAAA;EAAA,CAAA,EADF,KACE,CADF;AAZF,CAAA;;AA6BA,eAAA,aAAeC,IAAI,EAAA,aAACC,UAAU,CAA9B,kBAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { ExitAnimationContext } from '../../primitives/Overlay/ExitAnimationContext';\nimport { Transition } from './Transition';\nimport type { IPresenceTransitionProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PresenceTransition = (\n  { visible = false, onTransitionComplete, ...rest }: IPresenceTransitionProps,\n  ref: any\n) => {\n  // const [animationExited, setAnimationExited] = React.useState(!visible);\n\n  const { setExited } = React.useContext(ExitAnimationContext);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(rest)) {\n    return null;\n  }\n\n  return (\n    <Transition\n      visible={visible}\n      onTransitionComplete={(state) => {\n        if (state === 'exited') {\n          setExited(true);\n        } else {\n          setExited(false);\n        }\n        onTransitionComplete && onTransitionComplete(state);\n      }}\n      {...rest}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(PresenceTransition));\n"]},"metadata":{},"sourceType":"module"}